<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陈志军</title>
  
  <subtitle>物来顺应，未来不迎，当时不杂，既过不恋</subtitle>
  <link href="http://chenzhijun.top/rss.xml" rel="self"/>
  
  <link href="http://chenzhijun.top/"/>
  <updated>2023-07-04T14:02:37.732Z</updated>
  <id>http://chenzhijun.top/</id>
  
  <author>
    <name>陈志军</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Envoy 介绍与用法</title>
    <link href="http://chenzhijun.top/2023/07/03/envoy-basic/"/>
    <id>http://chenzhijun.top/2023/07/03/envoy-basic/</id>
    <published>2023-07-03T12:24:37.000Z</published>
    <updated>2023-07-04T14:02:37.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Envoy-使用"><a href="#Envoy-使用" class="headerlink" title="Envoy 使用"></a>Envoy 使用</h1><h2 id="Envoy的介绍"><a href="#Envoy的介绍" class="headerlink" title="Envoy的介绍"></a>Envoy的介绍</h2><p>Envoy诞生于云原生流行之时，当微服务开发架构成为主流，需要管理和维护的应用越来越多，服务与服务之间的相互通信越来越复杂。Envoy的出现，提供了一个通用的代理层，处理不同服务之间的网络通信，并且通过强大的控制平台来管理这些通信。</p><p>Envoy是一个面向大规模现代服务架构而设计的7层负载和消息总线。主要信念是认为网络对应用程序应该是透明的。当出现网络和应用问题时，应该能够轻松找到问题的原因。其实Envoy的本质是网络代理，它可以代理你的应用服务。它主要的功能涵盖：L3/L4/L7代理、HTTP/2的支持、HTTP/3目前处于alpha阶段、GRPC支持、服务发现和动态配置、健康检查、负载均衡、流量管理、边缘代理支持、可观测性。</p><h2 id="Envoy的安装"><a href="#Envoy的安装" class="headerlink" title="Envoy的安装"></a>Envoy的安装</h2><p>目前主流的服务网格是Istio，Envoy作为它的网络代理一部分。实际上，Envoy可以单独作为一个代理服务，部署在Kubernetes集群中。</p><p>首先我们准备一份Envoy的配置文件，为之后创建configmap：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置文件：envoy.yaml</span></span><br><span class="line"><span class="attr">admin:</span></span><br><span class="line">  <span class="attr">address:</span></span><br><span class="line">    <span class="attr">socket_address:</span> &#123; <span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>, <span class="attr">port_value:</span> <span class="number">9901</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">static_resources:</span></span><br><span class="line">  <span class="attr">listeners:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">listener_0</span></span><br><span class="line">      <span class="attr">address:</span></span><br><span class="line">        <span class="attr">socket_address:</span> &#123; <span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>, <span class="attr">port_value:</span> <span class="number">10000</span> &#125;</span><br><span class="line">      <span class="attr">filter_chains:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">filters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy.filters.network.http_connection_manager</span></span><br><span class="line">              <span class="attr">typed_config:</span></span><br><span class="line">                <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span></span><br><span class="line">                <span class="attr">stat_prefix:</span> <span class="string">ingress_http</span></span><br><span class="line">                <span class="attr">codec_type:</span> <span class="string">AUTO</span></span><br><span class="line">                <span class="attr">http_filters:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy.filters.http.router</span></span><br><span class="line">                    <span class="attr">typed_config:</span></span><br><span class="line">                      <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.extensions.filters.http.router.v3.Router</span></span><br><span class="line">                <span class="attr">route_config:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">local_route</span></span><br><span class="line">                  <span class="attr">virtual_hosts:</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">local_service</span></span><br><span class="line">                      <span class="attr">domains:</span> [<span class="string">&quot;*&quot;</span>]</span><br><span class="line">                      <span class="attr">routes:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">match:</span> &#123; <span class="attr">prefix:</span> <span class="string">&quot;/&quot;</span> &#125;</span><br><span class="line">                          <span class="attr">route:</span> &#123; <span class="attr">cluster:</span> <span class="string">some_service</span> &#125;</span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test_service</span></span><br><span class="line">                      <span class="attr">domains:</span> [<span class="string">&quot;ng2.ocft.com&quot;</span>]</span><br><span class="line">                      <span class="attr">routes:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">match:</span> &#123; <span class="attr">prefix:</span> <span class="string">&quot;/&quot;</span> &#125;</span><br><span class="line">                          <span class="attr">route:</span> &#123; <span class="attr">cluster:</span> <span class="string">test_service</span> &#125;</span><br><span class="line">  <span class="attr">clusters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">some_service</span></span><br><span class="line">      <span class="attr">connect_timeout:</span> <span class="number">0.</span><span class="string">25s</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">LOGICAL_DNS</span></span><br><span class="line">      <span class="attr">lb_policy:</span> <span class="string">ROUND_ROBIN</span></span><br><span class="line">      <span class="attr">load_assignment:</span></span><br><span class="line">        <span class="attr">cluster_name:</span> <span class="string">some_service</span></span><br><span class="line">        <span class="attr">endpoints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">lb_endpoints:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">endpoint:</span></span><br><span class="line">                  <span class="attr">address:</span></span><br><span class="line">                    <span class="attr">socket_address:</span></span><br><span class="line">                      <span class="attr">address:</span> <span class="string">nginx1</span></span><br><span class="line">                      <span class="attr">port_value:</span> <span class="number">80</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test_service</span></span><br><span class="line">      <span class="attr">connect_timeout:</span> <span class="number">0.</span><span class="string">25s</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">LOGICAL_DNS</span></span><br><span class="line">      <span class="attr">lb_policy:</span> <span class="string">ROUND_ROBIN</span></span><br><span class="line">      <span class="attr">load_assignment:</span></span><br><span class="line">        <span class="attr">cluster_name:</span> <span class="string">test_service</span></span><br><span class="line">        <span class="attr">endpoints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">lb_endpoints:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">endpoint:</span></span><br><span class="line">                  <span class="attr">address:</span></span><br><span class="line">                    <span class="attr">socket_address:</span></span><br><span class="line">                      <span class="attr">address:</span> <span class="string">nginx2</span></span><br><span class="line">                      <span class="attr">port_value:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>接下来定义Envoy：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># envoy-deploy.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">envoy</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">envoyproxy/envoy-dev</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">envoy</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy-config</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">&quot;/etc/envoy&quot;</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy-config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">envoy-config</span></span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl create deploy nginx1 --iamge=nginx:alpine</span></span><br><span class="line">kubectl create configmap envoy-config --from-file=envoy.yaml</span><br><span class="line">kubectl create -f envoy-deploy.yaml</span><br><span class="line">kubectl expose deploy envoy --selector run=envoy --port=10000 --type=NodePort</span><br></pre></td></tr></table></figure><p>现在你可以通过访问<code>curl localhost:10000</code>来访问服务了。</p><blockquote><p>ps: 你可以把9901端口代理出来，然后访问envoy的管理台页面；envoy中的配置文件，需要创建deployment之后，创建svc，不然会出现访问不到。</p></blockquote><h2 id="Envoy的术语"><a href="#Envoy的术语" class="headerlink" title="Envoy的术语"></a>Envoy的术语</h2><blockquote><p>参考：</p><p>原文：<a href="https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/intro/terminology">https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/intro/terminology</a></p><p>中文：<a href="https://cloudnative.to/envoy/intro/arch_overview/intro/terminology.html">https://cloudnative.to/envoy/intro/arch_overview/intro/terminology.html</a></p></blockquote><p>关于Envoy的几个专业术语：</p><ol><li>Host：主机，能够进行网络通信的实体。主要指引用程序</li><li>Downstream：下游</li><li>Upstream：上游</li><li>Listener：监听器</li><li>Cluster：集群</li><li>Mesh：网格</li><li>Runtime configuration：运行时配置</li></ol><p>Envoy主要使用单进程-多线程架构。一个primary线程处理各种轻量协调任务，同时多个worker线程处理监听、过滤、转发。建议将worker线程数配置为物理机器的线程数。</p><h2 id="Envoy的基本配置"><a href="#Envoy的基本配置" class="headerlink" title="Envoy的基本配置"></a>Envoy的基本配置</h2><p>以下是一份完整envoy的TCP/HTTP配置文档：</p><ol><li>创建configmap</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># envoy-config.yaml</span></span><br><span class="line"><span class="attr">admin:</span></span><br><span class="line">  <span class="attr">address:</span></span><br><span class="line">    <span class="attr">socket_address:</span> &#123; <span class="attr">address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>, <span class="attr">port_value:</span> <span class="number">9901</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">static_resources:</span></span><br><span class="line">  <span class="attr">listeners:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http_listener</span></span><br><span class="line">      <span class="attr">address:</span></span><br><span class="line">        <span class="attr">socket_address:</span> </span><br><span class="line">          <span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">          <span class="attr">port_value:</span> <span class="number">10000</span> </span><br><span class="line">      <span class="attr">filter_chains:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">filters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy.filters.network.http_connection_manager</span></span><br><span class="line">              <span class="attr">typed_config:</span></span><br><span class="line">                <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span></span><br><span class="line">                <span class="attr">stat_prefix:</span> <span class="string">ingress_http</span></span><br><span class="line">                <span class="attr">codec_type:</span> <span class="string">AUTO</span></span><br><span class="line">                <span class="attr">http_filters:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy.filters.http.router</span></span><br><span class="line">                    <span class="attr">typed_config:</span></span><br><span class="line">                      <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.extensions.filters.http.router.v3.Router</span></span><br><span class="line">                <span class="attr">route_config:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">local_route</span></span><br><span class="line">                  <span class="attr">virtual_hosts:</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ng1_service</span></span><br><span class="line">                      <span class="attr">domains:</span> [<span class="string">&quot;*&quot;</span>]</span><br><span class="line">                      <span class="attr">routes:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">match:</span> &#123; <span class="attr">prefix:</span> <span class="string">&quot;/&quot;</span> &#125;</span><br><span class="line">                          <span class="attr">route:</span> &#123; <span class="attr">cluster:</span> <span class="string">ng1_service</span> &#125;</span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ng2_service</span></span><br><span class="line">                      <span class="attr">domains:</span> [<span class="string">&quot;ng2.chenzhijun.top&quot;</span>]</span><br><span class="line">                      <span class="attr">routes:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">match:</span> &#123; <span class="attr">prefix:</span> <span class="string">&quot;/&quot;</span> &#125;</span><br><span class="line">                          <span class="attr">route:</span> &#123; <span class="attr">cluster:</span> <span class="string">ng2_service</span> &#125;</span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp_listener</span></span><br><span class="line">      <span class="attr">address:</span></span><br><span class="line">        <span class="attr">socket_address:</span></span><br><span class="line">          <span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">          <span class="attr">port_value:</span> <span class="number">5236</span></span><br><span class="line">      <span class="attr">filter_chains:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">filters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy.filters.network.tcp_proxy</span></span><br><span class="line">              <span class="attr">typed_config:</span></span><br><span class="line">                <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy</span></span><br><span class="line">                <span class="attr">stat_prefix:</span> <span class="string">tcp_proxy</span></span><br><span class="line">                <span class="attr">cluster:</span> <span class="string">proxy_cluster</span></span><br><span class="line">  <span class="attr">clusters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ng1_service</span></span><br><span class="line">      <span class="attr">connect_timeout:</span> <span class="number">0.</span><span class="string">25s</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">LOGICAL_DNS</span></span><br><span class="line">      <span class="attr">lb_policy:</span> <span class="string">ROUND_ROBIN</span></span><br><span class="line">      <span class="attr">load_assignment:</span></span><br><span class="line">        <span class="attr">cluster_name:</span> <span class="string">ng1_service</span></span><br><span class="line">        <span class="attr">endpoints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">lb_endpoints:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">endpoint:</span></span><br><span class="line">                  <span class="attr">address:</span></span><br><span class="line">                    <span class="attr">socket_address:</span></span><br><span class="line">                      <span class="attr">address:</span> <span class="string">nginx1</span></span><br><span class="line">                      <span class="attr">port_value:</span> <span class="number">80</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ng2_service</span></span><br><span class="line">      <span class="attr">connect_timeout:</span> <span class="number">0.</span><span class="string">25s</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">LOGICAL_DNS</span></span><br><span class="line">      <span class="attr">lb_policy:</span> <span class="string">ROUND_ROBIN</span></span><br><span class="line">      <span class="attr">load_assignment:</span></span><br><span class="line">        <span class="attr">cluster_name:</span> <span class="string">ng2_service</span></span><br><span class="line">        <span class="attr">endpoints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">lb_endpoints:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">endpoint:</span></span><br><span class="line">                  <span class="attr">address:</span></span><br><span class="line">                    <span class="attr">socket_address:</span></span><br><span class="line">                      <span class="attr">address:</span> <span class="string">nginx2</span></span><br><span class="line">                      <span class="attr">port_value:</span> <span class="number">80</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">proxy_cluster</span></span><br><span class="line">      <span class="attr">connect_timeout:</span> <span class="number">0.</span><span class="string">25s</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">strict_dns</span></span><br><span class="line">      <span class="attr">lb_policy:</span> <span class="string">round_robin</span></span><br><span class="line">      <span class="attr">load_assignment:</span></span><br><span class="line">        <span class="attr">cluster_name:</span> <span class="string">proxy_cluster</span></span><br><span class="line">        <span class="attr">endpoints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">lb_endpoints:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">endpoint:</span></span><br><span class="line">                  <span class="attr">address:</span></span><br><span class="line">                    <span class="attr">socket_address:</span></span><br><span class="line">                      <span class="attr">address:</span> <span class="number">10.59</span><span class="number">.100</span><span class="number">.96</span></span><br><span class="line">                      <span class="attr">port_value:</span> <span class="number">5236</span></span><br><span class="line">                      </span><br><span class="line"><span class="comment"># kubectl create cm envoy-config --from-file=envoy.yaml                     </span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建deploy</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#envoy-deploy.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">envoy</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="number">10.59</span><span class="number">.100</span><span class="number">.108</span><span class="string">/cbt-team/envoyproxy/envoy-dev</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">envoy</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5236</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy-config</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">&quot;/etc/envoy&quot;</span></span><br><span class="line"><span class="comment">#          readOnly: true</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy-config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">envoy-config</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">image-secret</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">#k apply -f envoy-deploy.yaml</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建service：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># envoy-svc.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">envoy</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">port-10000</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30574</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">10000</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">10000</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">port-9901</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30575</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9901</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9901</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">port-5236</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30578</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5236</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">5236</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># kubectl apply -f envoy-svc.yaml</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li>对应服务创建，服务有TCP服务：10.59.100.96:5236，两个nginx deployment服务 nginx1, nginx2。这块可以直接使用kubectl create deploy; kubectl expose 创建就行。不做多的说明。10.59.100.96:5236是我用本地启动的一个MySQL服务。</li></ol><p><img src="/images/qiniu/image-20230703174939882.png" alt="image-20230703174939882"></p><p>之后就可以测试服务是否正常了。用对应的主机ip和主机NodePort端口就行。</p><h2 id="Envoy的动态配置"><a href="#Envoy的动态配置" class="headerlink" title="Envoy的动态配置"></a>Envoy的动态配置</h2><ol><li>配置文件 envoy.yaml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># envoy.yaml</span></span><br><span class="line"><span class="attr">node:</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">envoy_front_proxy</span></span><br><span class="line">  <span class="attr">cluster:</span> <span class="string">my_Cluster</span></span><br><span class="line"><span class="attr">admin:</span></span><br><span class="line">  <span class="attr">address:</span></span><br><span class="line">    <span class="attr">socket_address:</span> &#123; <span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>, <span class="attr">port_value:</span> <span class="number">9901</span> &#125;</span><br><span class="line"><span class="attr">dynamic_resources:</span></span><br><span class="line">  <span class="attr">lds_config:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/etc/envoy/conf.d/lds.yaml</span></span><br><span class="line">  <span class="attr">cds_config:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/etc/envoy/conf.d/cds.yaml</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>lds.yaml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lds.yaml</span></span><br><span class="line"><span class="attr">resources:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.config.listener.v3.Listener</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">http_listener</span></span><br><span class="line">  <span class="attr">address:</span></span><br><span class="line">    <span class="attr">socket_address:</span> &#123; <span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>, <span class="attr">port_value:</span> <span class="number">10000</span> &#125;</span><br><span class="line">  <span class="attr">filter_chains:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">filters:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">envoy.filters.network.http_connection_manager</span></span><br><span class="line">      <span class="attr">typed_config:</span></span><br><span class="line">        <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span></span><br><span class="line">        <span class="attr">stat_prefix:</span> <span class="string">ingress_http</span></span><br><span class="line">        <span class="attr">access_log:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">envoy.access_loggers.file</span></span><br><span class="line">          <span class="attr">typed_config:</span></span><br><span class="line">            <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/tmp/access.log</span></span><br><span class="line">        <span class="attr">codec_type:</span> <span class="string">AUTO</span></span><br><span class="line">        <span class="attr">route_config:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">local_route</span></span><br><span class="line">          <span class="attr">virtual_hosts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ng1_service</span></span><br><span class="line">            <span class="attr">domains:</span> [<span class="string">&quot;*&quot;</span>]</span><br><span class="line">            <span class="attr">routes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">                <span class="attr">prefix:</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">              <span class="attr">route:</span></span><br><span class="line">                <span class="attr">cluster:</span> <span class="string">ng1_service</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ng2_service</span></span><br><span class="line">            <span class="attr">domains:</span> [<span class="string">&quot;ng2.ocft.com&quot;</span>]</span><br><span class="line">            <span class="attr">routes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">                <span class="attr">prefix:</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">              <span class="attr">route:</span></span><br><span class="line">                <span class="attr">cluster:</span> <span class="string">ng2_service</span></span><br><span class="line">        <span class="attr">http_filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy.filters.http.router</span></span><br><span class="line">          <span class="attr">typed_config:</span></span><br><span class="line">            <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.extensions.filters.http.router.v3.Router</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.config.listener.v3.Listener</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tcp_listener</span></span><br><span class="line">  <span class="attr">address:</span></span><br><span class="line">    <span class="attr">socket_address:</span> &#123; <span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>, <span class="attr">port_value:</span> <span class="number">5236</span> &#125;</span><br><span class="line">  <span class="attr">filter_chains:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">filters:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy.filters.network.tcp_proxy</span></span><br><span class="line">        <span class="attr">typed_config:</span></span><br><span class="line">          <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy</span></span><br><span class="line">          <span class="attr">stat_prefix:</span> <span class="string">tcp_proxy</span></span><br><span class="line">          <span class="attr">cluster:</span> <span class="string">proxy_cluster</span></span><br><span class="line">          <span class="attr">access_log:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">envoy.access_loggers.file</span></span><br><span class="line">            <span class="attr">typed_config:</span></span><br><span class="line">              <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/tmp/access-tcp.log</span></span><br></pre></td></tr></table></figure><ol start="3"><li>cds.yaml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cds.yaml</span></span><br><span class="line"><span class="attr">resources:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.config.cluster.v3.Cluster</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ng1_service</span></span><br><span class="line">  <span class="attr">connect_timeout:</span> <span class="string">1s</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LOGICAL_DNS</span></span><br><span class="line">  <span class="attr">lb_policy:</span> <span class="string">ROUND_ROBIN</span></span><br><span class="line">  <span class="attr">load_assignment:</span></span><br><span class="line">    <span class="attr">cluster_name:</span> <span class="string">ng1_service</span></span><br><span class="line">    <span class="attr">endpoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">lb_endpoints:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">endpoint:</span></span><br><span class="line">          <span class="attr">address:</span></span><br><span class="line">            <span class="attr">socket_address:</span></span><br><span class="line">              <span class="attr">address:</span> <span class="string">nginx1</span></span><br><span class="line">              <span class="attr">port_value:</span> <span class="number">80</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.config.cluster.v3.Cluster</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ng2_service</span></span><br><span class="line">  <span class="attr">connect_timeout:</span> <span class="string">1s</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LOGICAL_DNS</span></span><br><span class="line">  <span class="attr">lb_policy:</span> <span class="string">ROUND_ROBIN</span></span><br><span class="line">  <span class="attr">load_assignment:</span></span><br><span class="line">    <span class="attr">cluster_name:</span> <span class="string">ng2_service</span></span><br><span class="line">    <span class="attr">endpoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">lb_endpoints:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">endpoint:</span></span><br><span class="line">          <span class="attr">address:</span></span><br><span class="line">            <span class="attr">socket_address:</span></span><br><span class="line">              <span class="attr">address:</span> <span class="string">nginx2</span></span><br><span class="line">              <span class="attr">port_value:</span> <span class="number">80</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">type.googleapis.com/envoy.config.cluster.v3.Cluster</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">proxy_cluster</span></span><br><span class="line">  <span class="attr">connect_timeout:</span> <span class="string">1s</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">STRICT_DNS</span></span><br><span class="line">  <span class="attr">load_assignment:</span></span><br><span class="line">    <span class="attr">cluster_name:</span> <span class="string">proxy_cluster</span></span><br><span class="line">    <span class="attr">endpoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">lb_endpoints:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">endpoint:</span></span><br><span class="line">          <span class="attr">address:</span></span><br><span class="line">            <span class="attr">socket_address:</span></span><br><span class="line">              <span class="attr">address:</span> <span class="number">10.59</span><span class="number">.100</span><span class="number">.96</span></span><br><span class="line">              <span class="attr">port_value:</span> <span class="number">5236</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li>对于 envoy 的配置，需要把 configmap 中的配置进行一些微调：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">envoy</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">envoy</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="number">10.59</span><span class="number">.100</span><span class="number">.108</span><span class="string">/cbt-team/envoyproxy/envoy-dev</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">envoy</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">10000</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5236</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy-config</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">&quot;/etc/envoy&quot;</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">envoy-config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">envoy-config</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">envoy.yaml</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">envoy.yaml</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">cds.yaml</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">conf.d/cds.yaml</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">lds.yaml</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">conf.d/lds.yaml</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">image-secret</span></span><br></pre></td></tr></table></figure><p><img src="/images/qiniu/1688479183311-pic-envoy-sds.png" alt="envoy-sds">  </p><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><ol><li>match: { prefix: “/“ } 本来想在这里加上”/ng1”，测试发现，它是会增加一个path，原来的路径比如是localhost:10000/index.html可以访问的，会变成localhost:10000/ng1/index.html 这样的路径，这就需要在后端服务做一些配置了。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Envoy-使用&quot;&gt;&lt;a href=&quot;#Envoy-使用&quot; class=&quot;headerlink&quot; title=&quot;Envoy 使用&quot;&gt;&lt;/a&gt;Envoy 使用&lt;/h1&gt;&lt;h2 id=&quot;Envoy的介绍&quot;&gt;&lt;a href=&quot;#Envoy的介绍&quot; class=&quot;head</summary>
      
    
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/tags/Kubernetes/"/>
    
    <category term="Envoy" scheme="http://chenzhijun.top/tags/Envoy/"/>
    
  </entry>
  
  <entry>
    <title>容器网络 - 三层网络解决方案</title>
    <link href="http://chenzhijun.top/2023/06/29/kubernetes-container-network-3/"/>
    <id>http://chenzhijun.top/2023/06/29/kubernetes-container-network-3/</id>
    <published>2023-06-29T14:05:44.000Z</published>
    <updated>2023-06-29T14:26:54.734Z</updated>
    
    <content type="html"><![CDATA[<h1 id="容器网络-三层网络解决方案"><a href="#容器网络-三层网络解决方案" class="headerlink" title="容器网络 - 三层网络解决方案"></a>容器网络 - 三层网络解决方案</h1><p>前面两篇了解了kubernetes容器网络和CNI插件的主要工作原理。除了这种模式外，还有一种纯三层的网络方案，如Flannel的host-gw和Calico项目。</p><p>先看一下flannel的host-gw 示意图：</p><p><img src="/images/qiniu/image-20230629173437200.png" alt="image-20230629173437200"></p><p>你在主机上用<code>ip route</code>可以看到一个规则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.244.1.0&#x2F;24 via 10.168.0.3 dev eth0</span><br></pre></td></tr></table></figure><p>这个规则的含义就是，ip地址属于10.244.1.0/24网段的ip包，应该通过本机的eth0设备发出去(dev eth0)，并且它的下一跳地址是10.168.0.3(via 10.168.0.3)。</p><span id="more"></span> <p>这其实也就可以看到了，host-gw模式的工作原理，其实就是将每个Flannel子网(Flannel Subnet ，比如10.244.1.0/24)的”下一跳”，设置成了该子网对应的宿主机的IP地址。 也就是这台主机，充当这条容器通信路径的网关。这正是host-gw的含义。这种好处就是不需要再有额外的封包和解包操作。实际测试host-gw的性能损耗大概是10%， vxlan隧道机制的网络方案，性能损失都在20%~30%左右。</p><p>在容器网络这样的三层网络方案中，有一个跟Flannel host-gw类似的解决方案，就是Calico。Calico的模式和flannel-gw几乎一样，也在在每台宿主机上，添加一个格式如下的路由规则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;目的容器IP地址段&gt; via &lt;网关的IP地址&gt; dev eth0</span><br></pre></td></tr></table></figure><p>与Flannel host-gw不同的是，Flannel通过etcd和宿主机上的flanneId来维护路由信息，而Calico通过BGP来自动地在整个集群中分发路由信息。</p><p>BGP全称是 Border Gateway Protocol，即边界网关协议。它是一个linux内核原生就支持的，专门用在大规模数据中心维护不同的”自治系统”之间路由信息的、无中心的路由协议。</p><p><img src="/images/qiniu/image-20230629174835972.png" alt="image-20230629174835972"></p><p>如上图所示。AS1，AS2是两个不同的网络区，Router就是我们的一个边界网关。AS1中的机器要访问AS2中的机器，只需要在Router1中添加路由规则到AS2即可。像这样的把各区连接在一起的路由器，就叫做边界网关。它跟普通路由器的不同之处在于，它的路由表里面拥有其他区的主机路由信息</p><p>如果了解了BGP之后，Calico项目的架构就比较容易理解了。它由三部分组成：</p><ol><li>Calico的CNI插件。这是与Kubernetes对接的部分。</li><li>Felix。他是一个deameonset，负责在宿主机上插入路由规则(即：写入Linux内核的FIB转发信息库)，以及维护Calico所需的网络设备等工作。</li><li>BIRD。它就是BGP的客户端，专门负责在集群里分发路由规则信息。</li></ol><p>除了对路由信息的维护方式之外，Calico项目与Flannel的Host-gw模式另一个不同之处，它不会再宿主机上创建任何网桥设备。它的工作模式如下：</p><p><img src="/images/qiniu/image-20230629175519357.png" alt="image-20230629175519357"></p><p>图中绿线是完整的跨主机容器访问图。可以看到，calico的cni插件会为每个容器设置一个veth pair设备，然后把其中的一端放置在宿主机上(它的名字以cali前缀开头)。</p><p>由于calico没有使用Cni的网桥模式，Calico的CNI插件还需要在宿主机上位每个容器的VethPair 设备配置一条路由规则，用于接受传入的ip包，可以使用 <code>ip route</code> 看到。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10.233.2.3 dev cali5863f3 scope link</span><br><span class="line"></span><br><span class="line">即：发往 10.233.2.3 的 IP 包，应该进入 cali5863f3 设备。</span><br></pre></td></tr></table></figure><p>有了veth pair设备之后，容器发出的ip包就回经过veth pair设备出现在宿主机上。然后宿主机网络栈就会根据路由规则的下一跳IP地址，把他们转发给正确的网关。这里的最核心的”下一跳”路由规则，就是有Calico的Felix进程负责维护的。这些路由规则信息，则是通过BGP Client 也就是BIRD组件，使用BGP协议传输而来。</p><p>BGP协议的传输格式，可以理解为如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[BGP消息]</span><br><span class="line">我是宿主机192.168.1.3</span><br><span class="line">10.233.2.0&#x2F;24网段的容器都在我这里</span><br><span class="line">这些容器的下一跳地址是我</span><br></pre></td></tr></table></figure><p>Calico项目实际上将集群的所有节点，都当做是边界路由器来处理，他们一起组成一个全连通的网络，互相之间通过BGP协议交换路由规则。这种模式是默认的”Node-to-Node Mesh”模式，随着节点的数量增加，连接的数量会以N^2的规模快速增长，一般只用于少于100个节点的集群中。如果超过100个节点的，可以使用Route reflector的模式。该模式下，会有一个或者几个专门的节点，负责跟所有节点建立BGP连接从而学习到全局的路由规则，而其它节点，只需要跟这几个节点交换路由信息，就可以获得整个集群的路由规则信息了。</p><p>前面的两种模式，都是有一个前提，那就是2层网络是通的。但是如果跨数据中心的话，比如下面的container1要访问container4， 那就需要用到calico的IPIP模式了。</p><p><img src="/images/qiniu/1688047940772-pic_168.png" alt="ipip示意图">  </p><p>在calico的IPIP模式下，Felix 进程在Node1 上添加的路由规则，会稍微不同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.233.2.0&#x2F;24 via 192.168.2.2 tunl0</span><br></pre></td></tr></table></figure><p>尽管这条规则的下一跳地址仍然是node2的ip地址，但这一次，负责将ip包发出去的设备，变成了tunl0。它是一个IP隧道(IP tunnel)设备。</p><p>IP包进入IP隧道设备之后，就会被Linux内核的IPIP驱动接管。IPIP驱动会将这个IP包直接封装在一个宿主机网络的IP包中：</p><p><img src="/images/qiniu/1688047990433-pic_169.png" alt="封包">  </p><p>经过封装后的新IP报的目的地址，就是原IP包的下一跳地址，即Node2 的IP地址：192.168.2.2。</p><p>而原IP包本身，则会被直接封装成新IP包的Payload。这样原先从容器到Node2的ip包，就被伪装成了一个从Node1到node2的ip包，由于宿主机之间已经使用路由器配置了三层转发，也就是设置了宿主机之间的下一跳。所以这个IP包在离开Node1之后，就可以经过路由器，最终”跳”到node2上。</p><p>这时，Node2的网络内核占会使用IPIP驱动进行解包，从而拿到原始的IP包，然后，原始IP包就会经过路由规则和VethPair设备到达目的容器内部。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;容器网络-三层网络解决方案&quot;&gt;&lt;a href=&quot;#容器网络-三层网络解决方案&quot; class=&quot;headerlink&quot; title=&quot;容器网络 - 三层网络解决方案&quot;&gt;&lt;/a&gt;容器网络 - 三层网络解决方案&lt;/h1&gt;&lt;p&gt;前面两篇了解了kubernetes容器网络和CNI插件的主要工作原理。除了这种模式外，还有一种纯三层的网络方案，如Flannel的host-gw和Calico项目。&lt;/p&gt;
&lt;p&gt;先看一下flannel的host-gw 示意图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/qiniu/image-20230629173437200.png&quot; alt=&quot;image-20230629173437200&quot;&gt;&lt;/p&gt;
&lt;p&gt;你在主机上用&lt;code&gt;ip route&lt;/code&gt;可以看到一个规则：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;10.244.1.0&amp;#x2F;24 via 10.168.0.3 dev eth0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个规则的含义就是，ip地址属于10.244.1.0/24网段的ip包，应该通过本机的eth0设备发出去(dev eth0)，并且它的下一跳地址是10.168.0.3(via 10.168.0.3)。&lt;/p&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>容器网络 - CNI网络插件</title>
    <link href="http://chenzhijun.top/2023/04/15/kubernetes-container-network-2/"/>
    <id>http://chenzhijun.top/2023/04/15/kubernetes-container-network-2/</id>
    <published>2023-04-15T14:06:38.000Z</published>
    <updated>2023-06-29T14:19:29.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="容器网络-CNI网络插件"><a href="#容器网络-CNI网络插件" class="headerlink" title="容器网络 - CNI网络插件"></a>容器网络 - CNI网络插件</h1><p>上一篇里面，我们讲了容器网络，跨主机网络通信(flannel的udp和vxlan)；这里我们再了解一下cni它是怎么实现的，然后再说一下另一种网络模型HostGW。</p><p>跨主机通信中，不管是udp模式，还是vxlan模式，他们都有一个相同点，用户的容器连在了docker0网桥上。网络插件在主机上创建一个特殊的设备(UDP模式创建的TUN设备，VXLAN模式创建VTEP设备)；docker0与这个设备配合，通过ip转发(路由表)协作。</p><p>网络插件真正要做的事情，是把不同主机上的特殊设备通过某种方法连通，达到容器跨主机网络通信的目的。kubernetes 通过 CNI 的接口，单独维护了一个网桥代替docker0，名字叫CNI网络，宿主机上的设备默认名称为cni0。</p><span id="more"></span> <p><img src="/images/qiniu/image-20230629162232298.png" alt="vxlan 模式图"></p><p>在主机上可以使用<code>route -n </code>查看主机路由表。</p><p>为啥kubernetes不直接用docker0网桥呢？一个是它没有使用Docker的网络模型(CNM)，所以它不具备配置docker0网桥的能力。另一个这一环节与如何配置pod，也就是infra容器的networkd namespace密切相关。</p><p>Kubernetes 创建pod的第一步 ，是创建并启动一个infra容器，用来hold住pod的network namespace，所以cni的设计思想，就是在kubernetes在infra容器之后，可以直接调用cni网络插件，为这个infra容器的network namespace配置符合预期的网络栈。</p><blockquote><p>一个network namespace 网络栈包括：网卡(Network Interface)、回环设备(Loopback Device)、路由表(Routing Table)、iptables规则。</p></blockquote><p>那这个网络栈配置工作如何完成？首先我们看一下，cni插件安装了哪些东西。在/opt/cni/bin目录下，看一下CNI插件所需的基础可执行文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ ls -al &#x2F;opt&#x2F;cni&#x2F;bin&#x2F;</span><br><span class="line">total 73088</span><br><span class="line">-rwxr-xr-x 1 root root  3890407 Jun 17   bridge</span><br><span class="line">-rwxr-xr-x 1 root root  9921982 Jun 17   dhcp</span><br><span class="line">-rwxr-xr-x 1 root root  2814104 Jun 17   flannel</span><br><span class="line">-rwxr-xr-x 1 root root  2991965 Jun 17   host-local</span><br><span class="line">-rwxr-xr-x 1 root root  3475802 Jun 17   ipvlan</span><br><span class="line">-rwxr-xr-x 1 root root  3026388 Jun 17   loopback</span><br><span class="line">-rwxr-xr-x 1 root root  3520724 Jun 17   macvlan</span><br><span class="line">-rwxr-xr-x 1 root root  3470464 Jun 17   portmap</span><br><span class="line">-rwxr-xr-x 1 root root  3877986 Jun 17   ptp</span><br><span class="line">-rwxr-xr-x 1 root root  2605279 Jun 17   sample</span><br><span class="line">-rwxr-xr-x 1 root root  2808402 Jun 17   tuning</span><br><span class="line">-rwxr-xr-x 1 root root  3475750 Jun 17   vlan</span><br></pre></td></tr></table></figure><p>CNI的基础可执行文件，可以分为三类：</p><p>第一类，叫做Main插件，它是用来创建具体网络设备的二进制文件。比如，bridge(网桥设备)、ipvlan、loopback(lo设备)、macvlan、ptp(Veth Pair设备)，以及vlan。</p><p>第二类，叫做IPAM(IP address Management)插件，它是负责分配IP地址的二进制文件。比如，dhcp，这个文件会想DHCP服务器发起请求；host-local，则会使用预先配置的IP地址段来进行分配。</p><p>第三类，是有CNI社区维护的内置CNI插件。比如：flannel，就是转么为Flannel项目提供的CNI插件；tuning，是一个通过sysctl调整网络设备参数的二进制文件；portmap，是一个通过iptables配置端口映射的二进制文件；bandwidth，是一个使用Token Bucket Filter来进行限流的二进制文件。</p><p>从这些二进制文件中，可以看到实现一个kubernetes用的容器网络方案，其实需要做两部分工作：</p><ol><li>实现这个网络方案本身。这一部分需要编写的，其实就是flanneld进程里的主要逻辑。比如，创建和配置flannel.1 设备、配置宿主机路由、配置arp和fdb表里的信息等等。</li><li>实现该网络方案对应的cni插件，这一部分主要需要做的，就是配置infra容器里面的网络栈，并把它连接到cni网桥上。</li></ol><p>需要注意的是， kubelet不会直接调用cni插件， 调用cni是在cri(Container Runtime Interface，容器运行时接口)里面去实现的。比如docker，它的cri叫做dockershim。kubernetes本身不支持多个cni配置，如果在CNI配置目录(/etc/cni/net.d)里面放了多个cni配置，cri只会加载按字母排序的第一个插件。不过另一方面，CNI允许在CNI配置文件里面通过plugins字段，定义多个插件协作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ cat &#x2F;etc&#x2F;cni&#x2F;net.d&#x2F;10-flannel.conflist </span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;cbr0&quot;,</span><br><span class="line">  &quot;plugins&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;type&quot;: &quot;flannel&quot;,</span><br><span class="line">      &quot;delegate&quot;: &#123;</span><br><span class="line">        &quot;hairpinMode&quot;: true,</span><br><span class="line">        &quot;isDefaultGateway&quot;: true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;type&quot;: &quot;portmap&quot;,</span><br><span class="line">      &quot;capabilities&quot;: &#123;</span><br><span class="line">        &quot;portMappings&quot;: true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这个例子，就是flannel和pormap这两个插件协作。dockershim(cri)在家CNI配置时，会把第一个flannel插件，设置为默认插件。在后面的执行过程中，flannel和pormap插件会按照定义顺序被调用，从而依次完成”配置容器网络”和”配置端口映射”这两部操作。</p><p>我们现在整体看一下cni插件的工作原理。</p><p>当kubelet组件需要创建pod的时候，它第一个创建的一定是infra容器。所以这一步dockershim (CRI) 会先调用Docker api 创建并启动infra容器，紧接着，回执行一个叫做SetUpPod的方法，这个方法的作用就是：为CNI插件准备参数，然后调用 CNI 插件(/opt/cni/bin/flannel) 为 Infra 容器配置网络。flannel插件，调用它需要两部分组成：</p><p>第一部分：由dockershim设置的一组CNI环境变量。</p><p>其中最重要的环境变量参数叫做：CNI_COMMAND。它的取值只有两种：ADD和DEL。这两个操作也是CNI插件唯一需要实现的两个方法。其中ADD的含义是，把容器添加到CNI网络里；DEL的含义是：把容器从CNI网络里移除掉。对于网桥类型的CNI插件来说，这两个操作以为着把容器以VethPair的方式”插”到CNI网络或者从网桥上”拔”掉。</p><p>着重看一下CNI的ADD操作。ADD操作需要的参数包括：容器里网卡的名字eth0(CNI_IFNAME)、Pod的network Namespace文件的路径(CNI_NETNS)、容器的ID(CNI_CONTAINERID)等。</p><p>第二部分：则是dockershim从cni配置文件里加载到的、默认插件的配置信息。</p><p>这个配置信息在CNI中被叫做Network Configuration。dockershim会把NetworkConfiguration以JSON数据的格式，通过标准输入stdin的方式传递给CNI插件。CNI插件里面可能会根据配置文件又去调用其它插件，然后来完成整个网络的配置。</p><p>当CNI插件执行完ADD操作后，CNI插件会把容器的IP地址返回给dockershim，然后被kubelet添加到Pod的status字段。至此，整个流程结束。这就是网络类型的CNI插件整个操作流程。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;容器网络-CNI网络插件&quot;&gt;&lt;a href=&quot;#容器网络-CNI网络插件&quot; class=&quot;headerlink&quot; title=&quot;容器网络 - CNI网络插件&quot;&gt;&lt;/a&gt;容器网络 - CNI网络插件&lt;/h1&gt;&lt;p&gt;上一篇里面，我们讲了容器网络，跨主机网络通信(flannel的udp和vxlan)；这里我们再了解一下cni它是怎么实现的，然后再说一下另一种网络模型HostGW。&lt;/p&gt;
&lt;p&gt;跨主机通信中，不管是udp模式，还是vxlan模式，他们都有一个相同点，用户的容器连在了docker0网桥上。网络插件在主机上创建一个特殊的设备(UDP模式创建的TUN设备，VXLAN模式创建VTEP设备)；docker0与这个设备配合，通过ip转发(路由表)协作。&lt;/p&gt;
&lt;p&gt;网络插件真正要做的事情，是把不同主机上的特殊设备通过某种方法连通，达到容器跨主机网络通信的目的。kubernetes 通过 CNI 的接口，单独维护了一个网桥代替docker0，名字叫CNI网络，宿主机上的设备默认名称为cni0。&lt;/p&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>容器的网络基础</title>
    <link href="http://chenzhijun.top/2023/02/11/kubernetes-container-network/"/>
    <id>http://chenzhijun.top/2023/02/11/kubernetes-container-network/</id>
    <published>2023-02-11T13:48:52.000Z</published>
    <updated>2023-06-29T14:03:22.073Z</updated>
    
    <content type="html"><![CDATA[<h1 id="容器的网络基础"><a href="#容器的网络基础" class="headerlink" title="容器的网络基础"></a>容器的网络基础</h1><p>容器的网络基础是主机的网络，在理解容器的网络前我们先来看一下主机的网络。</p><blockquote><p>想象一个场景，你在湖南，你的爱人在湖北，有一天，你们两觉得恋爱的时间差不多了，该结婚了。结婚之前是不是要先见一下家长。但是湖南和湖北之间隔着长江。那你现在要去湖北的话，怎么办呢？你会想，我有车，只需要开车过“长江大桥”去对方父母家就行。</p></blockquote><p>换一下，现在你有两台电脑，你想让两台电脑能够互相传递文件或者文本信息，那该怎么做呢？我想刚刚的例子中，你会想到，只要建一个桥就行了。那两台电脑直接的桥怎么建？首先你是需要将两台电脑用线”连”起来。正常来说，有了这条传输的线，两台机器之间互相通信的基础条件就具备了。然后再进一步，你家里又买了几台电脑，这几台电脑互相之间也需要通信，那电脑只有一个插口，总不能与谁通信的时候，就插谁的网线吧，这要是都在同一时间通信，那不就的乱了？所以家里一般会有个路由设备，大家都在路由设备插入，然后要发的消息就先发个路由器，路由器再转发。那路由器怎么分清是哪台电脑？所以是不是大家要有个唯一标识符号（mac地址）。你看OSI七层模型就出来了。具体的化大家可以参考一下这个(<a href="https://www.lifewire.com/layers-of-the-osi-model-illustrated-818017)%EF%BC%8C%E6%88%91%E4%BB%AC%E4%B8%BB%E8%A6%81%E6%98%AF%E8%B0%88%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E3%80%82">https://www.lifewire.com/layers-of-the-osi-model-illustrated-818017)，我们主要是谈容器网络。</a></p><p>前面这些铺垫，其实主要还是为了主题容器网络。</p><span id="more"></span><p>容器的本质是一种特殊的进程。容器里面最大的三个相关技术：限制、隔离、根文件，分别对应Cgroups、Namespace、RootFS。 而我们今天主题中，就需要先从 Network Namespace 讲起。</p><p>容器运行的时候的，它能看到的”网络栈” ，实际就是被隔离到它自己的 Network Namespace  中。网络栈应该包含有网卡（network interface)、回环设备（loopback device）、路由表（routing table）和 iptables规则。对于一个进程来说，这些要素就构成了它发起和响应网络请求的基本环境。</p><p>容器其实也可以直接使用宿主机的网络栈，只需要使用<code>-net=host</code> 就行。像这样容器直接使用宿主机网络栈的方式，可以为容器带来良好的网络性能，但是也不可避免的带来了共享网络资源的问题，比如端口冲突。所以我们希望的是，每个容器进程都使用自己的Network Namespace里面的网络栈，有自己独立的IP地址和端口。那这个时候就有一个情况出现，如果启动了两个容器，两个容器之间怎么互相通信呢？</p><p>如果你把容器看成一个主机，那就会想到，能否给两个容器插一根网线呢？让我们把视角切换到一台服务器上，你在服务器上安装了docker， 然后使用docker创建很多容器。你现在想让容器直接能够互相通信，那我们就需要有一个”交换机”，而容器是在服务器里面的，那我们能否也在服务器里面创建一个交换机了？在Linux设备中，起到虚拟交换机作用的网络设备，就是网桥（Bridge），Docker 项目会在宿主机上创建一个默认的 docker0 的网桥。那OK，交换机的问题解决了，那把容器和网桥进行连接的”线”呢？嗯，这个时候我们就要用到一个叫做Veth Pair 的虚拟设备了。Veth Pair 设备的特点是，它被创建出来后，总是以两张虚拟网卡(veth peer)的形式成对出现的。并且，从其中一个”网卡”的发出的数据包，可以直接出现在对应的另一张”网卡”上，哪怕这两个”网卡”在不同的Network Namespace 里面。</p><p><img src="/images/qiniu/1679408322281-%E5%8D%95%E4%B8%BB%E6%9C%BA%E5%AE%B9%E5%99%A8%E4%BA%92%E7%9B%B8%E8%AE%BF%E9%97%AE.png" alt="图 5">  </p><p>OK，那我们现在就能让同一台主机上的不同容器直接互相通信了。那如果是不同主机上的不同容器直接怎么访问呢？比如K8S集群中，多台机器上，有多个容器，容器间的网络互相访问应该怎么弄？这就是我们常说的容器跨主机网络访问了。说到容器的跨主机通信，就有一个用的非常广的容器网络项目：Flannel。</p><p>Flannel提供了三种后端实现：1、VXLAN；2、Host-GW；3、UDP。</p><p>3种实现中，我们先看最早的一种方式：UDP。 </p><p>假设有两台主机：10.59.100.36、10.59.100.37。</p><p>Flannel 安装完之后，会在主机上创建一个Flannel0的设备，它是一个TUN设备(Tunnel 设备)。TUN设备是一个工作在三层的虚拟网络设备。它的功能非常简单，在操作系统内核和用户程序中传递IP包。 </p><p>当操作系统将一个IP包发送给flannel0设备后，flannel0就会把这个包转给创建它的flannel进程，这是一个从内核态到用户态的的流动方向；相反的如果flannel进程向flannel0发送一个ip包，那这个包就出现在了宿主机网络栈中，然后根据宿主机的路由表进行下一步处理，这是一个从用户态到内核态的流动方向。</p><p>那当flanneld收到flannel0转过来的IP包，然后怎么转发到这个IP了？这就是我们在flannel中的主要配置：子网的功劳了。主网与宿主机的关系保存在etcd中：<code>etcdctl ls /coreos.com/network/subnets</code> 所以我们可以看到，当a主机的flanneld收到ip包之后，只要将ip进行匹配就能知道要转发到那个主机上。这个流程能完成的原因就是每个主机上都启动了一个flanneld，都监听这8285的一个端口，，所以flanneld只要把udp包发往b主机的8285端口就行。而接下来，flanneld再把这个IP包发送给它管理的TUN设备，也就是flannel0设备，就可以找到对应的容器了。以下为示意图：</p><p><img src="/images/qiniu/1679408009109-flannel-%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E4%BF%A1-udp.png" alt="图 2">  </p><p>但是为什么udp模式最后被放弃了？其实tun设备还是一个在三层的Overlay网络，比起两台宿主机的直接通信，flannel还做了一个通过flanneld进程进行封装的过程，这也导致flannel性能不好的直接原因，它需要在用户态和内核态直接进行3次转换。</p><p><img src="/images/qiniu/1679408053501-flanned-udp-%E5%BA%9F%E5%BC%83%E7%9A%84%E5%8E%9F%E5%9B%A0.png" alt="图 3">  </p><p>所以flannel后续支持VXLAN，即：Virtual Extensible LAN（虚拟可扩展局域网），是Linux内核本身就支持的一种网络虚拟化技术。VXLAN的设计思想是在现有的三层网络之上，覆盖一层虚拟的、由内核VXLAN模块负责维护的二层网络，使得这个二层网络上的虚拟机或者容器，可以像局域网一样自由通信。而为了能够在二层网络上打通隧道，VXLAN 会在宿主机上设置一个特殊的网络设备作为”隧道”的两端，这个设备就叫做VTEP，即：VXLAN Tunnel End Point（虚拟隧道端点）。</p><p>VTEP设备其实有点类似之前说的TUN设备，不过它是作用在二层上，对二层的数据帧进行封装和解封，而且这个工作全部是在内核里完成的。</p><p><img src="/images/qiniu/1679408065526-flannel-vxlan%E6%A8%A1%E5%BC%8F.png" alt="图 4">  </p><p>可以看到每个主机都有一个flannel.1的设备，就是vxlan所需的vtep设备，它既有IP地址，也有mac地址。</p><p>现在容器 A 要访问容器 B ，流程是怎样的呢？</p><p>首先 A 发出的IP 包，会先出现在docker0网桥，然后被路由到本机设备 flannel.1 进行处理，这个我们可以叫它原始包。</p><p>在到达 flannel.1之后，flannel.1 的作用就是要将这个原始包发送到正确的 目的宿主机的 vtep 设备上。</p><p>那怎么找到 vtep 设备呢？ 根据<code>route -n</code> 路由记录，我们可以知道目的主机的 vtep 设备的 IP 地址，而根据三层的 IP 地址查询对应的二层 MAC 地址信息，则恰好是ARP 表的功能。这里的 arp 记录，每个主机的 flannel.1 进程维护的，一台主机新加入到集群，就会把相应的 vtep 设备对应的 arp 记录下发到所有宿主机上。现在有了 MAC 地址，Linux 内核就可以开始二层封包操作，它会把容器的 IP和目的 VTEP 设备的 mac 地址组装成一个新的二层数据帧。封包过程只是增加二层头，不会改变原始包。</p><p>但是吧，这次的封包，其实对于宿主机的网络来说，并没有意义。Linux 内核还需要将这个二次封包的数据帧进行再一次封包成普通数据帧，这样才能让它把二次封包的数据帧，通过宿主机的 eth0 网卡进行传输。在内核进行封包成普通数据帧的时候，会将 VXLAN 的数据表进行标记，增加一个特殊的 vxlan 头，里面的重要标识 VNI ，它是 VTEP 设备识别某个数据帧是否应该归自己处理的标识。在 Flannel 中，VNI 的默认值就是 1， 这也就是为什么 flannel 的 vtep 设备叫 flannel.1的原因，这里的 1，就是 VNI 的值。不过在这里，flannel.1设备只知道另一个 flannel.1设备的mac 地址，却不知道对应的宿主机地址是啥。也就是说，这个 UDP的包应该发给哪台机器呢？在我们这种场景下，flannel.1 设备实际就扮演了一个网桥的设备的角色，在二层网络进行 udp 包的转发。而在Linux 内核里面，“网桥”设备进行转发的依据是根据FDB （Forwading Database）库来的。不难想象，这个 FDB 是由 flanneld 进程维护的:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在Node 1上，使用“目的VTEP设备”的MAC地址进行查询</span></span><br><span class="line">bridge fdb show flannel.1 | grep 5e:f8:4f:00:e3:37</span><br></pre></td></tr></table></figure><p>这样找到了目的宿主机的IP，然后宿主机再知道 arp 表要学习的内容知道 宿主机 ip 的 mac 地址， 之后就只需要进行正常 UDP 封包操作流程就行。接下来，node1 上的 flannel.1 设备就可以把这个数据帧从 node1 的 eth0 网卡上发出去，来到 node2 的 eth0 网卡。在 node2 的内核网络栈会发现这个数据帧里有 vxlan header，并且 VNI =1。所以 linux 内核会对它进行拆包，拿到内部二次封包后的数据帧，然后根据 VNI=1，将其交给 node2 的 flannel.1 设备进行处理。而 flannel.1 会进行进一步的拆包，取出原始数据包，流程跟之前一样，最后 原始数据包 进入到 container-2 的 network namespace 中。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;容器的网络基础&quot;&gt;&lt;a href=&quot;#容器的网络基础&quot; class=&quot;headerlink&quot; title=&quot;容器的网络基础&quot;&gt;&lt;/a&gt;容器的网络基础&lt;/h1&gt;&lt;p&gt;容器的网络基础是主机的网络，在理解容器的网络前我们先来看一下主机的网络。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;想象一个场景，你在湖南，你的爱人在湖北，有一天，你们两觉得恋爱的时间差不多了，该结婚了。结婚之前是不是要先见一下家长。但是湖南和湖北之间隔着长江。那你现在要去湖北的话，怎么办呢？你会想，我有车，只需要开车过“长江大桥”去对方父母家就行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;换一下，现在你有两台电脑，你想让两台电脑能够互相传递文件或者文本信息，那该怎么做呢？我想刚刚的例子中，你会想到，只要建一个桥就行了。那两台电脑直接的桥怎么建？首先你是需要将两台电脑用线”连”起来。正常来说，有了这条传输的线，两台机器之间互相通信的基础条件就具备了。然后再进一步，你家里又买了几台电脑，这几台电脑互相之间也需要通信，那电脑只有一个插口，总不能与谁通信的时候，就插谁的网线吧，这要是都在同一时间通信，那不就的乱了？所以家里一般会有个路由设备，大家都在路由设备插入，然后要发的消息就先发个路由器，路由器再转发。那路由器怎么分清是哪台电脑？所以是不是大家要有个唯一标识符号（mac地址）。你看OSI七层模型就出来了。具体的化大家可以参考一下这个(&lt;a href=&quot;https://www.lifewire.com/layers-of-the-osi-model-illustrated-818017)%EF%BC%8C%E6%88%91%E4%BB%AC%E4%B8%BB%E8%A6%81%E6%98%AF%E8%B0%88%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E3%80%82&quot;&gt;https://www.lifewire.com/layers-of-the-osi-model-illustrated-818017)，我们主要是谈容器网络。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前面这些铺垫，其实主要还是为了主题容器网络。&lt;/p&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>什么是云原生？</title>
    <link href="http://chenzhijun.top/2023/02/10/what-is-cloud-native/"/>
    <id>http://chenzhijun.top/2023/02/10/what-is-cloud-native/</id>
    <published>2023-02-10T06:27:45.000Z</published>
    <updated>2023-03-21T14:55:51.341Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是云原生？"><a href="#什么是云原生？" class="headerlink" title="什么是云原生？"></a>什么是云原生？</h1><p>云原生是一种基于容器、微服务和自动化运维的软件开发和部署方法。<br>云原生分为 3 种核心技术和 2 个核心理念：<br>3 种核心技术：分别是容器、微服务、服务网格；<br>2 个核心理念：分别指不可变基础设施和声明式 API。</p><span id="more"></span><p>容器：容器是云原生应用程序中最小的计算单元。它们是将微服务代码和其他必需文件打包在云原生系统中的软件组件。通过容器化微服务，云原生应用程序独立于底层操作系统和硬件运行。这意味着软件开发人员可以在本地、云基础设施或混合云上部署云原生应用程序。 开发人员使用容器将微服务与其各自的依赖项（例如主应用程序运行所需的资源文件、库和脚本）打包。</p><p>微服务：微服务是小型的独立软件组件，它们作为完整的云原生软件共同运行。每个微服务都侧重于一个小而具体的问题。微服务是松散耦合的，这意味着它们是相互通信的独立软件组件。开发人员通过处理单个微服务来更改应用程序。这样，即使一个微服务出现故障，应用程序仍能继续运行。</p><p>服务网格：服务网格是云基础设施中的一个软件层，用于管理多个微服务之间的通信。开发人员使用服务网格来引入其他功能，而无需在应用程序中编写新代码。</p><p>不可变基础设施：不可变基础设施意味着用于托管云原生应用程序的服务器在部署后保持不变。如果应用程序需要更多计算资源，则会丢弃旧服务器，并将应用程序移至新的高性能服务器。通过避免手动升级，不可变基础设施使云原生部署成为一个可预测的过程。 </p><p>声明式 API：应用程序编程接口（API）是两个或多个软件程序用来交换信息的方法。云原生系统使用 API 将松散耦合的微服务整合在一起。API 会告诉您微服务想要什么数据以及它能给您带来什么结果，而不是指定实现结果的步骤。</p><p>云计算是云供应商按需提供的资源、基础设施和工具。而云原生是一种使用云计算模型构建和运行软件程序的方法。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;什么是云原生？&quot;&gt;&lt;a href=&quot;#什么是云原生？&quot; class=&quot;headerlink&quot; title=&quot;什么是云原生？&quot;&gt;&lt;/a&gt;什么是云原生？&lt;/h1&gt;&lt;p&gt;云原生是一种基于容器、微服务和自动化运维的软件开发和部署方法。&lt;br&gt;云原生分为 3 种核心技术和 2 个核心理念：&lt;br&gt;3 种核心技术：分别是容器、微服务、服务网格；&lt;br&gt;2 个核心理念：分别指不可变基础设施和声明式 API。&lt;/p&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>PaaS 容器平台应当具备的能力</title>
    <link href="http://chenzhijun.top/2023/01/16/the-ability-of-a-paas-platform/"/>
    <id>http://chenzhijun.top/2023/01/16/the-ability-of-a-paas-platform/</id>
    <published>2023-01-16T05:23:12.000Z</published>
    <updated>2023-03-21T14:52:59.487Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PaaS-容器平台应当具备的能力"><a href="#PaaS-容器平台应当具备的能力" class="headerlink" title="PaaS 容器平台应当具备的能力"></a>PaaS 容器平台应当具备的能力</h1><p>我们先来看一下 IaaS、PaaS、SaaS 的区别，一张图可以看懂：</p><p><img src="/images/qiniu/1679409486214-pic_1679409482198.png" alt="图 2">  </p><p>一个完善的 PaaS 基础平台应该具备的能力:</p><!--more-- >![2019-07-06-13-31-12](/images/qiniu/2019-07-06-13-31-12.png)![图 3](/images/qiniu/1679410309868-pic_1679410303784.png)  先留个坑，慢慢补。。<!--PaaS平台的概念在现在已经可以指代各种平台能力了。很多公司都喜欢将自己公司的东西对完宣称为 PaaS、SaaS 服务。而我认为在云原生架构下的 PaaS 中基础平台的功能主要包含以下几方面：资源管理、应用全生命周期管理、高可用和容错、运维平台。一个完善的 PaaS 容器平台应该涵盖的功能：-->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PaaS-容器平台应当具备的能力&quot;&gt;&lt;a href=&quot;#PaaS-容器平台应当具备的能力&quot; class=&quot;headerlink&quot; title=&quot;PaaS 容器平台应当具备的能力&quot;&gt;&lt;/a&gt;PaaS 容器平台应当具备的能力&lt;/h1&gt;&lt;p&gt;我们先来看一下 IaaS、P</summary>
      
    
    
    
    <category term="PaaS" scheme="http://chenzhijun.top/categories/PaaS/"/>
    
    
    <category term="PaaS" scheme="http://chenzhijun.top/tags/PaaS/"/>
    
  </entry>
  
  <entry>
    <title>Harbor  镜像仓库安装与 Helm Chart 管理</title>
    <link href="http://chenzhijun.top/2022/12/26/harbor-install-and-trouble-shooting/"/>
    <id>http://chenzhijun.top/2022/12/26/harbor-install-and-trouble-shooting/</id>
    <published>2022-12-26T13:02:35.000Z</published>
    <updated>2023-03-17T06:58:02.474Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Harbor-镜像仓库安装与-Helm-Chart-管理"><a href="#Harbor-镜像仓库安装与-Helm-Chart-管理" class="headerlink" title="Harbor  镜像仓库安装与 Helm Chart 管理"></a>Harbor  镜像仓库安装与 Helm Chart 管理</h1><p><a href="https://goharbor.io/">Harbor</a> 是一款非常优秀的企业级开源镜像仓库管理器。Harbor 是基于 Docker Registry之上带有用户权限控制，镜像扫描，镜像签名的款工具。用起来很方便，我们公司目前在测试和生产都在使用。从去年 10 月到今天，除去一次 ceph 集群扩容，没有发生一次事故，一直运行很稳定；本文将记录一下我们的使用方式和遇到的一些问题解决方式。</p><h2 id="Harbor-资源准备"><a href="#Harbor-资源准备" class="headerlink" title="Harbor 资源准备"></a>Harbor 资源准备</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Harbor 1.7.6 版本</span><br><span class="line">Redis 4.0</span><br><span class="line">Postgres 10.6</span><br><span class="line">Docker 1.13.1</span><br><span class="line">docker-compose 1.18.0</span><br><span class="line">Ceph 12</span><br><span class="line"></span><br><span class="line">haproxy 机器 2 台</span><br><span class="line">VIP 1 个</span><br><span class="line">Harbor 主机 2 台</span><br></pre></td></tr></table></figure><p>公司目前的 harbor 是基于 1.76 搭建的高可用方案，证书的问题，我们是公网使用第三方证书。内网使用自签名的证书；在我这里，我在 harbor 的搭建中采用的是内部 http，外部挂 F5。架构图如下：</p><p><img src="/images/qiniu/2020-04-26-21-15-43.png" alt="2020-04-26-21-15-43"></p><p>生产上我们用 F5 替代 Haproxy。</p><p>我们在 Haproxy/F5 层将 https 转成 http 再转发给内部 harbor。</p><span id="more"></span><h3 id="下载-harbor-并进行配置"><a href="#下载-harbor-并进行配置" class="headerlink" title="下载 harbor 并进行配置"></a>下载 harbor 并进行配置</h3><p>直接去github release 下载 1.7.6 的版本（现在最新为 1.10）。下载之后解压，修改里面<code>harbor.cfg</code>配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line">## Configuration file of Harbor</span><br><span class="line"></span><br><span class="line">#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!</span><br><span class="line">_version &#x3D; 1.7.0</span><br><span class="line">#The IP address or hostname to access admin UI and registry service.</span><br><span class="line">#DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.</span><br><span class="line">#DO NOT comment out this line, modify the value of &quot;hostname&quot; directly, or the installation will fail.</span><br><span class="line">hostname &#x3D; harbor.chenzhijun.top</span><br><span class="line"></span><br><span class="line">#The protocol for accessing the UI and token&#x2F;notification service, by default it is http.</span><br><span class="line">#It can be set to https if ssl is enabled on nginx.</span><br><span class="line">ui_url_protocol &#x3D; http</span><br><span class="line"></span><br><span class="line">#Maximum number of job workers in job service</span><br><span class="line">max_job_workers &#x3D; 10</span><br><span class="line"></span><br><span class="line">#Determine whether or not to generate certificate for the registry&#39;s token.</span><br><span class="line">#If the value is on, the prepare script creates new root cert and private key</span><br><span class="line">#for generating token to access the registry. If the value is off the default key&#x2F;cert will be used.</span><br><span class="line">#This flag also controls the creation of the notary signer&#39;s cert.</span><br><span class="line">#这里我选择的是 off，开 notary 的话必须指定https，如果不开 notary 的话，可以不用管。</span><br><span class="line">customize_crt &#x3D; off</span><br><span class="line"></span><br><span class="line">#The path of cert and key files for nginx, they are applied only the protocol is set to https</span><br><span class="line">ssl_cert &#x3D; &#x2F;data&#x2F;cert&#x2F;server.crt</span><br><span class="line">ssl_cert_key &#x3D; &#x2F;data&#x2F;cert&#x2F;server.key</span><br><span class="line"></span><br><span class="line">#The path of secretkey storage</span><br><span class="line">secretkey_path &#x3D; &#x2F;data</span><br><span class="line"></span><br><span class="line">#Admiral&#39;s url, comment this attribute, or set its value to NA when Harbor is standalone</span><br><span class="line">admiral_url &#x3D; NA</span><br><span class="line"></span><br><span class="line">#Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.</span><br><span class="line">log_rotate_count &#x3D; 50</span><br><span class="line">#Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.</span><br><span class="line">#If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G</span><br><span class="line">#are all valid.</span><br><span class="line">log_rotate_size &#x3D; 200M</span><br><span class="line"></span><br><span class="line">#Config http proxy for Clair, e.g. http:&#x2F;&#x2F;my.proxy.com:3128</span><br><span class="line">#Clair doesn&#39;t need to connect to harbor internal components via http proxy.</span><br><span class="line">http_proxy &#x3D;</span><br><span class="line">https_proxy &#x3D;</span><br><span class="line">no_proxy &#x3D; 127.0.0.1,localhost,core,registry</span><br><span class="line"></span><br><span class="line">#NOTES: The properties between BEGIN INITIAL PROPERTIES and END INITIAL PROPERTIES</span><br><span class="line">#only take effect in the first boot, the subsequent changes of these properties</span><br><span class="line">#should be performed on web ui</span><br><span class="line"></span><br><span class="line">#************************BEGIN INITIAL PROPERTIES************************</span><br><span class="line"></span><br><span class="line">#Email account settings for sending out password resetting emails.</span><br><span class="line"></span><br><span class="line">#Email server uses the given username and password to authenticate on TLS connections to host and act as identity.</span><br><span class="line">#Identity left blank to act as username.</span><br><span class="line">email_identity &#x3D;</span><br><span class="line"></span><br><span class="line">email_server &#x3D; smtp.mydomain.com</span><br><span class="line">email_server_port &#x3D; 25</span><br><span class="line">email_username &#x3D; sample_admin@mydomain.com</span><br><span class="line">email_password &#x3D; abc</span><br><span class="line">email_from &#x3D; admin &lt;sample_admin@mydomain.com&gt;</span><br><span class="line">email_ssl &#x3D; false</span><br><span class="line">email_insecure &#x3D; false</span><br><span class="line"></span><br><span class="line">##The initial password of Harbor admin, only works for the first time when Harbor starts.</span><br><span class="line">#It has no effect after the first launch of Harbor.</span><br><span class="line">#Change the admin password from UI after launching Harbor.</span><br><span class="line">harbor_admin_password &#x3D; Harbor12345</span><br><span class="line"></span><br><span class="line">##By default the auth mode is db_auth, i.e. the credentials are stored in a local database.</span><br><span class="line">#Set it to ldap_auth if you want to verify a user&#39;s credentials against an LDAP server.</span><br><span class="line">auth_mode &#x3D; db_auth</span><br><span class="line"></span><br><span class="line">#The url for an ldap endpoint.</span><br><span class="line">ldap_url &#x3D; ldaps:&#x2F;&#x2F;ldap.mydomain.com</span><br><span class="line"></span><br><span class="line">#A user&#39;s DN who has the permission to search the LDAP&#x2F;AD server.</span><br><span class="line">#If your LDAP&#x2F;AD server does not support anonymous search, you should configure this DN and ldap_search_pwd.</span><br><span class="line">#ldap_searchdn &#x3D; uid&#x3D;searchuser,ou&#x3D;people,dc&#x3D;mydomain,dc&#x3D;com</span><br><span class="line"></span><br><span class="line">#the password of the ldap_searchdn</span><br><span class="line">#ldap_search_pwd &#x3D; password</span><br><span class="line"></span><br><span class="line">#The base DN from which to look up a user in LDAP&#x2F;AD</span><br><span class="line">ldap_basedn &#x3D; ou&#x3D;people,dc&#x3D;mydomain,dc&#x3D;com</span><br><span class="line"></span><br><span class="line">#Search filter for LDAP&#x2F;AD, make sure the syntax of the filter is correct.</span><br><span class="line">#ldap_filter &#x3D; (objectClass&#x3D;person)</span><br><span class="line"></span><br><span class="line"># The attribute used in a search to match a user, it could be uid, cn, email, sAMAccountName or other attributes depending on your LDAP&#x2F;AD</span><br><span class="line">ldap_uid &#x3D; uid</span><br><span class="line"></span><br><span class="line">#the scope to search for users, 0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE</span><br><span class="line">ldap_scope &#x3D; 2</span><br><span class="line"></span><br><span class="line">#Timeout (in seconds)  when connecting to an LDAP Server. The default value (and most reasonable) is 5 seconds.</span><br><span class="line">ldap_timeout &#x3D; 5</span><br><span class="line"></span><br><span class="line">#Verify certificate from LDAP server</span><br><span class="line">ldap_verify_cert &#x3D; true</span><br><span class="line"></span><br><span class="line">#The base dn from which to lookup a group in LDAP&#x2F;AD</span><br><span class="line">ldap_group_basedn &#x3D; ou&#x3D;group,dc&#x3D;mydomain,dc&#x3D;com</span><br><span class="line"></span><br><span class="line">#filter to search LDAP&#x2F;AD group</span><br><span class="line">ldap_group_filter &#x3D; objectclass&#x3D;group</span><br><span class="line"></span><br><span class="line">#The attribute used to name a LDAP&#x2F;AD group, it could be cn, name</span><br><span class="line">ldap_group_gid &#x3D; cn</span><br><span class="line"></span><br><span class="line">#The scope to search for ldap groups. 0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE</span><br><span class="line">ldap_group_scope &#x3D; 2</span><br><span class="line"></span><br><span class="line">#Turn on or off the self-registration feature</span><br><span class="line"># 是否允许自注册</span><br><span class="line">self_registration &#x3D; on</span><br><span class="line"></span><br><span class="line">#The expiration time (in minute) of token created by token service, default is 30 minutes</span><br><span class="line">token_expiration &#x3D; 30</span><br><span class="line"></span><br><span class="line">#The flag to control what users have permission to create projects</span><br><span class="line">#The default value &quot;everyone&quot; allows everyone to creates a project.</span><br><span class="line">#Set to &quot;adminonly&quot; so that only admin user can create project.</span><br><span class="line">project_creation_restriction &#x3D; everyone</span><br><span class="line"></span><br><span class="line">#************************END INITIAL PROPERTIES************************</span><br><span class="line"></span><br><span class="line">#######Harbor DB configuration section#######</span><br><span class="line"></span><br><span class="line">#The address of the Harbor database. Only need to change when using external db.</span><br><span class="line">#db的主机</span><br><span class="line">db_host &#x3D; 172.88.14.88</span><br><span class="line"></span><br><span class="line">#The password for the root user of Harbor DB. Change this before any production use.</span><br><span class="line">db_password &#x3D; 123456</span><br><span class="line"></span><br><span class="line">#The port of Harbor database host</span><br><span class="line">db_port &#x3D; 5432</span><br><span class="line"></span><br><span class="line">#The user name of Harbor database</span><br><span class="line">db_user &#x3D; postgres</span><br><span class="line"></span><br><span class="line">##### End of Harbor DB configuration#######</span><br><span class="line"></span><br><span class="line">##########Redis server configuration.############</span><br><span class="line"></span><br><span class="line">#Redis connection address</span><br><span class="line">redis_host &#x3D; 172.88.14.88</span><br><span class="line"></span><br><span class="line">#Redis connection port</span><br><span class="line">redis_port &#x3D; 6379</span><br><span class="line"></span><br><span class="line">#Redis connection password</span><br><span class="line">redis_password &#x3D;</span><br><span class="line"></span><br><span class="line">#Redis connection db index</span><br><span class="line">#db_index 1,2,3 is for registry, jobservice and chartmuseum.</span><br><span class="line">#db_index 0 is for UI, it&#39;s unchangeable</span><br><span class="line">redis_db_index &#x3D; 1,2,3</span><br><span class="line"></span><br><span class="line">########## End of Redis server configuration ############</span><br><span class="line"></span><br><span class="line">##########Clair DB configuration############</span><br><span class="line"></span><br><span class="line">#Clair DB host address. Only change it when using an exteral DB.</span><br><span class="line"></span><br><span class="line">clair_db_host &#x3D; 172.88.14.88</span><br><span class="line">#The password of the Clair&#39;s postgres database. Only effective when Harbor is deployed with Clair.</span><br><span class="line">#Please update it before deployment. Subsequent update will cause Clair&#39;s API server and Harbor unable to access Clair&#39;s database.</span><br><span class="line">clair_db_password &#x3D; 123456</span><br><span class="line">#Clair DB connect port</span><br><span class="line">clair_db_port &#x3D; 5432</span><br><span class="line">#Clair DB username</span><br><span class="line">clair_db_username &#x3D; postgres</span><br><span class="line">#Clair default database</span><br><span class="line">clair_db &#x3D; postgres</span><br><span class="line"></span><br><span class="line">#The interval of clair updaters, the unit is hour, set to 0 to disable the updaters.</span><br><span class="line">clair_updaters_interval &#x3D; 12</span><br><span class="line"></span><br><span class="line">##########End of Clair DB configuration############</span><br><span class="line"></span><br><span class="line">#The following attributes only need to be set when auth mode is uaa_auth</span><br><span class="line">uaa_endpoint &#x3D; uaa.mydomain.org</span><br><span class="line">uaa_clientid &#x3D; id</span><br><span class="line">uaa_clientsecret &#x3D; secret</span><br><span class="line">uaa_verify_cert &#x3D; true</span><br><span class="line">uaa_ca_cert &#x3D; &#x2F;path&#x2F;to&#x2F;ca.pem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### Harbor Storage settings ###</span><br><span class="line">#Please be aware that the following storage settings will be applied to both docker registry and helm chart repository.</span><br><span class="line">#registry_storage_provider can be: filesystem, s3, gcs, azure, etc.</span><br><span class="line">#registry_storage_provider_name &#x3D; filesystem</span><br><span class="line">registry_storage_provider_name &#x3D; s3</span><br><span class="line"></span><br><span class="line">#registry_storage_provider_config is a comma separated &quot;key: value&quot; pairs, e.g. &quot;key1: value, key2: value2&quot;.</span><br><span class="line">#To avoid duplicated configurations, both docker registry and chart repository follow the same storage configuration specifications of docker registry.</span><br><span class="line">#Refer to https:&#x2F;&#x2F;docs.docker.com&#x2F;registry&#x2F;configuration&#x2F;#storage for all available configuration.</span><br><span class="line"></span><br><span class="line">#registry_storage_provider_config &#x3D;</span><br><span class="line">#配置ceph 存储</span><br><span class="line">registry_storage_provider_config &#x3D; bucket: f4gkewos23fdsf8fnfhG, region: default, accesskey: QaidfneuhgfE2dife, secretkey: qyIJDFNGIDNDKF8f2r3G5QSw, regionendpoint: http:&#x2F;&#x2F;ceph.chenzhijun.top, rootdirectory: &#x2F;harbor-registry&#x2F;di</span><br><span class="line"></span><br><span class="line">#registry_custom_ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore</span><br><span class="line">#of registry&#39;s and chart repository&#39;s containers.  This is usually needed when the user hosts a internal storage with self signed certificate.</span><br><span class="line">registry_custom_ca_bundle &#x3D;</span><br><span class="line"></span><br><span class="line">#If reload_config&#x3D;true, all settings which present in harbor.cfg take effect after prepare and restart harbor, it overwrites exsiting settings.</span><br><span class="line">#reload_config&#x3D;true</span><br><span class="line">#Regular expression to match skipped environment variables</span><br><span class="line">#skip_reload_env_pattern&#x3D;(^EMAIL.*)|(^LDAP.*)</span><br></pre></td></tr></table></figure><p>配置好 cfg 文件后，我们开始我们的操作。</p><ol start="0"><li><p>申请或安装 ceph，ceph 版本为 12；</p></li><li><p>安装 pg 数据库(生产应为高可用)：</p></li></ol><p><code>docker run --name pg -e POSTGRES_PASSWORD=123456 -p 5432:5432 -d postgres:10.6</code></p><ol start="2"><li>安装 redis（生产因为高可用）：</li></ol><p><code>docker run --name redis -p 6379:6379 -d redis</code></p><ol start="3"><li>安装 harbor：</li></ol><p><code>./install.sh --with-clair --with-chartmuseum</code></p><p>这里除了 notaty 必须要有个 https 外，其他的你都可以装。clair 是镜像扫描工具；chartmuseum 是 helm chart ；<br>你需要在两台机器都启动，并且保持cfg 文件一致。</p><ol start="4"><li>配置 haproxy(F5)</li></ol><p>如果在 F5 做 https 转 http，那haproxy 就正常启动并将后段指向 harbor 地址就可以了。如果是让 https 做证书认证，那么就按照配置就好。我这边有在 F5 做解证书，贴一份 haproxy 的配置吧<code>haproxy.cfg</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">global</span><br><span class="line">  daemon</span><br><span class="line">  log  127.0.0.1 local0 info</span><br><span class="line">  maxconn  20000</span><br><span class="line">  pidfile  &#x2F;app&#x2F;haproxy&#x2F;run&#x2F;haproxy.pid</span><br><span class="line">  stats  socket &#x2F;app&#x2F;haproxy&#x2F;lib&#x2F;haproxy&#x2F;stats</span><br><span class="line">  tune.bufsize  131072</span><br><span class="line">  user mwop</span><br><span class="line">  group mwop</span><br><span class="line">  tune.ssl.default-dh-param 2048</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">  log  global</span><br><span class="line">  maxconn  10000</span><br><span class="line">  mode  http</span><br><span class="line">  option  dontlog-normal</span><br><span class="line">  option  http-server-close</span><br><span class="line">  retries  3</span><br><span class="line">  #stats  enable</span><br><span class="line">  timeout  http-request 100s</span><br><span class="line">  timeout  queue 1m</span><br><span class="line">  timeout  connect 10s</span><br><span class="line">  timeout  client 1m</span><br><span class="line">  timeout  server 30m</span><br><span class="line">  timeout  check 10s</span><br><span class="line"></span><br><span class="line">listen Stats</span><br><span class="line">  bind 0.0.0.0:10000</span><br><span class="line">  mode http</span><br><span class="line">  stats enable</span><br><span class="line">  stats uri &#x2F;</span><br><span class="line">  stats refresh 5s</span><br><span class="line">  stats show-node</span><br><span class="line">  stats show-legends</span><br><span class="line">  stats hide-version</span><br><span class="line"></span><br><span class="line">listen app1</span><br><span class="line">    bind :80</span><br><span class="line">    balance     roundrobin</span><br><span class="line">    mode tcp</span><br><span class="line">    server s1  172.0.0.1:80   weight 1</span><br><span class="line">    server s2  172.0.0.2:80   weight 1</span><br><span class="line">    </span><br><span class="line">listen app2</span><br><span class="line">    bind :443 </span><br><span class="line">    balance     roundrobin</span><br><span class="line">    mode tcp</span><br><span class="line">    server s1  172.0.0.1:443   weight 1</span><br><span class="line">    server s2  172.0.0.2:443   weight 1</span><br></pre></td></tr></table></figure><p>访问<code>harbor.chenzhijun.top</code>就可以了。</p><p><img src="/images/qiniu/2020-04-26-21-43-00.png" alt="2020-04-26-21-43-00"></p><h3 id="https-问题-1-docker-login-failed"><a href="#https-问题-1-docker-login-failed" class="headerlink" title="https 问题 1 : docker login failed"></a>https 问题 1 : docker login failed</h3><p>安装完之后，你可能会遇到一些问题，比如在你直接 docker login 出现:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error response from daemon: Get https:&#x2F;&#x2F;harbor.chenzhijun.top&#x2F;v2&#x2F;: Get http:&#x2F;&#x2F;harbor.chenzhijun.top&#x2F;service&#x2F;token?account&#x3D;admin&amp;client_id&#x3D;docker&amp;offline_token&#x3D;true&amp;service&#x3D;harbor-registry: dial tcp 100.77.53.130:80: getsockopt: connection refused</span><br></pre></td></tr></table></figure><p>你在页面登陆可以，当是你用 docker login却有问题。你可以<code>curl -X GET -I &quot;https://harbor.chenzhijun.top/v2/&quot;</code>看一下是否返回了一个 http 的请求。如果是的话，修改一个参数：<code>sed -i &quot;s/realm: http/realm: https/g&quot; common/config/registry/config.yml</code>;在<code>common/config/registry/config.yml</code>中修改返回值为 https：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auth:</span></span><br><span class="line">  <span class="attr">token:</span></span><br><span class="line">    <span class="attr">issuer:</span> <span class="string">harbor-token-issuer</span></span><br><span class="line">    <span class="attr">realm:</span> <span class="string">https://harbor.chenzhijun.top/service/token</span> <span class="comment">#就是这里要返回 https 而不是 http</span></span><br><span class="line">    <span class="attr">rootcertbundle:</span> <span class="string">/etc/registry/root.crt</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">harbor-registry</span></span><br></pre></td></tr></table></figure><p>这个地方改不是特别好改，我是在<code>install.sh</code>在 docker-compose启动之前加入的这个 sed 命令；</p><p><img src="/images/qiniu/2020-04-26-22-00-25.png" alt="2020-04-26-22-00-25"></p><p>然后再 curl 一下看是不是返回 https 的结果了。如果是就可以了。</p><h3 id="https-问题2-docker-push-出现-unkown-blob"><a href="#https-问题2-docker-push-出现-unkown-blob" class="headerlink" title="https 问题2 : docker push 出现 unkown blob"></a>https 问题2 : docker push 出现 unkown blob</h3><p>因为我们的架构是：域名 –&gt; dns解析到 –&gt; F5 VIP –&gt; haproxy –&gt; Harbor docker-compose;</p><p>在这个过程中，出现了一个问题。域名到到 F5是 https，而后面的 Harbor 接到的 http；所以在 docker login 成功。在 docker push 的时候出现了问题 <code>unkown blob</code>；这个问题的原因就是在反向代理中 harbor 的 nginx 代理用的还是 https 方式：<a href="https://github.com/goharbor/harbor/blob/release-1.7.0/docs/installation_guide.md#Troubleshooting">Harbor Troubleshooting</a>。修改<code>common/templates/nginx/nginx.http.conf</code>中的<code>proxy_set_header X-Forwarded-Proto $scheme;</code>把这行注释掉就可以了。</p><p>另外就是要注意 pg 的权限问题。</p><h3 id="https-问题3-docker-push-出现-unauthorized-authentication-required"><a href="#https-问题3-docker-push-出现-unauthorized-authentication-required" class="headerlink" title="https 问题3: docker push 出现 unauthorized: authentication required"></a>https 问题3: docker push 出现 unauthorized: authentication required</h3><p>这是一个很诡异的问题，找了我两个小时；现象是harbor 的页面能登陆，并且页面一切功能正常；直接使用 docker login 也是没有问题，但是在 push 镜像的时候出现，unauthorized: authentication required;明明已经登陆了，也没有问题，但是不知道为啥还是会报错。这个问题在我这里是由于 haproxy 的配置出现的问题。harbor push 镜像的过程是从 harbor 服务获取一个 token，然后再去访问 registry 的存储来存储数据，如果是是本地存储，那么会访问 80 端口。我的配置中将 haproxy 的 80 端口转了 redirect，所以导致认证失败。附上一段在 haproxy 段做证书解析而后端 harbor 为 http 的 haproxy 的服务配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">frontend harbor</span><br><span class="line">  bind *:80</span><br><span class="line">  bind *:443 ssl crt &#x2F;data&#x2F;harbor&#x2F;harbor&#x2F;chenzhijun.top.pem</span><br><span class="line">  reqadd X-Forwarded-Proto:\ https</span><br><span class="line">  default_backend  harbor-backend</span><br><span class="line"></span><br><span class="line">backend harbor-backend</span><br><span class="line">  balance  source</span><br><span class="line">  mode  http</span><br><span class="line">  timeout  client 3h</span><br><span class="line">  timeout  server 3h</span><br><span class="line">  server server1 10.1.1.2:80  check inter 2000 fall 3</span><br></pre></td></tr></table></figure><p>如果还是有问题，可以在<code>/var/log/harbor</code>目录下查看相关的 log 日志。也可以查看系统日志：<code>/var/log/message</code>来定位问题。</p><p>我们也安装了 <code>/install.sh --with-clair --with-chartmuseum</code> clair 和 chartmuseum，这两个工具，clair 的主要目的是扫描 CVE 漏洞，所以是不是需要链接一下外网更新一下；chartmuseum 是一个 helm chart 管理器;</p><p><img src="/images/qiniu/2020-04-26-22-15-03.png" alt="2020-04-26-22-15-03"></p><p><img src="/images/qiniu/2020-04-26-22-16-24.png" alt="2020-04-26-22-16-24"></p><h2 id="升级问题"><a href="#升级问题" class="headerlink" title="升级问题"></a>升级问题</h2><p>最近尝试在本地进行了一次 1.7 升级到 1.8，其实还好啊，就是 cfg 文件变成了 yml 文件，其他的还是一样。并且有迁移工具：<br><a href="https://github.com/goharbor/harbor/blob/release-1.8.0/docs/migration_guide.md">https://github.com/goharbor/harbor/blob/release-1.8.0/docs/migration_guide.md</a></p><p>迁移工具使用方式：</p><p><code>docker run -it --rm -v /data/harbor/harbor/harbor.cfg:/harbor-migration/harbor-cfg/harbor.cfg -v /data/harbor/harbor/harbor.yml:/harbor-migration/harbor-cfg-out/harbor.yml harbor.uat.x.com/goharbor/harbor-migrator:v1.8.3 --cfg up</code></p><p>然后就停掉原来的 1.7 使用新的 1.8 的安装包启动就可以了。</p><p>迁移前一定要进行数据备份，一定要备份。</p><h2 id="helm-使用"><a href="#helm-使用" class="headerlink" title="helm 使用"></a>helm 使用</h2><p>helm 在 v3 之后（我只用了 v3）其实特别好用。在 github 上下载 helm 的安装包，然后把 helm 放到 /usr/local/bin 下面就可以直接执行 helm 命令了。当然前提是要本机有 kubectl，并且本地有 kubeconfig 文件<code>~/.kube/config</code>。这样我们就能愉快的使用 helm 了。那我们怎么使用 harbor 来管理我们的 helm chart 了？</p><p><code>helm repo add --username readonly --password Read2019 myharbor http://harbor.chenzhijun.top/chartrepo/helm-repo</code></p><p><code>http://harbor.chenzhijun.top/chartrepo/</code> 这一段是固定的，<code>helm-repo</code>是 harbor 中的 project 名。然后你将一个 chart 包导入：</p><p><img src="/images/qiniu/2020-04-26-22-25-53.png" alt="2020-04-26-22-25-53"></p><p><code>helm search repo myharbor</code></p><p><code>helm repo update</code></p><p><code>helm install myharbor/consul --gernerate-name</code></p><p>好了，就是这么简单粗暴。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Harbor-镜像仓库安装与-Helm-Chart-管理&quot;&gt;&lt;a href=&quot;#Harbor-镜像仓库安装与-Helm-Chart-管理&quot; class=&quot;headerlink&quot; title=&quot;Harbor  镜像仓库安装与 Helm Chart 管理&quot;&gt;&lt;/a&gt;Harbor  镜像仓库安装与 Helm Chart 管理&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://goharbor.io/&quot;&gt;Harbor&lt;/a&gt; 是一款非常优秀的企业级开源镜像仓库管理器。Harbor 是基于 Docker Registry之上带有用户权限控制，镜像扫描，镜像签名的款工具。用起来很方便，我们公司目前在测试和生产都在使用。从去年 10 月到今天，除去一次 ceph 集群扩容，没有发生一次事故，一直运行很稳定；本文将记录一下我们的使用方式和遇到的一些问题解决方式。&lt;/p&gt;
&lt;h2 id=&quot;Harbor-资源准备&quot;&gt;&lt;a href=&quot;#Harbor-资源准备&quot; class=&quot;headerlink&quot; title=&quot;Harbor 资源准备&quot;&gt;&lt;/a&gt;Harbor 资源准备&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Harbor 1.7.6 版本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Redis 4.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Postgres 10.6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Docker 1.13.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose 1.18.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ceph 12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;haproxy 机器 2 台&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VIP 1 个&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Harbor 主机 2 台&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;公司目前的 harbor 是基于 1.76 搭建的高可用方案，证书的问题，我们是公网使用第三方证书。内网使用自签名的证书；在我这里，我在 harbor 的搭建中采用的是内部 http，外部挂 F5。架构图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/qiniu/2020-04-26-21-15-43.png&quot; alt=&quot;2020-04-26-21-15-43&quot;&gt;&lt;/p&gt;
&lt;p&gt;生产上我们用 F5 替代 Haproxy。&lt;/p&gt;
&lt;p&gt;我们在 Haproxy/F5 层将 https 转成 http 再转发给内部 harbor。&lt;/p&gt;</summary>
    
    
    
    <category term="Harbor" scheme="http://chenzhijun.top/categories/Harbor/"/>
    
    
    <category term="Harbor" scheme="http://chenzhijun.top/tags/Harbor/"/>
    
  </entry>
  
  <entry>
    <title>ETCD 主机恢复</title>
    <link href="http://chenzhijun.top/2022/12/19/etcd-recover/"/>
    <id>http://chenzhijun.top/2022/12/19/etcd-recover/</id>
    <published>2022-12-19T15:01:09.000Z</published>
    <updated>2023-03-17T06:56:58.465Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ETCD-主机恢复"><a href="#ETCD-主机恢复" class="headerlink" title="ETCD 主机恢复"></a>ETCD 主机恢复</h1><p>背景：在没有master 备份的情况下， 集群中有一个master 节点被直接重装系统；该节点非 ETCD master 节点。所以集群还是处于可用状态。但是 master 由之前的三节点变为 2 节点；</p><span id="more"></span> <p>openshift  版本：v170</p><ol><li>ETCD 备份 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#etcd master 节点上操作</span></span><br><span class="line">yum install -y etcd</span><br><span class="line">systemctl <span class="built_in">disable</span> etcd.service</span><br><span class="line">systemctl mask etcd.service</span><br><span class="line"><span class="built_in">export</span> ETCDCTL_API=3</span><br><span class="line">mkdir -p /backup/etcd-config-$(date +%Y%m%d)/</span><br><span class="line">cp -R /etc/etcd/ /backup/etcd-config-$(date +%Y%m%d)/</span><br><span class="line"></span><br><span class="line">oc get nodes -o wide|grep master |awk <span class="string">&#x27;&#123;print $6&quot;:2379&quot;&#125;&#x27;</span>|xargs|tr <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line">ETCD_ENDPOINTS=$(oc get nodes -o wide|grep master |awk <span class="string">&#x27;&#123;print $6&quot;:2379&quot;&#125;&#x27;</span>|xargs|tr <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line">etcdctl --cert /etc/etcd/peer.crt --key /etc/etcd/peer.key --cacert /etc/etcd/ca.crt --endpoints=<span class="variable">$ETCD_ENDPOINTS</span> snapshot save /var/lib/etcd/snapshot.db</span><br><span class="line"></span><br><span class="line"><span class="comment">#要先删掉无效 node,不然redeploy 证书的时候，会卡在 remove console 的步骤</span></span><br><span class="line"><span class="comment">#oc delete nodes [UNKONWN_NODE]</span></span><br><span class="line">oc get nodes|grep master|grep NotReady|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>|xargs -i oc delete nodes &#123;&#125;</span><br><span class="line"></span><br><span class="line">cnsz92vl12816.chenzhijun.cn</span><br></pre></td></tr></table></figure></li><li>重新部署 ETCD-CA</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> TOKEN=eyJhbGciOiJIUzUxMiJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.5DWDErsUzcBYK-KD_j5tjemwPIrLMU3Xle5lDaoj-3HkYBeMQ2WTvF7wvkIj4Kint_XABxT7MgInCp9Z-gklyw</span><br><span class="line"></span><br><span class="line"><span class="comment">#0.恢复 ETCD 的 CA， 然后 certificate， 然后 master ca， master certificate；</span></span><br><span class="line"><span class="comment">#进入容器，增加 redeploy-etcd-ca.yml</span></span><br><span class="line"><span class="comment">#重新部署 ca</span></span><br><span class="line">cp add_new_nodes.yml redeploy-etcd-ca.yml</span><br><span class="line">---</span><br><span class="line">- import_playbook: openshift-etcd/redeploy-ca.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#退出容器，执行部署 ca，这里还没有增加主机</span></span><br><span class="line">curl -k -i -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> --data <span class="string">&#x27;&#123;&#125;&#x27;</span> https://localhost:5001/api/v1/playbooks/redeploy-etcd-ca.yml -X POST</span><br><span class="line"></span><br><span class="line">UUID=xxxx</span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/<span class="built_in">jobs</span>/<span class="variable">$UUID</span>/stdout -X GET</span><br></pre></td></tr></table></figure><ol start="3"><li>重新部署 ETCD 证书</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#复制 etcd 证书更新 playbook</span></span><br><span class="line">cp add_new_nodes.yml redeploy-etcd-certificates.yml</span><br><span class="line">---</span><br><span class="line">- import_playbook: openshift-etcd/redeploy-certificates.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新部署 etcd 证书</span></span><br><span class="line">curl -k -i -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> --data <span class="string">&#x27;&#123;&#125;&#x27;</span> https://localhost:5001/api/v1/playbooks/redeploy-etcd-certificates.yml -X POST</span><br><span class="line"></span><br><span class="line">cp add_new_nodes.yml redeploy-master-ca.yml</span><br><span class="line">---</span><br><span class="line">- import_playbook: openshift-master/redeploy-openshift-ca.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新部署 master 证书, 不执行，master 有</span></span><br><span class="line"><span class="comment">#curl -k -i -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: $TOKEN&quot; --data &#x27;&#123;&#125;&#x27; https://localhost:5001/api/v1/playbooks/redeploy-master-ca.yml -X POST</span></span><br><span class="line"></span><br><span class="line">==&gt;</span><br><span class="line">curl -k -i -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> --data <span class="string">&#x27;&#123;&#125;&#x27;</span> https://localhost:5001/api/v1/playbooks/redeploy-certificates.yml -X POST</span><br><span class="line"></span><br><span class="line">UUID=xxxx</span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/<span class="built_in">jobs</span>/<span class="variable">$UUID</span>/stdout -X GET</span><br></pre></td></tr></table></figure><ol start="4"><li>增加 master 主机</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#重新部署一遍 master 证书，不然后面的Wait for /apis/metrics.k8s.io/v1beta1 when registered 会出现异常,最好重新部署一遍证书</span></span><br><span class="line">ansible-playbook -i ./inventory project/openshift-master/redeploy-openshift-ca.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">##增加主机</span></span><br><span class="line"><span class="built_in">export</span> ETCD_NODES=cnsz92vl12816.chenzhijun.cn</span><br><span class="line"></span><br><span class="line"><span class="comment">###1. 增加 hosts 配置</span></span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/groups/new_nodes -X POST</span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/groups/new_masters -X POST</span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/hosts/<span class="variable">$ETCD_NODES</span>/groups/new_nodes -X POST </span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/hosts/<span class="variable">$ETCD_NODES</span>/groups/new_masters -X POST </span><br><span class="line">curl -k -i -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> --data <span class="string">&#x27;&#123;&quot;openshift_node_group_name&quot;: &quot;node-config-master&quot;&#125;&#x27;</span> https://localhost:5001/api/v1/hostvars/<span class="variable">$ETCD_NODES</span>/groups/new_nodes?<span class="built_in">type</span>=inventory -X POST</span><br><span class="line">curl -k -i -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> --data <span class="string">&#x27;&#123;&quot;openshift_node_group_name&quot;: &quot;node-config-master&quot;&#125;&#x27;</span> https://localhost:5001/api/v1/hostvars/<span class="variable">$ETCD_NODES</span>/groups/new_masters?<span class="built_in">type</span>=inventory -X POST</span><br></pre></td></tr></table></figure><ol start="5"><li>恢复 master pod 组件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###恢复 master</span></span><br><span class="line">进入到 ansible-runner-service 容器中，</span><br><span class="line"><span class="built_in">cd</span> /root/ansible-runner-service/cmg-ocp/project</span><br><span class="line">cp add_new_nodes.yml add_new_masters.yml</span><br><span class="line"><span class="comment">#修改里面的内容为 openshfit-master</span></span><br><span class="line">---</span><br><span class="line">- import_playbook: openshift-master/scaleup.yml</span><br><span class="line"></span><br><span class="line">curl -k -i -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> --data <span class="string">&#x27;&#123;&#125;&#x27;</span> https://localhost:5001/api/v1/playbooks/add_new_masters.yml -X POST</span><br><span class="line"></span><br><span class="line">UUID=xxxx</span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/<span class="built_in">jobs</span>/<span class="variable">$UUID</span>/stdout -X GET</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">export</span> ETCD_NODES=cnsz92vl12816.chenzhijun.cn</span><br><span class="line"></span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/groups/new_etcd -X POST</span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/hosts/<span class="variable">$ETCD_NODES</span>/groups/new_etcd -X POST</span><br><span class="line"></span><br><span class="line">curl -k -i -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> --data <span class="string">&#x27;&#123;&quot;openshift_node_group_name&quot;: &quot;node-config-master&quot;&#125;&#x27;</span> https://localhost:5001/api/v1/hostvars/<span class="variable">$ETCD_NODES</span>/groups/new_etcd?<span class="built_in">type</span>=inventory -X POST</span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复 etcd</span></span><br><span class="line"><span class="comment">#需要将 hosts 文件里面的 new_master,new_nodes 改到正确的位置</span></span><br><span class="line">vi /etc/ansible-runner/inventory/hosts</span><br><span class="line"></span><br><span class="line">OSEv3:</span><br><span class="line">  children:</span><br><span class="line">    etcd:</span><br><span class="line">      hosts:</span><br><span class="line">        cnsz92vl10440.chenzhijun.cn: null</span><br><span class="line">        cnsz92vl10441.chenzhijun.cn: null</span><br><span class="line">    masters:</span><br><span class="line">      hosts:</span><br><span class="line">        cnsz92vl10442.chenzhijun.cn: null</span><br><span class="line">        cnsz92vl10440.chenzhijun.cn: null</span><br><span class="line">        cnsz92vl10441.chenzhijun.cn: null</span><br><span class="line">    new_etcd:</span><br><span class="line">      hosts:</span><br><span class="line">        cnsz92vl10442.chenzhijun.cn: null</span><br><span class="line">    nodes:</span><br><span class="line">      hosts:</span><br><span class="line">        cnsz92vl10442.chenzhijun.cn:</span><br><span class="line">          openshift_node_group_name: node-config-master</span><br><span class="line">        cnsz92vl10440.chenzhijun.cn:</span><br><span class="line">          openshift_node_group_name: node-config-master</span><br><span class="line">        cnsz92vl10441.chenzhijun.cn:</span><br><span class="line">          openshift_node_group_name: node-config-master</span><br><span class="line">        cnsz92vl10443.chenzhijun.cn:</span><br><span class="line">          openshift_node_group_name: node-config-infra</span><br><span class="line">        cnsz92vl10445.chenzhijun.cn:</span><br><span class="line">          openshift_node_group_name: node-config-infra</span><br><span class="line">        cnsz92vl10448.chenzhijun.cn:</span><br><span class="line">          openshift_node_group_name: node-config-compute</span><br><span class="line">        cnsz92vl11127.chenzhijun.cn:</span><br><span class="line">          openshift_node_group_name: node-config-infra</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="6"><li><p>检查 hosts 文件，确保之前的 new_masters 配置已删除</p></li><li><p>确认 ETCD 中失败节点删除</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">100.69.137.3:2379,100.69.137.4:2379,100.69.137.5:2379</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除集群中原来的老 etcd 节点</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> ETCDCTL_API=3</span><br><span class="line"><span class="comment">#查询etcd member list</span></span><br><span class="line">etcdctl --cert /etc/etcd/peer.crt --key /etc/etcd/peer.key --cacert /etc/etcd/ca.crt --endpoints=<span class="string">&quot;100.69.137.3:2379,100.69.137.4:2379,100.69.137.5:2379&quot;</span> member list</span><br><span class="line"><span class="comment">#查询集群状态详情</span></span><br><span class="line">etcdctl --cert /etc/etcd/peer.crt --key /etc/etcd/peer.key --cacert /etc/etcd/ca.crt --endpoints=<span class="string">&quot;100.69.137.3:2379, has been 100.69.137.4:2379,100.69.137.5:2379&quot;</span> --write-out=table endpoint status</span><br><span class="line"><span class="comment">#删除失败节点</span></span><br><span class="line">etcdctl --cert /etc/etcd/peer.crt --key /etc/etcd/peer.key --cacert /etc/etcd/ca.crt --endpoints=<span class="string">&quot;100.69.137.3:2379,100.69.137.4:2379,100.69.137.5:2379&quot;</span> member remove ID</span><br><span class="line"></span><br><span class="line"><span class="comment">#命令执行 example</span></span><br><span class="line">etcdctl --cert /etc/etcd/peer.crt --key /etc/etcd/peer.key --cacert /etc/etcd/ca.crt --endpoints=<span class="string">&quot;100.69.137.3:2379,100.69.137.4:2379,100.69.137.5:2379&quot;</span> --write-out=table endpoint status</span><br><span class="line">Failed to get the status of endpoint 100.75.46.77:2379 (context deadline exceeded)</span><br><span class="line">+-------------------+------------------+---------+---------+-----------+-----------+------------+</span><br><span class="line">|     ENDPOINT      |        ID        | VERSION | DB SIZE | IS LEADER | RAFT TERM | RAFT INDEX |</span><br><span class="line">+-------------------+------------------+---------+---------+-----------+-----------+------------+</span><br><span class="line">| 100.75.46.76:2379 | 29ace8a008187a61 |  3.2.22 |   26 MB |     <span class="literal">false</span> |        15 |      74501 |</span><br><span class="line">| 100.75.46.78:2379 | 189fb2b310767596 |  3.2.22 |   26 MB |      <span class="literal">true</span> |        15 |      74516 |</span><br><span class="line">+-------------------+------------------+---------+---------+-----------+-----------+------------+</span><br><span class="line">[root@cnsz92vl10441 ~]<span class="comment"># etcdctl --cert /etc/etcd/peer.crt --key /etc/etcd/peer.key --cacert /etc/etcd/ca.crt --endpoints=&quot;100.75.46.76:2379,100.75.46.77:2379,100.75.46.78:2379&quot; member list</span></span><br><span class="line">189fb2b310767596, started, cnsz92vl10441, https://100.75.46.78:2380, https://100.75.46.78:2379</span><br><span class="line">29ace8a008187a61, started, cnsz92vl10440, https://100.75.46.76:2380, https://100.75.46.76:2379</span><br><span class="line">b25d6fd89ab25bb3, started, cnsz92vl10442, https://100.75.46.77:2380, https://100.75.46.77:2379</span><br><span class="line">[root@cnsz92vl10441 ~]<span class="comment"># etcdctl --cert /etc/etcd/peer.crt --key /etc/etcd/peer.key --cacert /etc/etcd/ca.crt --endpoints=&quot;100.75.46.76:2379,100.75.46.77:2379,100.75.46.78:2379&quot; member remove b25d6fd89ab25bb3</span></span><br><span class="line">Member b25d6fd89ab25bb3 removed from cluster 4547a2deaf4fef8e</span><br></pre></td></tr></table></figure><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b67bcee1-ec5d-4ed1-bd39-181a74cde946/Untitled.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b67bcee1-ec5d-4ed1-bd39-181a74cde946/Untitled.png"></p><ol start="8"><li>恢复 ETCD</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#增加 new_etcd 分组 . 只要有 new_etcd 这个组，不要 new_masters, new_nodes</span></span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/groups/new_etcd -X POST</span><br><span class="line"></span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/hosts/<span class="variable">$ETCD_NODES</span>/groups/new_etcd -X POST </span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/ansible-runner-service/cmg-ocp/project</span><br><span class="line">cp add_new_nodes.yml add_new_etcd.yml</span><br><span class="line"><span class="comment">#修改里面的内容为 openshfit-master</span></span><br><span class="line">---</span><br><span class="line">- import_playbook: openshift-etcd/scaleup.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除原来集群中失败的 etcd 节点;会拉取新的 etcd 镜像，保持镜像仓库镜像只有一个版本；</span></span><br><span class="line">curl -k -i -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> --data <span class="string">&#x27;&#123;&#125;&#x27;</span> https://localhost:5001/api/v1/playbooks/add_new_etcd.yml -X POST</span><br><span class="line">UUID=xxxx</span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/<span class="built_in">jobs</span>/<span class="variable">$UUID</span>/stdout -X GET</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="9"><li>验证</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">etcdctl --cert /etc/etcd/peer.crt --key /etc/etcd/peer.key --cacert /etc/etcd/ca.crt --endpoints=<span class="string">&quot;100.75.46.76:2379,100.75.46.77:2379,100.75.46.78:2379&quot;</span> --write-out=table endpoint status</span><br><span class="line"></span><br><span class="line">oc get pods -n kube-system</span><br></pre></td></tr></table></figure><p>附录：</p><ol><li>bootstrap 常用参数命令 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#TOKEN 导入</span></span><br><span class="line"><span class="built_in">export</span> TOKEN=eyJhbGciOiJIUzUxMiJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.5DWDErsUzcBYK-KD_j5tjemwPIrLMU3Xle5lDaoj-3HkYBeMQ2WTvF7wvkIj4Kint_XABxT7MgInCp9Z-gklyw</span><br><span class="line"></span><br><span class="line"><span class="comment">#部署集群</span></span><br><span class="line">curl -k -i -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> --data <span class="string">&#x27;&#123;&#125;&#x27;</span> https://localhost:5001/api/v1/playbooks/deploy_cluster.yml -X POST</span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载集群</span></span><br><span class="line">curl -k -i -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> --data <span class="string">&#x27;&#123;&#125;&#x27;</span> https://localhost:5001/api/v1/playbooks/uninstall.yml -X POST</span><br><span class="line"></span><br><span class="line"><span class="comment">##删除命令</span></span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/groups/new_etcd -X DELETE</span><br><span class="line"></span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/groups/new_masters -X DELETE</span><br><span class="line"></span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/groups/new_nodes -X DELETE</span><br><span class="line"></span><br><span class="line"><span class="comment">#实时日志</span></span><br><span class="line">curl -k -i -H <span class="string">&quot;Authorization: <span class="variable">$TOKEN</span>&quot;</span> https://localhost:5001/api/v1/<span class="built_in">jobs</span>/<span class="variable">$UUID</span>/stdout -X GET</span><br></pre></td></tr></table></figure></li><li>卡在某个 ansible 脚本 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fatal: [cnsz92vl10442.chenzhijun.cn -&gt; cnsz92vl10441.chenzhijun.cn]: FAILED! =&gt; &#123;<span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;oc&quot;</span>, <span class="string">&quot;adm&quot;</span>, <span class="string">&quot;create-api-client-config&quot;</span>, <span class="string">&quot;--certificate-authority=/etc/origin/master/ca.crt&quot;</span>, <span class="string">&quot;--client-dir=/tmp/openshift-ansible-O3mFaX&quot;</span>, <span class="string">&quot;--groups=system:masters,system:openshift-master&quot;</span>, <span class="string">&quot;--master=https://cnsz92vl10441:8443&quot;</span>, <span class="string">&quot;--public-master=https://cnsz92vl10441:8443&quot;</span>, <span class="string">&quot;--signer-cert=/etc/origin/master/ca.crt&quot;</span>, <span class="string">&quot;--signer-key=/etc/origin/master/ca.key&quot;</span>, <span class="string">&quot;--signer-serial=/etc/origin/master/ca.serial.txt&quot;</span>, <span class="string">&quot;--user=system:openshift-master&quot;</span>, <span class="string">&quot;--basename=openshift-master&quot;</span>, <span class="string">&quot;--expire-days=730&quot;</span>], <span class="string">&quot;delta&quot;</span>: <span class="string">&quot;0:00:00.193549&quot;</span>, <span class="string">&quot;end&quot;</span>: <span class="string">&quot;2021-01-11 15:59:54.383491&quot;</span>, <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;non-zero return code&quot;</span>, <span class="string">&quot;rc&quot;</span>: 1, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;2021-01-11 15:59:54.189942&quot;</span>, <span class="string">&quot;stderr&quot;</span>: <span class="string">&quot;error: --signer-serial, \&quot;/etc/origin/master/ca.serial.txt\&quot; must be a valid file&quot;</span>, <span class="string">&quot;stderr_lines&quot;</span>: [<span class="string">&quot;error: --signer-serial, \&quot;/etc/origin/master/ca.serial.txt\&quot; must be a valid file&quot;</span>], <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: []&#125;</span><br><span class="line"></span><br><span class="line">看下是否 node 没有从集群中删除</span><br></pre></td></tr></table></figure></li><li>错误 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">TASK [openshift_ca : Install the base package <span class="keyword">for</span> admin tooling] ***************</span><br><span class="line">FAILED - RETRYING: Install the base package <span class="keyword">for</span> admin tooling (3 retries left).</span><br><span class="line">FAILED - RETRYING: Install the base package <span class="keyword">for</span> admin tooling (2 retries left).</span><br><span class="line">FAILED - RETRYING: Install the base package <span class="keyword">for</span> admin tooling (1 retries left).</span><br><span class="line">fatal: [cnsz92vl10442.chenzhijun.cn -&gt; cnsz92vl10441.chenzhijun.cn]: FAILED! =&gt; &#123;<span class="string">&quot;attempts&quot;</span>: 3, <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;No package matching &#x27;atomic-openshift-3.11.170&#x27; found available, installed or updated&quot;</span>, <span class="string">&quot;rc&quot;</span>: 126, <span class="string">&quot;results&quot;</span>: [<span class="string">&quot;No package matching &#x27;atomic-openshift-3.11.170&#x27; found available, installed or updated&quot;</span>]&#125;</span><br><span class="line"></span><br><span class="line">ansible masters -i hosts -m shell -a <span class="string">&quot;yum clean all&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#有可能少包，那就需要手动装</span></span><br><span class="line">scp atomic-openshift-3.11.170-1.git.0.00cac56.el7.x86_64.rpm cnsz92vl10441:/tmp/</span><br><span class="line"></span><br><span class="line">rpm -Uvh atomic-openshift-3.11.170-1.git.0.00cac56.el7.x86_64.rpm</span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -i ./inventory ./project/openshift-master/redeploy-openshift-ca.yml</span><br><span class="line"></span><br><span class="line">ansible-playbook -i ./inventory ./project/redeploy-certificates.yml</span><br><span class="line"></span><br><span class="line">ansible-playbook -i ./inventory ./project/openshift-master/redeploy-certificates.yml</span><br><span class="line"></span><br><span class="line">osm_etcd_image=harbor.uat.chenzhijun.top/rhel7/etcd:3.2.22</span><br><span class="line">openshift_pkg_version=-3.11.170</span><br><span class="line"></span><br><span class="line">openshift_is_atomic=<span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;ETCD-主机恢复&quot;&gt;&lt;a href=&quot;#ETCD-主机恢复&quot; class=&quot;headerlink&quot; title=&quot;ETCD 主机恢复&quot;&gt;&lt;/a&gt;ETCD 主机恢复&lt;/h1&gt;&lt;p&gt;背景：在没有master 备份的情况下， 集群中有一个master 节点被直接重装系统；该节点非 ETCD master 节点。所以集群还是处于可用状态。但是 master 由之前的三节点变为 2 节点；&lt;/p&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes 基础 一（简介与核心组件介绍）</title>
    <link href="http://chenzhijun.top/2022/11/07/kubernetes-basic-1-base-concepts/"/>
    <id>http://chenzhijun.top/2022/11/07/kubernetes-basic-1-base-concepts/</id>
    <published>2022-11-07T14:51:32.000Z</published>
    <updated>2023-03-21T13:59:14.344Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kubernetes-基础-一（简介与核心组件介绍）"><a href="#kubernetes-基础-一（简介与核心组件介绍）" class="headerlink" title="kubernetes 基础 一（简介与核心组件介绍）"></a>kubernetes 基础 一（简介与核心组件介绍）</h1><h2 id="Kubernetes-是什么？"><a href="#Kubernetes-是什么？" class="headerlink" title="Kubernetes 是什么？"></a>Kubernetes 是什么？</h2><p>Kubernetes 是一个用于编排容器化服务的的开源平台。我们通常会将 Kubernetes 简称为 K8s。Kubernetes 通常也被大家当做容器编排引擎，可以这样说，目前市面上很多的 PaaS 平台基本都是使用 k8s 作为其底层支持。</p><span id="more"></span> <h2 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h2><p>如果了解到 kubernetes 是什么，那么 kubernetes 为什么我们要使用了？它提供了我们什么能力而让其这么火？</p><h3 id="应用编排与服务发现"><a href="#应用编排与服务发现" class="headerlink" title="应用编排与服务发现"></a>应用编排与服务发现</h3><p>kubernetes 能够帮助我们管理我们的业务应用系统，并且在内部可以基于dns 和 ip 来进行通信访问，对外可以提供 service 和 loadbalance 两种方式提供服务访问。</p><h3 id="储存管理"><a href="#储存管理" class="headerlink" title="储存管理"></a>储存管理</h3><p>kubernetes 提供多种方式来进行数据的持久化管理，比如本地卷，ceph，第三方公有云的存储等</p><h3 id="自动发布与回滚"><a href="#自动发布与回滚" class="headerlink" title="自动发布与回滚"></a>自动发布与回滚</h3><p>kubernetes 可以工具你配置的应用的desired 来以可控的方式控制应用的发布与回滚</p><h3 id="应用自愈"><a href="#应用自愈" class="headerlink" title="应用自愈"></a>应用自愈</h3><p>kubernetes 可以在服务状态不对时，进行服务自愈。比如健康检查</p><h3 id="秘钥与配置管理"><a href="#秘钥与配置管理" class="headerlink" title="秘钥与配置管理"></a>秘钥与配置管理</h3><p>可以在应用无需重启就能更新服务的 secret 和配置 config。这个功能其实可以做比如动态更新配置，多环境配置等。</p><h2 id="核心控制平面组件"><a href="#核心控制平面组件" class="headerlink" title="核心控制平面组件"></a>核心控制平面组件</h2><p><img src="/images/qiniu/2020-06-07-17-19-38.png" alt="2020-06-07-17-19-38"></p><p>kubernetes 集群中机器分为两个类型，控制节点和工作节点；kubernetes 组件又分为控制面组件和节点组件。比如控制平面组件为：kube-apserver,kube-scheduler,kube-controller-manager，ETCD；这些控制平面的组件只会运行在 master 节点上。而节点组件：kubelet，kube-proxy 则会运行在集群所有节点上（包括 master 和 worker）。接下来我么来了解下每个组件的功能是做什么的。</p><h3 id="kube-apiserver"><a href="#kube-apiserver" class="headerlink" title="kube-apiserver"></a>kube-apiserver</h3><p>kube-apiserver 是控制平面的组件。主要用来暴露 kubernetes 的 api。kube-apiserver 设计成可水平扩展的应用，用一个 loadbalance 就可以对其所有 apiserver 的实例进行负载。</p><h3 id="kube-scheduler"><a href="#kube-scheduler" class="headerlink" title="kube-scheduler"></a>kube-scheduler</h3><p>主要用来监听所有没有调度主机的新创建的 pod，并且将 pod 调度到主机上。scheduler 调度规则包含了很多因素：独立和集群需要的资源，硬件、软件、策略约束，亲和性和非亲和性，数据约束，业务干扰，调度时间等</p><h3 id="kube-controller-manager"><a href="#kube-controller-manager" class="headerlink" title="kube-controller-manager"></a>kube-controller-manager</h3><p>kubernetes 的主要控制器，通过 apiserver 来监控整个集群的状态，并且确保集群处于预期的工作状态。它由一系列独立的 controller 组成。为了减少复杂性，他们封装进了一个二进制文件中，并且运行一个进程。</p><p>这些 controller 包括：Node controller，Replication controller，Endpoints controller，Service Account &amp; Token controllers等等。</p><h3 id="ETCD"><a href="#ETCD" class="headerlink" title="ETCD"></a>ETCD</h3><p>etcd 本身是一个高可用的键值数据库，kubernetes 用其来进行集群的数据存储。</p><h2 id="核心节点组件"><a href="#核心节点组件" class="headerlink" title="核心节点组件"></a>核心节点组件</h2><h3 id="kubelet"><a href="#kubelet" class="headerlink" title="kubelet"></a>kubelet</h3><p>在集群中的每个主机上都会运行的一个 agent，确保容器在 pod 中运行。kubelet 通过PodSpec来管理容器，并且确保他们运行正常。注意：如果是主机原来的容器，kubelet 并不会进行管理。</p><h3 id="kube-proxy"><a href="#kube-proxy" class="headerlink" title="kube-proxy"></a>kube-proxy</h3><p>kube-proxy 是每个主机上都会有的一个网络代理，是 service 的主要实现方式。kube-proxy 包含主机上的网络规则，这些规则在集群中定了集群内部的访问和外部的网络会话访问方式。</p><h2 id="集群插件"><a href="#集群插件" class="headerlink" title="集群插件"></a>集群插件</h2><p>集群插件都是属于集群级别的组件，以deployment，daemonset等方式运行在 kube-system 的命名空间下，用来实现集群级别的一些功能。</p><h3 id="DNS-插件"><a href="#DNS-插件" class="headerlink" title="DNS 插件"></a>DNS 插件</h3><p>DNS 是集群中的必须安装的插件，在集群中很多功能都会依赖 dns 。kubernetes 创建的容器会自动包含这个 dns 服务器在容器的 dns 搜索域中。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;kubernetes-基础-一（简介与核心组件介绍）&quot;&gt;&lt;a href=&quot;#kubernetes-基础-一（简介与核心组件介绍）&quot; class=&quot;headerlink&quot; title=&quot;kubernetes 基础 一（简介与核心组件介绍）&quot;&gt;&lt;/a&gt;kubernetes 基础 一（简介与核心组件介绍）&lt;/h1&gt;&lt;h2 id=&quot;Kubernetes-是什么？&quot;&gt;&lt;a href=&quot;#Kubernetes-是什么？&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes 是什么？&quot;&gt;&lt;/a&gt;Kubernetes 是什么？&lt;/h2&gt;&lt;p&gt;Kubernetes 是一个用于编排容器化服务的的开源平台。我们通常会将 Kubernetes 简称为 K8s。Kubernetes 通常也被大家当做容器编排引擎，可以这样说，目前市面上很多的 PaaS 平台基本都是使用 k8s 作为其底层支持。&lt;/p&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot&amp;SpringCloud 组件容器化方案</title>
    <link href="http://chenzhijun.top/2022/08/08/kubernetes-springboot-cloud/"/>
    <id>http://chenzhijun.top/2022/08/08/kubernetes-springboot-cloud/</id>
    <published>2022-08-08T13:02:42.000Z</published>
    <updated>2023-03-21T13:59:08.600Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot-amp-SpringCloud-组件容器化方案"><a href="#SpringBoot-amp-SpringCloud-组件容器化方案" class="headerlink" title="SpringBoot&amp;SpringCloud 组件容器化方案"></a>SpringBoot&amp;SpringCloud 组件容器化方案</h1><p>该方案为 Java 开发人员在使用 springboot 开发以及是用 springcloud 组件时，将 组件/服务 进行容器化部署运行的方案。</p><span id="more"></span> <h2 id="0-前置约定"><a href="#0-前置约定" class="headerlink" title="0. 前置约定"></a>0. 前置约定</h2><pre><code>对 Java 开发时使用到的相关开发基础组件版本约定：</code></pre><ol><li>Java Version: 1.8+</li><li>SpringBoot Version: 2.3.5.RELEASE</li><li>SpringCloud Version: Hoxton.SR9 （请注意，springcloud 版本有 springboot 版本要求）</li><li>Openshift Version: 3.11，4.6</li><li>Kubernetes Version: 1.11（对应 ocp3），1.19（对应 ocp4）</li></ol><h1 id="1-SpringBoot-服务容器化"><a href="#1-SpringBoot-服务容器化" class="headerlink" title="1. SpringBoot 服务容器化"></a>1. SpringBoot 服务容器化</h1><pre><code>目前 Java 项目开发多基于 springboot ，开发完成后多以嵌入 web 服务器的方式构建成 jar 包方式运行服务。容器化过程中，我们需要将其进行容器化。下面将以一个用户服务`user-app`进行示例：</code></pre><ol><li><p>项目结构；</p><p> 其中 src 为我们的源代码目录；Dockerfile 文件可以存放到项目根路径下，也可以自定义，自定义目录时，请注意在构建时需要指定文件路径。</p><p> <img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f6baf9b1-9002-41c1-b721-702ce15208ea/Untitled.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f6baf9b1-9002-41c1-b721-702ce15208ea/Untitled.png"></p></li><li><p>业务镜像构建；</p><p> 通过在项目中增加 <code>Dockerfile</code> 文件可以将业务服务制作成一个业务镜像，<code>Dockerfile</code>模板内容为：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># registry-c.chenzhijun.top 为金科提供的镜像仓库服务</span></span><br><span class="line"><span class="comment"># openjdk:11.0.10-jdk-oracle 为原生 Java 基础镜像，可按需求定制</span></span><br><span class="line"><span class="string">FROM</span> <span class="string">registry-c.chenzhijun.top/base/openjdk:11.0.10-jdk-oracle</span></span><br><span class="line"><span class="comment"># 业务镜像构建指令</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">target/*.jar</span> <span class="string">/home/</span></span><br><span class="line"><span class="comment"># 容器运行时的默认启动命令，实际运行中可覆盖</span></span><br><span class="line"><span class="comment"># user-app-0.0.1-SNAPSHOT.jar 请替换为实际maven、gradle 构建时的 jar 包名称</span></span><br><span class="line"><span class="string">CMD</span> [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/home/user-app-0.0.1-SNAPSHOT.jar&quot;</span>]</span><br></pre></td></tr></table></figure><p> 请注意：在构建镜像前需要先生成 jar 包，之后再使用 <code>docker build -t [YOUR_IMAGE_NAME] .</code> 来生成业务镜像。</p></li><li><p>业务部署</p><p> 在通过步骤 2 生成业务基础镜像后，接下来需要将其进行业务部署。业务部署的deployment 模板内容：<code>user-app.yaml</code></p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">user-app</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">user-app</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">springcloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">user-app</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">user-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">java</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;-jar&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/home/user-app-0.0.1-SNAPSHOT.jar</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;--spring.config.additional-location=file:./config/&#x27;</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROFILE_ACTIVE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">prod</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;registry-c.chenzhijun.top/czj/user-app:latest&#x27;</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">user-app</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/home/config</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">volume-config</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line">      <span class="attr">securityContext:</span> &#123;&#125;</span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">30</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">userapp-config</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">volume-config</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">application-dev.yml:</span> <span class="string">|-</span></span><br><span class="line">    <span class="attr">spring:</span></span><br><span class="line">      <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line">    <span class="attr">config:</span> <span class="string">uat-config</span></span><br><span class="line">    <span class="attr">eureka:</span></span><br><span class="line">      <span class="attr">client:</span></span><br><span class="line">        <span class="attr">serviceUrl:</span></span><br><span class="line">          <span class="attr">defaultZone:</span> <span class="string">http://eureka-1:8761/eureka/,http://eureka-2:8762/eureka/,http://eureka-3:8763/eureka/</span></span><br><span class="line">      <span class="attr">instance:</span></span><br><span class="line">        <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">application-prod.yml:</span> <span class="string">|-</span></span><br><span class="line">    <span class="attr">spring:</span></span><br><span class="line">      <span class="attr">profiles:</span> <span class="string">prod</span></span><br><span class="line">    <span class="attr">config:</span> <span class="string">uat-config</span></span><br><span class="line">    <span class="attr">eureka:</span></span><br><span class="line">      <span class="attr">client:</span></span><br><span class="line">        <span class="attr">serviceUrl:</span></span><br><span class="line">          <span class="attr">defaultZone:</span> <span class="string">http://eureka-1:8761/eureka/,http://eureka-2:8762/eureka/,http://eureka-3:8763/eureka/</span></span><br><span class="line">      <span class="attr">instance:</span></span><br><span class="line">        <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">application-uat.yml:</span> <span class="string">|-</span></span><br><span class="line">    <span class="attr">spring:</span></span><br><span class="line">      <span class="attr">profiles:</span> <span class="string">uat</span></span><br><span class="line">    <span class="attr">config:</span> <span class="string">uat-config</span></span><br><span class="line">    <span class="attr">eureka:</span></span><br><span class="line">      <span class="attr">client:</span></span><br><span class="line">        <span class="attr">serviceUrl:</span></span><br><span class="line">          <span class="attr">defaultZone:</span> <span class="string">http://eureka-1:8761/eureka/,http://eureka-2:8762/eureka/,http://eureka-3:8763/eureka/</span></span><br><span class="line">      <span class="attr">instance:</span></span><br><span class="line">        <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">userapp-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">springcloud</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">user-app</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">user-app</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">springcloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">user-app</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">user-app</span></span><br><span class="line"><span class="attr">status:</span></span><br><span class="line">  <span class="attr">loadBalancer:</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p> 通过 <code>configmap</code> 来控制相关的配置时，我们需要制定以下 config 的位置。实际运行中的文件目录结构如下：</p><p> <img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/328e4f73-992b-49a3-8e50-6a7c368f8438/Untitled.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/328e4f73-992b-49a3-8e50-6a7c368f8438/Untitled.png"></p></li><li><p> 检查部署结构</p></li></ol><pre><code>单体的 springboot 服务结合 kubernetes 的 configmap 其实际效果不是特别大，因为明文的 configmap 可以直接在 springboot 项目中多放置配置文件使用。但在实际中，我们也可以使用 kubernetes 的 secret 来进行配置的简单加密，部署方式也是类似，只是将 configmap 改为 secret 即可。完整示例代码可以参考：[http://git.dev.cmrh.com/springcloud/user-app.git](http://git.dev.cmrh.com/springcloud/user-app.git)</code></pre><h2 id="2-SpringCloud-组件的容器化"><a href="#2-SpringCloud-组件的容器化" class="headerlink" title="2. SpringCloud 组件的容器化"></a>2. SpringCloud 组件的容器化</h2><pre><code>SpringCloud 全家桶中有非常多的组件，有些组件需要结合客户端使用，有些是属于独立中间件，现挑选其中常见组件进行容器化示例。示例组件包含：注册中心 Eureka，网关 Zuul，熔断监控 Hystrix、Turbine，微服务管理 SpringCloud Admin，客户端负载均衡器 Robbin。 请注意，示例中 SpringCloud 版本为：Hoxton.SR9；对应的 Springboot 版本为：2.3.5.RELEASE。</code></pre><h3 id="2-1-Eureka-服务容器化"><a href="#2-1-Eureka-服务容器化" class="headerlink" title="2.1 Eureka 服务容器化"></a>2.1 Eureka 服务容器化</h3><ol><li>Eureka 高可用架构；<pre><code> Eureka 原生高可用方案为部署三个 Eureka 节点，节点直接互相注册来达成高可用；在容器化过程中，我们通过部署独立的三个 Eureka 实例：eureka-1，eureka-2，eureka-3；三实例互相注册来达成高可用。</code></pre></li><li>Eureka 高可用部署；<pre><code> Eureka 作为通用的组件，可以使用通用的部署方式：</code></pre> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">eureka-1</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">eureka-1</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">springcloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">eureka-1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">eureka-1</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROFILE_ACTIVE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">eureka-1</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;registry-c.chenzhijun.top/czj/eureka-server:latest&#x27;</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">eureka-1</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">eureka-2</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">eureka-2</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">springcloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">eureka-2</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">eureka-2</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROFILE_ACTIVE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">eureka-2</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;registry-c.chenzhijun.top/czj/eureka-server:latest&#x27;</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">eureka-2</span></span><br><span class="line">          <span class="attr">resources:</span> &#123;&#125;</span><br><span class="line">          <span class="attr">terminationMessagePath:</span> <span class="string">/dev/termination-log</span></span><br><span class="line">          <span class="attr">terminationMessagePolicy:</span> <span class="string">File</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">eureka-3</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">eureka-3</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">springcloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">eureka-3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">eureka-3</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROFILE_ACTIVE</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">eureka-3</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;registry-c.chenzhijun.top/czj/eureka-server:latest&#x27;</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">eureka-server</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">eureka-1</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">eureka-1</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">springcloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8761</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8761</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">eureka-1</span></span><br><span class="line"><span class="attr">status:</span></span><br><span class="line">  <span class="attr">loadBalancer:</span> &#123;&#125;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">eureka-2</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">eureka-2</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">springcloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8762</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8762</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">eureka-2</span></span><br><span class="line"><span class="attr">status:</span></span><br><span class="line">  <span class="attr">loadBalancer:</span> &#123;&#125;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">eureka-3</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">eureka-3</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">springcloud</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8763</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8763</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">eureka-3</span></span><br><span class="line"><span class="attr">status:</span></span><br><span class="line">  <span class="attr">loadBalancer:</span> &#123;&#125;</span><br></pre></td></tr></table></figure></li><li>Eureka 访问验证<pre><code> 在 ocp 平台通过创建 route 来将 Eureka 服务暴露给业务使用。具体创建方式参考《OpenShift 基础服务操作指南-金科》[http://confluence.cmrh.com/pages/viewpage.action?pageId=81213827](http://confluence.cmrh.com/pages/viewpage.action?pageId=81213827)</code></pre></li><li>项目使用 Eureka <pre><code> 在与 Eureka 同 Namespace 下的服务中，在springboot 项目中增加如下配置：</code></pre> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka-1:8761/eureka/,http://eureka-2:8762/eureka/,http://eureka-3:8763/eureka/</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol><h3 id=""><a href="#" class="headerlink" title=""></a></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">user-app</span> <span class="comment">#需要改动</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cmft-user-app</span> <span class="comment">#与 project 保持一致</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">user-app</span> <span class="comment">#跟metadata.name保持一致</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">user-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">user-app</span> <span class="comment">#修改为项目名就行</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry-c.chenzhijun.top/czj/user-app:latest</span> <span class="comment">#修改为实际的 image-name</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROFILE_ACTIVE</span></span><br><span class="line">            <span class="attr">value:</span> <span class="string">prod</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http_proxy</span></span><br><span class="line">            <span class="attr">value:</span> <span class="string">proxy_url</span></span><br><span class="line">          <span class="attr">ports:</span> <span class="comment">#修改为实际的监听端口</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span> </span><br><span class="line">          <span class="attr">command:</span> [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-xmx&quot;</span>,<span class="string">&quot;-xms&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/home/user-app-0.0.1-SNAPSHOT.jar&quot;</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;SpringBoot-amp-SpringCloud-组件容器化方案&quot;&gt;&lt;a href=&quot;#SpringBoot-amp-SpringCloud-组件容器化方案&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot&amp;amp;SpringCloud 组件容器化方案&quot;&gt;&lt;/a&gt;SpringBoot&amp;amp;SpringCloud 组件容器化方案&lt;/h1&gt;&lt;p&gt;该方案为 Java 开发人员在使用 springboot 开发以及是用 springcloud 组件时，将 组件/服务 进行容器化部署运行的方案。&lt;/p&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 常用的查询语句</title>
    <link href="http://chenzhijun.top/2022/06/16/prometheus-query/"/>
    <id>http://chenzhijun.top/2022/06/16/prometheus-query/</id>
    <published>2022-06-16T09:03:19.000Z</published>
    <updated>2023-03-21T13:59:01.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Prometheus-常用的查询语句"><a href="#Prometheus-常用的查询语句" class="headerlink" title="Prometheus 常用的查询语句"></a>Prometheus 常用的查询语句</h2><p>通常我们会使用Grafana作为图表展示，然后选择Prometheus作为数据源的方式来进行我们想要的图表展示。当然我们也可以在Grafana的官网上找到相应的dashboard来直接导入，这样省去了自己手工配置的麻烦。不过知道一些必要的Prometheus查询语句能帮我们更好的选择Grafana的dashboard，然后我们可以自定义做些配置。</p><h3 id="Prometheus一些术语"><a href="#Prometheus一些术语" class="headerlink" title="Prometheus一些术语"></a>Prometheus一些术语</h3><p>Prometheus的metrics分为四类（counter,gauge,histogram,summary）详情(<a href="https://prometheus.io/docs/concepts/metric_types/">metrics-type</a>)，metrics_name的命令也应该符合一定的规范：<a href="https://prometheus.io/docs/concepts/data_model/">metrics-name</a>，<a href="https://prometheus.io/docs/practices/naming/">METRIC AND LABEL NAMING</a></p><p><code>metrics_name</code> ： 也就是指标名，通常我们都会用如http_request_total等进行查询;<br><code>metrics_label</code> ：指标的标签，也就是metrics_name{label-1=”a”,label-2=”b”}这种;<br><code>metrics_value</code> : 通常用指标名+标签查出来一个值，该值根据metrics的类型可能为浮点数，也可能为整数。</p><span id="more"></span><h3 id="0-基础查询"><a href="#0-基础查询" class="headerlink" title="0,基础查询"></a>0,基础查询</h3><p>也就是使用metrics_name+metrics_label的组合进行查询，这种查询的效率的基础是你要知道明确知道相应的name和label，如果有错误拼写，则可能数据无法展示，Prometheus的查询工具能帮我们模糊匹配出所有的metrics_name。可以使用label进行筛选。<br>如果只记得部分metrics_name,那么可以使用内置的label：<code>&#123;__name__=~&quot;metrics_name_you_remember:.*&quot;&#125;</code>这样去匹配出来你想要的标签。</p><h3 id="1-正则匹配查询"><a href="#1-正则匹配查询" class="headerlink" title="1,正则匹配查询"></a>1,正则匹配查询</h3><p>Prometheus里面用的最多的查询可能就是正则匹配了。经常配合Grafana的变量(variable)一起使用。比如：<br><code>sum(irate(node_disk_reads_completed&#123;device!~&quot;dm-.*&quot;&#125;[5m]))</code>,这里面的<code>device!~&quot;dm-.*&quot;</code>，后面<br>引号内的<code>dm-.*</code>就是不匹配<code>dm-</code>前缀的所有metrics_name。如果要匹配的话使用<code>=~</code>。这样要注意，如果是或<br>的话要用<code>(regrex_A|regrex_B)</code>,用小括号加<code>|</code>。</p><h3 id="2-常用的操作符和函数"><a href="#2-常用的操作符和函数" class="headerlink" title="2,常用的操作符和函数"></a>2,常用的操作符和函数</h3><p>Prometheus支持常用的操作符：<code>+,-,*,/,&gt;=,&lt;,&gt;,....</code>等</p><p>count是对查询的结果数量进行总和+; 而sum是对查询出来的value进行总和+;</p><p>它也支持比如topk,bottomk,min,max等等。</p><h3 id="更多的查询"><a href="#更多的查询" class="headerlink" title="更多的查询"></a>更多的查询</h3><p>在官网还有更多的查询，通常我们是结合Grafana来做。官网的查询:<a href="https://prometheus.io/docs/Prometheus/latest/querying/functions/">proetheus-query</a>。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Prometheus-常用的查询语句&quot;&gt;&lt;a href=&quot;#Prometheus-常用的查询语句&quot; class=&quot;headerlink&quot; title=&quot;Prometheus 常用的查询语句&quot;&gt;&lt;/a&gt;Prometheus 常用的查询语句&lt;/h2&gt;&lt;p&gt;通常我们会使用Grafana作为图表展示，然后选择Prometheus作为数据源的方式来进行我们想要的图表展示。当然我们也可以在Grafana的官网上找到相应的dashboard来直接导入，这样省去了自己手工配置的麻烦。不过知道一些必要的Prometheus查询语句能帮我们更好的选择Grafana的dashboard，然后我们可以自定义做些配置。&lt;/p&gt;
&lt;h3 id=&quot;Prometheus一些术语&quot;&gt;&lt;a href=&quot;#Prometheus一些术语&quot; class=&quot;headerlink&quot; title=&quot;Prometheus一些术语&quot;&gt;&lt;/a&gt;Prometheus一些术语&lt;/h3&gt;&lt;p&gt;Prometheus的metrics分为四类（counter,gauge,histogram,summary）详情(&lt;a href=&quot;https://prometheus.io/docs/concepts/metric_types/&quot;&gt;metrics-type&lt;/a&gt;)，metrics_name的命令也应该符合一定的规范：&lt;a href=&quot;https://prometheus.io/docs/concepts/data_model/&quot;&gt;metrics-name&lt;/a&gt;，&lt;a href=&quot;https://prometheus.io/docs/practices/naming/&quot;&gt;METRIC AND LABEL NAMING&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;metrics_name&lt;/code&gt; ： 也就是指标名，通常我们都会用如http_request_total等进行查询;&lt;br&gt;&lt;code&gt;metrics_label&lt;/code&gt; ：指标的标签，也就是metrics_name{label-1=”a”,label-2=”b”}这种;&lt;br&gt;&lt;code&gt;metrics_value&lt;/code&gt; : 通常用指标名+标签查出来一个值，该值根据metrics的类型可能为浮点数，也可能为整数。&lt;/p&gt;</summary>
    
    
    
    <category term="监控" scheme="http://chenzhijun.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="Prometheus" scheme="http://chenzhijun.top/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Alertmanager发送的邮件中external-url修改机器名为IP地址</title>
    <link href="http://chenzhijun.top/2022/06/09/prometheus-alertmanager-external-url/"/>
    <id>http://chenzhijun.top/2022/06/09/prometheus-alertmanager-external-url/</id>
    <published>2022-06-09T08:03:19.000Z</published>
    <updated>2023-03-17T07:15:57.933Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Alertmanager发送的邮件中external-url修改机器名为IP地址"><a href="#Alertmanager发送的邮件中external-url修改机器名为IP地址" class="headerlink" title="Alertmanager发送的邮件中external-url修改机器名为IP地址"></a>Alertmanager发送的邮件中external-url修改机器名为IP地址</h1><p>在使用Alertmanager发送报警邮件的时候，我们通常会采用模板。比如我的一个模板：</p><span id="more"></span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; define &quot;email.czj.html&quot; &#125;&#125;</span><br><span class="line">详情：&lt;br&#x2F;&gt;&lt;br&#x2F;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123; range .Alerts.Firing &#125;&#125;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                  &lt;td class&#x3D;&quot;content-block&quot;&gt;</span><br><span class="line">                    &#123;&#123; if gt (len .Annotations) 0 &#125;&#125;&lt;strong&gt;描叙信息：&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;&#123;&#123; end &#125;&#125;</span><br><span class="line">                    &#123;&#123; range .Annotations.SortedPairs &#125;&#125;&#123;&#123; .Name &#125;&#125; &#x3D; &#123;&#123; .Value &#125;&#125;&lt;br &#x2F;&gt;&#123;&#123; end &#125;&#125;</span><br><span class="line">                    &lt;strong&gt;指标详情：&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;</span><br><span class="line">                    &#123;&#123; range .Labels.SortedPairs &#125;&#125;&#123;&#123; .Name &#125;&#125; &#x3D; &#123;&#123; .Value &#125;&#125;&lt;br &#x2F;&gt;&#123;&#123; end &#125;&#125;</span><br><span class="line">                    </span><br><span class="line">                    &lt;a href&#x3D;&quot;&#123;&#123; .GeneratorURL &#125;&#125;&quot;&gt;链接到Prometheus&lt;&#x2F;a&gt;&lt;br &#x2F;&gt;</span><br><span class="line">                  &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;br&#x2F;&gt;&lt;br&#x2F;&gt;</span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br><span class="line"></span><br><span class="line">&lt;br&#x2F;&gt;&lt;br&#x2F;&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;br&#x2F;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;footer&quot;&gt;</span><br><span class="line">          &lt;table width&#x3D;&quot;100%&quot;&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">              &lt;td class&#x3D;&quot;aligncenter content-block&quot; style&#x3D;&quot;text-align: center;&quot;&gt;&lt;a href&#x3D;&#39;&#123;&#123; .ExternalURL &#125;&#125;&#39;&gt;由 &#123;&#123; template &quot;__Alertmanager&quot; . &#125;&#125;发送&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;&#x2F;tr&gt;</span><br><span class="line">          &lt;&#x2F;table&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br></pre></td></tr></table></figure><p>如果注意到会发现有：GeneratorURL和ExternalURL。这两者默认使用的是机器名称也就是<code>hostname</code>。这样我们就很难在邮件中获取到实际的promtheus和Alertmanager地址。查了很多资料，最后发现在prometheus和Alertmanager启动的时候我们可以设置这两个值的。prometheus的启动命令是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./prometheus.exe --web.external-url=&quot;http://127.0.0.1:9090/prom&quot; \</span><br><span class="line">                --web.route-prefix=prom \</span><br><span class="line">                --web.listen-address=&quot;0.0.0.0:9090&quot;</span><br></pre></td></tr></table></figure><p>Alertmanager启动命令是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./Alertmanager.exe --config.file=config163.yml \</span><br><span class="line">                    --web.external-url=http://127.0.0.1:9093/Alertmanager \              </span><br><span class="line">                    --web.route-prefix=Alertmanager</span><br></pre></td></tr></table></figure><p>这里的<code>web.external-url</code>也就是GeneratorURL和ExternalURL两者在email中的指，在设置<code>web.external-url</code>的同时我们需要记得设置<code>web.router-prefix</code>的值，应为<code>web.router-prefix</code>的默认值是<code>web.external-url</code>，如果不同时指定<code>web.router-prefix</code>那么就将会出现特别神奇的效果，你需要重复输入两个地址才能访问到相应的prometheus和Alertmanager，这个参数是指的路径。所以一定要设置<code>web.router-prefix</code>,你也可以设置成<code>--web.route-prefix=&quot;&quot;</code>这样来将子路径就设置为根路径。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Alertmanager发送的邮件中external-url修改机器名为IP地址&quot;&gt;&lt;a href=&quot;#Alertmanager发送的邮件中external-url修改机器名为IP地址&quot; class=&quot;headerlink&quot; title=&quot;Alertmanager发送的邮件中external-url修改机器名为IP地址&quot;&gt;&lt;/a&gt;Alertmanager发送的邮件中external-url修改机器名为IP地址&lt;/h1&gt;&lt;p&gt;在使用Alertmanager发送报警邮件的时候，我们通常会采用模板。比如我的一个模板：&lt;/p&gt;</summary>
    
    
    
    <category term="监控" scheme="http://chenzhijun.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="Alertmanager" scheme="http://chenzhijun.top/tags/Alertmanager/"/>
    
    <category term="Prometheus" scheme="http://chenzhijun.top/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 使用 influxdb 做永久存储</title>
    <link href="http://chenzhijun.top/2022/06/09/prometheus-storage-influxdb/"/>
    <id>http://chenzhijun.top/2022/06/09/prometheus-storage-influxdb/</id>
    <published>2022-06-09T08:03:19.000Z</published>
    <updated>2023-03-17T07:16:35.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-使用远端存储"><a href="#Prometheus-使用远端存储" class="headerlink" title="Prometheus 使用远端存储"></a>Prometheus 使用远端存储</h1><p>使用Prometheus的过程中，我们可以发现Prometheus默认是自己带有存储的，不过保存的时间为15天。但是对于公司而言，可能有时候会对数据进行统计分析，那么15天的数据将不会满足要求了。所以我们希望能够将数据永久存储起来，或者说能够让我们自己将数据进行处理。</p><p>这里我们要讲的就是Prometheus的 remote_storage 功能。Prometheus的remote_storage 其实是一个adapter，至于在adapter的另一端是什么类型的时序数据库它根本不关心，如果你愿意，你也可以编写自己的adpater。我这里采用官网提供的influxdb作为远端存储的实例。</p><p>存储的方式为：Prometheus —-发送数据—- &gt; remote_storage_adapter —- 存储数据 —-&gt; influxdb。</p><span id="more"></span><h2 id="下载安装influxdb"><a href="#下载安装influxdb" class="headerlink" title="下载安装influxdb"></a>下载安装influxdb</h2><p>我采用的docker安装influxdb，非常容易。下载influxdb的镜像，然后让它暴露出相应的端口：</p><p><code>docker run -p 8086:8086 -v $PWD:/var/lib/influxdb --name influxdb influxdb</code> 这样，一个influxdb就准备好了。influxdb的一些介绍或者操作可以查看官网。<br>我们安装好influxdb之后需要在influxdb中创建一个prometheus的库：<br><code>curl -XPOST http://localhost:8086/query --data-urlencode &quot;q=CREATE DATABASE prometheus&quot;</code>。</p><h2 id="准备remote-storage-adapter"><a href="#准备remote-storage-adapter" class="headerlink" title="准备remote_storage_adapter"></a>准备remote_storage_adapter</h2><p>在github上准备一个<a href="https://github.com/prometheus/prometheus/blob/master/documentation/examples/remote_storage/remote_storage_adapter/README.md">remote_storage_adapter</a>的可执行文件，然后启动它，如果想获取相应的帮助可以使用:<code>./remote_storage_adapter -h</code>来获取相应帮助(修改绑定的端口，influxdb的设置等..)，现在我们启动一个remote_storage_adapter来对接influxdb和prometheus：<br><code>./remote_storage_adapter -influxdb-url=http://localhost:8086/ -influxdb.database=prometheus -influxdb.retention-policy=autogen</code>，influxdb默认绑定的端口为<code>9201</code></p><h2 id="修改-prometheus-yml-配置对接adapter"><a href="#修改-prometheus-yml-配置对接adapter" class="headerlink" title="修改 prometheus.yml 配置对接adapter"></a>修改 prometheus.yml 配置对接adapter</h2><p>前面的准备操作完了之后，就可以对prometheus进行配置了。修改<code>prometheus.yml</code>文件，在文件末尾增加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">remote_write:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&quot;http://localhost:9201/write&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">remote_read:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&quot;http://localhost:9201/read&quot;</span></span><br></pre></td></tr></table></figure><p>之后我们启动prometheus就可以看到influxdb中会有相应的数据了。如果验证我们采集的metrics数据被存储起来了呢？我们选取一个metric，过几分钟然后将prometheus停止，并且将data目录删除，重启prometheus，然后我们再查询这个metric，可以看到之前几分钟的数据还在那里。</p><h3 id="prometheus-高可用"><a href="#prometheus-高可用" class="headerlink" title="prometheus 高可用"></a>prometheus 高可用</h3><p>最近在实践一个事情，就是Prometheus的高可用，我的想法是将所有数据都存储到influxdb，但是influxdb集群版本竟然是闭源的。我擦。。。不过这个事情倒不是最重要，实在不行我们自己弄集群版本。我的高可用选择是有多个prometheus进行的是采集，在yaml种只配置remote_write，然后让某几台Prometheus机器做查询，只配置remote_read，并且查询的prometheus不做scape-config，也就是没有采集任务，完全的查询客户端，当然还有规则报警。在实际中要注意<code>global.external_labels.monitor</code>这个配置必须是 <strong>相同的值</strong>。不然的话查询客户端不能查询到相应的metric。当然你也可以不设置这个值。<br>另外实践中我发现federate机器也就是prometheus的联邦机器，在另一个prometheus配置了一台federate之后，它会将从federate采集到的数据收集起来，并且存储到influxdb中，也就是相应的做了持久化存储。</p><p>目前还有两个问题没有解决：多个查询客户端prometheus如果都配置了报警rule的话，会不会产生单个报警重复报？另外还有就是influxdb的集群方案，该怎么操作？还要进一步研究才行啊。~~</p><h3 id="附录，influxdb的一些操作："><a href="#附录，influxdb的一些操作：" class="headerlink" title="附录，influxdb的一些操作："></a>附录，influxdb的一些操作：</h3><p>influxdb常用操作：<br>    显示数据库：show databases<br>    创建一个库：create database database_name<br>    删除一个库：drop database database_name<br>    使用库：use database<br>    表操作：show measurements<br>    插入数据<br>    <code>insert &lt;tbname&gt;,&lt;tags&gt; &lt;values&gt; [timestamp]    </code><br>    说明：<br>    tbname : 数据表名称<br>    tags : 表的tag域<br>    values : 表的value域<br>    timestamp ：当前数据的时间戳（可选，没有提供的话系统会自带添加）</p><pre><code>示例如下：</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; use testdb;</span><br><span class="line">Using database testdb</span><br><span class="line">&gt; insert students,stuid&#x3D;s123 score&#x3D;89</span><br><span class="line">&gt; show measurements;</span><br><span class="line">name: measurements</span><br><span class="line">name</span><br><span class="line">----</span><br><span class="line">students</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Prometheus-使用远端存储&quot;&gt;&lt;a href=&quot;#Prometheus-使用远端存储&quot; class=&quot;headerlink&quot; title=&quot;Prometheus 使用远端存储&quot;&gt;&lt;/a&gt;Prometheus 使用远端存储&lt;/h1&gt;&lt;p&gt;使用Prometheus的过程中，我们可以发现Prometheus默认是自己带有存储的，不过保存的时间为15天。但是对于公司而言，可能有时候会对数据进行统计分析，那么15天的数据将不会满足要求了。所以我们希望能够将数据永久存储起来，或者说能够让我们自己将数据进行处理。&lt;/p&gt;
&lt;p&gt;这里我们要讲的就是Prometheus的 remote_storage 功能。Prometheus的remote_storage 其实是一个adapter，至于在adapter的另一端是什么类型的时序数据库它根本不关心，如果你愿意，你也可以编写自己的adpater。我这里采用官网提供的influxdb作为远端存储的实例。&lt;/p&gt;
&lt;p&gt;存储的方式为：Prometheus —-发送数据—- &amp;gt; remote_storage_adapter —- 存储数据 —-&amp;gt; influxdb。&lt;/p&gt;</summary>
    
    
    
    <category term="监控" scheme="http://chenzhijun.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="Prometheus" scheme="http://chenzhijun.top/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Promethues 联邦集群</title>
    <link href="http://chenzhijun.top/2022/05/10/promethues-federate/"/>
    <id>http://chenzhijun.top/2022/05/10/promethues-federate/</id>
    <published>2022-05-10T04:03:19.000Z</published>
    <updated>2023-03-17T07:15:51.477Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-联邦集群"><a href="#Prometheus-联邦集群" class="headerlink" title="Prometheus 联邦集群"></a>Prometheus 联邦集群</h1><p>Prometheus的联邦集群我们使用它来作为Prometheus代理。因为我们是在监控rancher平台里面的docker容器里面的应用，那么拿到的就是容器的ip，而我们实际的Prometheus是部署在外部虚拟机上面的。这个时候外部的Prometheus就无法拿到rancher平台内部容器应用的metrics，所以部署一台prometheus到rancher组成联邦机，详细的官网有解释:<a href="https://prometheus.io/docs/prometheus/latest/federation/">federate</a>，总体架构图如下</p><span id="more"></span><p><img src="/images/qiniu/2018-05-10-12-59-05.png" alt="2018-05-10-12-59-05"></p><p>外部连接方式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line">  <span class="comment"># - job_name: &#x27;prometheus&#x27;</span></span><br><span class="line">  <span class="comment">#   # metrics_path defaults to &#x27;/metrics&#x27;</span></span><br><span class="line">  <span class="comment">#   # scheme defaults to &#x27;http&#x27;.</span></span><br><span class="line">  <span class="comment">#   static_configs:</span></span><br><span class="line">  <span class="comment">#     - targets: [&#x27;localhost:9091&#x27;]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;federate&#x27;</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">15s</span></span><br><span class="line">    <span class="comment"># honor_labels: true</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">&#x27;/federate&#x27;</span></span><br><span class="line">    <span class="attr">params:</span></span><br><span class="line">       <span class="string">&#x27;match[]&#x27;</span><span class="string">:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;&#123;job=~&quot;prometheus&quot;&#125;&#x27;</span></span><br><span class="line">        <span class="comment">#- &#x27;&#123;job=&quot;*&quot;&#125;&#x27;</span></span><br><span class="line">    <span class="comment">#     - &#x27;&#123;job=&quot;prometheus&quot;&#125;&#x27;</span></span><br><span class="line">    <span class="comment">#     - &#x27;&#123;__name__=~&quot;job:.*&quot;&#125;&#x27;</span></span><br><span class="line">        <span class="comment">#  - &#x27;&#123;job=&quot;rancher_network_monitor&quot;&#125;&#x27;</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&#x27;&#123;job=&quot;targets-server&quot;&#125;&#x27;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">       <span class="bullet">-</span> <span class="string">&#x27;localhost:9090&#x27;</span></span><br><span class="line">       <span class="bullet">-</span> <span class="string">&#x27;10.62.14.129:9090&#x27;</span></span><br><span class="line">      <span class="comment">#  - &#x27;10.62.12.3:9090&#x27;</span></span><br><span class="line">      <span class="comment">#  - &#x27;10.0.11.23:80&#x27;</span></span><br></pre></td></tr></table></figure><p>额外注意就是这里的job_name下有一个match，这个好像必须要填写，嗯就是这样，只要在内部的Prometheus代理将job那么定义好，在外部再像上面的配置文件一个配置，就能在外部访问内部的prometheus的数据，而且可以保存这些数据在外部的Prometheus。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Prometheus-联邦集群&quot;&gt;&lt;a href=&quot;#Prometheus-联邦集群&quot; class=&quot;headerlink&quot; title=&quot;Prometheus 联邦集群&quot;&gt;&lt;/a&gt;Prometheus 联邦集群&lt;/h1&gt;&lt;p&gt;Prometheus的联邦集群我们使用它来作为Prometheus代理。因为我们是在监控rancher平台里面的docker容器里面的应用，那么拿到的就是容器的ip，而我们实际的Prometheus是部署在外部虚拟机上面的。这个时候外部的Prometheus就无法拿到rancher平台内部容器应用的metrics，所以部署一台prometheus到rancher组成联邦机，详细的官网有解释:&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/federation/&quot;&gt;federate&lt;/a&gt;，总体架构图如下&lt;/p&gt;</summary>
    
    
    
    <category term="监控" scheme="http://chenzhijun.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="Prometheus" scheme="http://chenzhijun.top/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 监控 Java 应用</title>
    <link href="http://chenzhijun.top/2022/05/09/prometheus-monitor-tomcat/"/>
    <id>http://chenzhijun.top/2022/05/09/prometheus-monitor-tomcat/</id>
    <published>2022-05-09T13:03:19.000Z</published>
    <updated>2023-03-17T07:15:56.002Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-监控-Java-应用"><a href="#Prometheus-监控-Java-应用" class="headerlink" title="Prometheus 监控 Java 应用"></a>Prometheus 监控 Java 应用</h1><p>Prometheus 监控 Java 应用有两种方式：一种是使用官方提供的jar包，然后嵌入到应用中就可以了。这种方式一般都是新项目。我认为也是最合适的一种。不过这种情况一般是理想而已。而除了这种方式，第二种是prometheus的<a href="https://github.com/prometheus/jmx_exporter">jmx_exporter</a>。</p><p>今天我们讨论的就是第二种。使用jmx_exporter的方式来监控我们的java应用程序。我们的java应用基本上是使用tomcat作为服务器的。这种情况下有两种方式，一种是基于springboot的jar包启动方式，一种是直接下载tomcat软件之后，将应用打成war包部署的方式。</p><span id="more"></span><p>jmx_exporter的使用非常简单，但是如果不了解就会非常懵逼。jmx_exporter实际也是基于java的jmx通过暴露Mbean来做为代理，使用http的方式来给Prometheus进行指标采集。</p><h2 id="jar-包启动应用"><a href="#jar-包启动应用" class="headerlink" title="jar 包启动应用"></a>jar 包启动应用</h2><p>如果是jar包启动的方式，那么github上面就已经有示例了。可以参照：<code>java -javaagent:./jmx_prometheus_javaagent-0.3.0.jar=9151:config.yaml -jar yourJar.jar</code>，这种方式启动。这种属于在应用启动的时候就给它加上代理。</p><p>这种方式是没有加认证的，如果需要加认证，嗯，有点麻烦，实验过一次，后来发现，还是算了。可能在虚拟机上直接运行程序还好，但是打成docker镜像就真的就有点多余了。</p><p>这种方式是监控的内嵌tomcat的启动的应用，在访问<code>http://ip:9151/metrics</code>,<code>/metrics</code>可有可无，这个时候可以看到很多tomcat指标，当然如果你的config.yaml没有改动，那么可能并不会看到，因为官网的<a href="https://github.com/prometheus/jmx_exporter/blob/master/example_configs/tomcat.yml">config.yaml</a>中rules下的pattern:Catalina*****，这里是不适用与内嵌tomcat的。内嵌的tomcat需要修改为<code>Tomcat</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">startDelaySeconds:</span> <span class="number">0</span></span><br><span class="line"><span class="comment">#hostPort: 192.168.226.128:8999</span></span><br><span class="line"><span class="comment">#jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:8999/jmxrmi</span></span><br><span class="line"><span class="attr">ssl:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">wercaseOutputName:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">lowercaseOutputLabelNames:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">pattern:</span> <span class="string">&#x27;Tomcat&lt;type=GlobalRequestProcessor, name=\&quot;(\w+-\w+)-(\d+)\&quot;&gt;&lt;&gt;(\w+):&#x27;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat_$3_total</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">&quot;$2&quot;</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">&quot;$1&quot;</span></span><br><span class="line">  <span class="attr">help:</span> <span class="string">Tomcat</span> <span class="string">global</span> <span class="string">$3</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">COUNTER</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">pattern:</span> <span class="string">&#x27;Tomcat&lt;j2eeType=Servlet, WebModule=//([-a-zA-Z0-9+&amp;@#/%?=~_|!:.,;]*[-a-zA-Z0-9+&amp;@#/%=~_|]), name=([-a-zA-Z0-9+/$%~_-|!.]*), J2EEApplication=none, J2EEServer=none&gt;&lt;&gt;(requestCount|maxTime|processingTime|errorCount):&#x27;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat_servlet_$3_total</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">module:</span> <span class="string">&quot;$1&quot;</span></span><br><span class="line">    <span class="attr">servlet:</span> <span class="string">&quot;$2&quot;</span></span><br><span class="line">  <span class="attr">help:</span> <span class="string">Tomcat</span> <span class="string">servlet</span> <span class="string">$3</span> <span class="string">total</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">COUNTER</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">pattern:</span> <span class="string">&#x27;Tomcat&lt;type=ThreadPool, name=&quot;(\w+-\w+)-(\d+)&quot;&gt;&lt;&gt;(currentThreadCount|currentThreadsBusy|keepAliveCount|pollerThreadCount|connectionCount):&#x27;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat_threadpool_$3</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">&quot;$2&quot;</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">&quot;$1&quot;</span></span><br><span class="line">  <span class="attr">help:</span> <span class="string">Tomcat</span> <span class="string">threadpool</span> <span class="string">$3</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">GAUGE</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">pattern:</span> <span class="string">&#x27;Tomcat&lt;type=Manager, host=([-a-zA-Z0-9+&amp;@#/%?=~_|!:.,;]*[-a-zA-Z0-9+&amp;@#/%=~_|]), context=([-a-zA-Z0-9+/$%~_-|!.]*)&gt;&lt;&gt;(processingTime|sessionCounter|rejectedSessions|expiredSessions):&#x27;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat_session_$3_total</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">context:</span> <span class="string">&quot;$2&quot;</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">&quot;$1&quot;</span></span><br><span class="line">  <span class="attr">help:</span> <span class="string">Tomcat</span> <span class="string">session</span> <span class="string">$3</span> <span class="string">total</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">COUNTER</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">pattern:</span> <span class="string">&quot;.*&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当然，你也看到了我的pattern这里有个：<code>&quot;.*&quot;</code>为啥这样？因为这样可以让所有的jmx metrics全部暴露出来，这方式有点暴力但是很好，很有用。</p><h2 id="Tomcat-war包应用"><a href="#Tomcat-war包应用" class="headerlink" title="Tomcat war包应用"></a>Tomcat war包应用</h2><p>war包应用部署就不说了，在bin目录启动<code>./startup.sh</code>就好了。但是如果要加上jmx_exporter。那么我们需要加上要给东西，进入bin目录（<code>$TOMCAT_HOME/bin</code>），将jmx_exporter.jar包文件和config.yaml文件复制到这里。然后修改里面的一个catalina.sh的脚本，找到<code>JAVA_OPTS</code>,加上代理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS=&quot;$JAVA_OPTS $JSSE_OPTS&quot;</span><br><span class="line"></span><br><span class="line">JAVA_OPTS=&quot;$JAVA_OPTS -javaagent:$PWD/jmx_prometheus_javaagent-0.3.0.jar=9151:$PWD/config.yaml&quot;</span><br></pre></td></tr></table></figure><p>这种启动tomcat之后，你就可以通过访问9151端口来访问metrics了。这里要记得，修改上面的config.yaml中pattern的部分，改为和github上一样就可以了，也就是pattern为Catalina****。</p><h2 id="监控远程的-tomcat"><a href="#监控远程的-tomcat" class="headerlink" title="监控远程的 tomcat"></a>监控远程的 tomcat</h2><p>如果你不修改catalina.sh，可以采用在bin目录新建一个setenv.sh文件，<code>修改为可执行文件</code>。然后加入下面的设置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">CATALINA_OPTS=<span class="string">&#x27;-javaagent:/home/chen/jmx_prometheus_javaagent-0.3.0.jar=9151:/home/chen/config.yaml&#x27;</span></span></span><br><span class="line">CATALINA_OPTS=&#x27;-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8999 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash">JAVA_OPTS=<span class="string">&#x27;-javaagent:/home/chen/jmx_prometheus_javaagent-0.10.jar=9151:/home/chen/config.yaml&#x27;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">CATALINA_OPTS=<span class="string">&#x27;-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8999 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.password.file=/home/chen/jmxremote.password&#x27;</span></span></span><br></pre></td></tr></table></figure><p>这样在启动的时候tomcat就会暴露出8999端口并且打开metrics。上面是jmx不带认证的。</p><p>然后在另一端下载jmx_exporter，这里需要去下载<code>0.10</code>版本，在github 的release中找一下就好了。如果是远程的tomcat jmx，最新版本的代理反正是用不了，我的测试中<code>0.3.0</code>是用不了的，<code>0.10</code>是可以用的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -javaagent:./jmx_prometheus_javaagent-<span class="number">0.10</span>.jar=<span class="number">9150</span>:config.yaml</span><br></pre></td></tr></table></figure><p>相应的config.yaml需要做一些修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">startDelaySeconds:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">hostPort:</span> <span class="number">192.168</span><span class="number">.226</span><span class="number">.128</span><span class="string">:8999</span></span><br><span class="line"><span class="attr">jmxUrl:</span> <span class="string">service:jmx:rmi:///jndi/rmi://192.168.226.128:8999/jmxrmi</span></span><br><span class="line"><span class="attr">ssl:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">wercaseOutputName:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">lowercaseOutputLabelNames:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">pattern:</span> <span class="string">&#x27;Tomcat&lt;type=GlobalRequestProcessor, name=\&quot;(\w+-\w+)-(\d+)\&quot;&gt;&lt;&gt;(\w+):&#x27;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat_$3_total</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">&quot;$2&quot;</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">&quot;$1&quot;</span></span><br><span class="line">  <span class="attr">help:</span> <span class="string">Tomcat</span> <span class="string">global</span> <span class="string">$3</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">COUNTER</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">pattern:</span> <span class="string">&quot;.*&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当然如果是springboot，现在有<code>spring-boot-starter-actuator</code>的包，是可以直接暴露metrics的，当然也可以引入prometheus提供的client jar。</p><p>实际中，还是的多动手，实践出真知。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Prometheus-监控-Java-应用&quot;&gt;&lt;a href=&quot;#Prometheus-监控-Java-应用&quot; class=&quot;headerlink&quot; title=&quot;Prometheus 监控 Java 应用&quot;&gt;&lt;/a&gt;Prometheus 监控 Java 应用&lt;/h1&gt;&lt;p&gt;Prometheus 监控 Java 应用有两种方式：一种是使用官方提供的jar包，然后嵌入到应用中就可以了。这种方式一般都是新项目。我认为也是最合适的一种。不过这种情况一般是理想而已。而除了这种方式，第二种是prometheus的&lt;a href=&quot;https://github.com/prometheus/jmx_exporter&quot;&gt;jmx_exporter&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;今天我们讨论的就是第二种。使用jmx_exporter的方式来监控我们的java应用程序。我们的java应用基本上是使用tomcat作为服务器的。这种情况下有两种方式，一种是基于springboot的jar包启动方式，一种是直接下载tomcat软件之后，将应用打成war包部署的方式。&lt;/p&gt;</summary>
    
    
    
    <category term="监控" scheme="http://chenzhijun.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="Prometheus" scheme="http://chenzhijun.top/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus+Grafana 搭建监控系统</title>
    <link href="http://chenzhijun.top/2022/05/02/prometheus-grafana-monitor/"/>
    <id>http://chenzhijun.top/2022/05/02/prometheus-grafana-monitor/</id>
    <published>2022-05-02T14:03:19.000Z</published>
    <updated>2023-03-21T13:58:52.007Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-Grafana-搭建监控系统"><a href="#Prometheus-Grafana-搭建监控系统" class="headerlink" title="Prometheus+Grafana 搭建监控系统"></a>Prometheus+Grafana 搭建监控系统</h1><p>今天将第一版监控系统上线，过程整个就是一路坎坷。不过踩坑，填坑，确实也是为自己积攒了一些小经验。</p><h2 id="Prometheus的服务发现"><a href="#Prometheus的服务发现" class="headerlink" title="Prometheus的服务发现"></a>Prometheus的服务发现</h2><p>Prometheus的监控使用的是pull的模式，也就是每隔几秒钟去各个target采集一次metric。那么如果是多个target，如果是静态配置的话，那么就得在配置文件里面一个一个添加，尽管可以使用接口去更新配置文件，但如果服务太多，那工作量也很大。而且如果遇到微服务的情况并且容器化部署，那么可能ip地址都是随机改变的，那么就将更麻烦了。所以就有服务发现的模式出来了，有很多种实现的方式，consul，dns等等，针对我们现有的平台，我们选择了file_sd_config:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;prometheus&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># metrics_path defaults to &#x27;/metrics&#x27;</span></span><br><span class="line">    <span class="comment"># scheme defaults to &#x27;http&#x27;.</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;localhost:9090&#x27;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span>       <span class="string">&#x27;rancher_network_monitor&#x27;</span></span><br><span class="line">    <span class="comment"># Override the global default and scrape targets from this job every 5 seconds.</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;192.168.7.3:8080&#x27;</span>,<span class="string">&#x27;192.168.8.90:8080&#x27;</span>]</span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">group:</span> <span class="string">&#x27;rancher_network_monitor&#x27;</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/metrics</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;filediscovery&#x27;</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">file_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">files:</span> [<span class="string">&#x27;/home/config/*.json&#x27;</span>]</span><br></pre></td></tr></table></figure><p>基于文件的方式，只需要在<code>/home/config</code>目录下增加json文件就可以了，这也是在网上找的一个方案，所以我也记录下来，万一也能帮助到别人了</p><span id="more"></span><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">&quot;targets&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;10.10.10.1:65160&quot;</span>,</span><br><span class="line">            <span class="string">&quot;10.10.10.2:65160&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;labels&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;job&quot;</span>:<span class="string">&quot;Center&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;service&quot;</span>:<span class="string">&quot;qtest&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">&quot;targets&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;10.10.10.3:65110&quot;</span>,</span><br><span class="line">            <span class="string">&quot;10.10.10.4:65110&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;labels&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;job&quot;</span>:<span class="string">&quot;Gateway&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;service&quot;</span>:<span class="string">&quot;qtest&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="监控报警规则-rule-files"><a href="#监控报警规则-rule-files" class="headerlink" title="监控报警规则 rule_files:"></a>监控报警规则 rule_files:</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&#x27;./alert.yml&#x27;</span></span><br></pre></td></tr></table></figure><p>规则可以在这里配置多个，这里其实也是支持通配符的。也就是：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&#x27;/path/to/rule/*.yml&#x27;</span></span><br></pre></td></tr></table></figure><p>我使用的是yml格式，如果你会的话，也可以是用<code>.rule</code>;</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">goroutines_monitor</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">go_goroutines_test</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">go_goroutines</span> <span class="string">&gt;</span> <span class="number">200</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">goroutines_test</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>，机器goroutines过高。&quot;</span> </span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">instance_monitor</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">instance_down</span></span><br><span class="line">    <span class="attr">expr:</span> <span class="string">up</span> <span class="string">==</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">instance</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span> 挂掉了,<span class="template-variable">&#123;&#123; $labels.job&#125;&#125;</span>&quot;</span> </span><br></pre></td></tr></table></figure><p>上面的yaml就是定义了两个规则，<code>go_goroutines&gt;200</code>以及<code>up==0</code>一个是go的协程数，一个是被监控目标是否可以正常采集。在则合理推荐使用labels，这样如果是使用alertmanager做预警，那么可以使用这些label。<code>for</code>的意思指接到一个触发报警rule的收将状态变成active，然后如果在for之内的评估期内如果没有报警就变成pending状态，如果有就变成firing，发送报警。</p><h2 id="alertmanager发送报警邮件"><a href="#alertmanager发送报警邮件" class="headerlink" title="alertmanager发送报警邮件"></a>alertmanager发送报警邮件</h2><p>alertmanager相当于通知中心，它只会在Prometheus发送报警后，通过某些渠道（邮件，即时通讯等）发送通知。当然它在通知这方面做了相当多的事情。</p><h3 id="alertmanager-通知分组"><a href="#alertmanager-通知分组" class="headerlink" title="alertmanager 通知分组"></a>alertmanager 通知分组</h3><p>如果是一个频繁的bug，引起Prometheus一直触发警报，如果不做限制，那么就会引起邮箱轰炸。alertmanager中的route就是做这个的。通过路由器将不同的邮件发送给不同的人。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">route:</span> </span><br><span class="line">  <span class="comment"># How long to initially wait to send a notification for a group</span></span><br><span class="line">  <span class="comment"># of alerts. Allows to wait for an inhibiting alert to arrive or collect</span></span><br><span class="line">  <span class="comment"># more initial alerts for the same group. (Usually ~0s to few minutes.)</span></span><br><span class="line">  <span class="comment"># group_wait: 30s</span></span><br><span class="line">  <span class="comment"># How long to wait before sending a notification about new alerts that</span></span><br><span class="line">  <span class="comment"># are added to a group of alerts for which an initial notification has</span></span><br><span class="line">  <span class="comment"># already been sent. (Usually ~5m or more.)</span></span><br><span class="line">  <span class="attr">group_interval:</span> <span class="string">30s</span></span><br><span class="line">  <span class="comment"># If an alert has successfully been sent, wait &#x27;repeat_interval&#x27; to resend them.</span></span><br><span class="line">  <span class="attr">repeat_interval:</span> <span class="string">10s</span>    </span><br><span class="line">  <span class="comment">#  A default receiver</span></span><br><span class="line">  <span class="attr">receiver:</span> <span class="string">monitor-admin</span>  </span><br><span class="line">  <span class="attr">group_by:</span> [<span class="string">name</span>, <span class="string">alertname</span>]</span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">  <span class="comment"># All alerts with service=mysql or service=cassandra</span></span><br><span class="line">  <span class="comment"># are dispatched to the database pager.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">receiver:</span> <span class="string">&#x27;go-admin&#x27;</span></span><br><span class="line">    <span class="attr">group_wait:</span> <span class="string">30s</span></span><br><span class="line">    <span class="attr">group_by:</span> [<span class="string">name</span>, <span class="string">alertname</span>]</span><br><span class="line">    <span class="attr">match:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">goroutines_test</span></span><br><span class="line">      <span class="attr">alertname:</span> <span class="string">go_goroutines_test</span></span><br><span class="line">  <span class="comment"># All alerts with the team=frontend label match this sub-route.</span></span><br><span class="line">  <span class="comment"># They are grouped by product and environment rather than cluster</span></span><br><span class="line">  <span class="comment"># and alertname.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">receiver:</span> <span class="string">&#x27;instance-admin&#x27;</span></span><br><span class="line">    <span class="attr">group_interval:</span> <span class="string">1m</span></span><br><span class="line">    <span class="attr">group_by:</span> [<span class="string">name</span>, <span class="string">alertname</span>]</span><br><span class="line">    <span class="attr">match:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">instance</span></span><br></pre></td></tr></table></figure><p>这里的<code>group_by: [label,...]</code>将通知分组，<code>group_interval: 30s</code>指的是如果在30s内收到同一组的邮件告警，那么将合并他们为一条邮件然后发送。<code>repeat_interval: 10s</code>当第一次发送邮件后下一次发送邮件的间隔。这个值一定要改，尤其是上线之后。routes主要是将邮件进行区分发送，这里我们之前在rule里面配置的label就可以起作用了。使用match来匹配那些label然后做不同的路由。</p><h3 id="alertmanager-邮件抑制"><a href="#alertmanager-邮件抑制" class="headerlink" title="alertmanager 邮件抑制"></a>alertmanager 邮件抑制</h3><p>邮件抑制的意思，我觉得更应该是邮件优先原则。指的是如果有两组告警，一组告警非常紧急，一组不重要，如果两组一起来告警，那么可能会引起，邮箱里面重要的告警被不重要的淹没了，从而导致我们忽略了某些重要告警。所以我们可以进行配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inhibit_rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">source_match:</span></span><br><span class="line">    <span class="attr">severity:</span> <span class="string">&#x27;critical&#x27;</span></span><br><span class="line">  <span class="attr">target_match:</span></span><br><span class="line">    <span class="attr">severity:</span> <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">  <span class="comment"># Apply inhibition if the alertname is the same.</span></span><br><span class="line">  <span class="comment"># equal: [&#x27;alertname&#x27;, &#x27;cluster&#x27;, &#x27;service&#x27;]</span></span><br><span class="line">  <span class="attr">equal:</span> [<span class="string">&#x27;monitor&#x27;</span>,<span class="string">&#x27;job&#x27;</span>]</span><br></pre></td></tr></table></figure><p>上面的规则就是，如果有serverity为critical的标签，那么serverity为warning的告警先不发，只发critical的告警。在Prometheus的rule里面如下配置：<br><img src="/images/qiniu/2018-04-26-23-54-39.png" alt="2018-04-26-23-54-39"></p><p>所以，多配置点label还是有点用的，哈哈。</p><p>ps：抑制的是某一种高级别的邮件发送，而这个邮件会按照定好的时间间隔一直发送，不会说只发一条就不发了。</p><h3 id="alertmanager-邮件静默"><a href="#alertmanager-邮件静默" class="headerlink" title="alertmanager 邮件静默"></a>alertmanager 邮件静默</h3><p>邮件静默其实就是指在某一段时间内，将某一类型的告警暂时忽略不让它发送告警。（又用到label了。。）创建静默的方式有两种，一个是直接在告警信息上创建；另一个是直接new silence：<br><img src="/images/qiniu/2018-04-26-23-58-20.png" alt="2018-04-26-23-58-20"></p><p>需要配置一个label。之后一定一定要配置时间，第一次使用的时候，我以为静默是一直忽略，然后我就下班了。之后回到家中，2h默认时间过后，我的邮箱爆炸了。。。所以静默是有时间限制的，一定要，一定要设置。<br><img src="/images/qiniu/2018-04-26-23-59-00.png" alt="2018-04-26-23-59-00"></p><h2 id="alertmanager的邮件模板"><a href="#alertmanager的邮件模板" class="headerlink" title="alertmanager的邮件模板"></a>alertmanager的邮件模板</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">templates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;./templates/*.tmpl&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&#x27;monitor-admin&#x27;</span></span><br><span class="line">    <span class="attr">email_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">to:</span> <span class="string">&#x27;noreply_czj@163.com&#x27;</span></span><br><span class="line">      <span class="attr">headers:</span> &#123; <span class="attr">Subject:</span> <span class="string">&quot;[WARN] <span class="template-variable">&#123;&#123; .CommonLabels.alertname&#125;&#125;</span> 报警邮件&quot;</span> &#125;</span><br><span class="line">      <span class="attr">html:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; template &quot;email.czj.html&quot; . &#125;&#125;</span>&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; define &quot;email.czj.html&quot; &#125;&#125;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;&lt;td&gt;报警名&lt;&#x2F;td&gt;&lt;td&gt;xxx&lt;&#x2F;td&gt;&lt;td&gt;xx&lt;&#x2F;td&gt;&lt;td&gt;xxx&lt;&#x2F;td&gt;&lt;td&gt;xxx&lt;font color&#x3D;&#39;red&#39;&gt;[xxx]&lt;&#x2F;font&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;</span><br><span class="line">    &#123;&#123; range $i, $alert :&#x3D; .Alerts &#125;&#125;</span><br><span class="line">        &lt;tr&gt;&lt;td&gt;&#123;&#123; index $alert.Labels &quot;alertname&quot; &#125;&#125;&lt;&#x2F;td&gt;&lt;td&gt;&#123;&#123; $alert.StartsAt &#125;&#125;&lt;&#x2F;td&gt;&lt;td&gt;&#123;&#123; $alert.Labels.from &#125;&#125;&lt;&#x2F;td&gt;&lt;td&gt;&#123;&#123; $alert.Labels.to &#125;&#125;&lt;&#x2F;td&gt;&lt;td&gt;&#123;&#123; $alert.Labels.value &#125;&#125;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;</span><br><span class="line">    &#123;&#123; end &#125;&#125;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">&lt;&#x2F;table&gt;</span><br><span class="line"></span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br></pre></td></tr></table></figure><p>邮件模板这里我是在网上找了一个非常详细的帖子。我觉得写的非常详细，主要注意就是要在模板的一行的define，要和receivers的html中tempate相对应。之后就是在模板中引用go语言的变量用<code>点+大写变量名</code>。详细可以看这边博客<a href="https://segmentfault.com/a/1190000008695463">alertmanager 邮件模板</a>。从源码解释，很详细。</p><p>&lt;!–&gt;<br>Data:.Alerts：[{firing map[instance:10.62.14.80:8080 job:example-random monitor:codelab-monitor to:10.62.12.3 alertname:node_connect from:10.62.14.80 group:production] map[summary:机器 10.62.14.80:8080 ，10.62.14.80，10.62.12.3] 2018-04-19 15:44:51.3912519 +0800 CST 0001-01-01 00:00:00 +0000 UTC <a href="http://ftsz-nb0078:9090/graph?g0.expr=host_to_host_http_connect+%3C=+0&amp;g0.tab=1%7D">http://FTSZ-NB0078:9090/graph?g0.expr=host_to_host_http_connect+%3C%3D+0&amp;g0.tab=1}</a> {firing map[monitor:codelab-monitor to:10.62.14.80 alertname:node_connect from:10.62.14.80 group:production instance:10.62.14.80:8080 job:example-random] map[summary:机器 10.62.14.80:8080 ，10.62.14.80，10.62.14.80] 2018-04-19 15:44:51.3912519 +0800 CST 0001-01-01 00:00:00 +0000 UTC <a href="http://ftsz-nb0078:9090/graph?g0.expr=host_to_host_http_connect+%3C=+0&amp;g0.tab=1%7D%5D">http://FTSZ-NB0078:9090/graph?g0.expr=host_to_host_http_connect+%3C%3D+0&amp;g0.tab=1}]</a><br>status:.status: firing<br>Receiver:.Receiver: team-X-mails<br>GroupLabels:.GroupLabels: map[alertname:node_connect]<br>CommonLabels:.CommonLabels: map[from:10.62.14.80 group:production instance:10.62.14.80:8080 job:example-random monitor:codelab-monitor alertname:node_connect]<br>CommonAnnotations:.CommonAnnotations: map[]<br>ExternalURL:.ExternalURL: <a href="http://ftsz-nb0078:9093/">http://FTSZ-NB0078:9093</a> </p><p>&lt;–&gt;</p><h2 id="alertmanager-邮件配置"><a href="#alertmanager-邮件配置" class="headerlink" title="alertmanager 邮件配置"></a>alertmanager 邮件配置</h2><p>注意一个，是否开启ssl。我们用的是http，所以把ssl关闭。我用163配置的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">smtp_smarthost:</span> <span class="string">&#x27;smtp.163.com:25&#x27;</span></span><br><span class="line">  <span class="attr">smtp_from:</span> <span class="string">&#x27;********@163.com&#x27;</span></span><br><span class="line">  <span class="attr">smtp_auth_username:</span> <span class="string">&#x27;*******@163.com&#x27;</span></span><br><span class="line">  <span class="attr">smtp_auth_password:</span> <span class="string">&#x27;*******&#x27;</span></span><br><span class="line">  <span class="attr">smtp_require_tls:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>一般本地测试的时候：<code>smtp_require_tls</code>这个可以是true，但是一般服务器不通外网可能不行。</p><h2 id="prometheus-与-alertmanager-降低日志级别"><a href="#prometheus-与-alertmanager-降低日志级别" class="headerlink" title="prometheus 与 alertmanager 降低日志级别"></a>prometheus 与 alertmanager 降低日志级别</h2><p>日志调到debug级别，两者都可以用<code>.alertmanager --help</code>或者<code>./promtheus --help</code>来查看所有可选项。</p><p>alertmanager:<code>./alertmanager --config.file=&#39;config163.yml&#39; --log.level=debug</code>;</p><p>prometheus: <code>./prometheus --web.enable-lifecycle --config.file=&#39;prometheus.yml&#39; --log.level=debug --web.external-url=http://localhost:9090/pro --web.route-prefix=pro</code></p><p>后面Prometheus的<code>--web.external-url=http://localhost:9090/pro</code>，<code>--web.route-prefix=pro</code>。这两个参数就类似加个服务号，如果有子路径做反向代理，Prometheus最好启动的时候就加上这两个。</p><p>比如在nginx用子路径做反向代理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       127.0.0.1:80;</span><br><span class="line">    #server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line"></span><br><span class="line">    #access_log  logs&#x2F;host.access.log  main;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root   html;</span><br><span class="line">        index  index.html index.htm;   </span><br><span class="line">    #    proxy_pass http:&#x2F;&#x2F;127.0.0.1:9090&#x2F;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location &#x2F;alertmanager&#x2F; &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;127.0.0.1:9093&#x2F;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location &#x2F;pro&#x2F; &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;127.0.0.1:9090&#x2F;pro&#x2F;;</span><br><span class="line">    &#125;</span><br><span class="line">    #error_page  404              &#x2F;404.html;</span><br><span class="line"></span><br><span class="line">    # redirect server error pages to the static page &#x2F;50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  &#x2F;50x.html;</span><br><span class="line">    location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>暂时就这些吧。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://prometheus.io/docs/prometheus/latest/getting_started/">GETTING STARTED prometheus.io</a><br><a href="https://segmentfault.com/a/1190000008695463">alertmanager邮件模版</a><br><a href="https://www.kancloud.cn/huyipow/prometheus/527563">alertmanager报警规则详解</a><br><a href="http://blog.51cto.com/xujpxm/2055970">Prometheus智能化报警流程避免邮件轰炸</a><br><a href="https://prometheus.io/blog/2016/03/03/custom-alertmanager-templates/">Custom Alertmanager Templates</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Prometheus-Grafana-搭建监控系统&quot;&gt;&lt;a href=&quot;#Prometheus-Grafana-搭建监控系统&quot; class=&quot;headerlink&quot; title=&quot;Prometheus+Grafana 搭建监控系统&quot;&gt;&lt;/a&gt;Prometheus+Grafana 搭建监控系统&lt;/h1&gt;&lt;p&gt;今天将第一版监控系统上线，过程整个就是一路坎坷。不过踩坑，填坑，确实也是为自己积攒了一些小经验。&lt;/p&gt;
&lt;h2 id=&quot;Prometheus的服务发现&quot;&gt;&lt;a href=&quot;#Prometheus的服务发现&quot; class=&quot;headerlink&quot; title=&quot;Prometheus的服务发现&quot;&gt;&lt;/a&gt;Prometheus的服务发现&lt;/h2&gt;&lt;p&gt;Prometheus的监控使用的是pull的模式，也就是每隔几秒钟去各个target采集一次metric。那么如果是多个target，如果是静态配置的话，那么就得在配置文件里面一个一个添加，尽管可以使用接口去更新配置文件，但如果服务太多，那工作量也很大。而且如果遇到微服务的情况并且容器化部署，那么可能ip地址都是随机改变的，那么就将更麻烦了。所以就有服务发现的模式出来了，有很多种实现的方式，consul，dns等等，针对我们现有的平台，我们选择了file_sd_config:&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;scrape_configs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# The job name is added as a label `job=&amp;lt;job_name&amp;gt;` to any timeseries scraped from this config.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;job_name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;prometheus&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# metrics_path defaults to &amp;#x27;/metrics&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# scheme defaults to &amp;#x27;http&amp;#x27;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;static_configs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;targets:&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&amp;#x27;localhost:9090&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;job_name:&lt;/span&gt;       &lt;span class=&quot;string&quot;&gt;&amp;#x27;rancher_network_monitor&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# Override the global default and scrape targets from this job every 5 seconds.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;scrape_interval:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;1m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;static_configs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;targets:&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&amp;#x27;192.168.7.3:8080&amp;#x27;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;#x27;192.168.8.90:8080&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;group:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;rancher_network_monitor&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;metrics_path:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/metrics&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;job_name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;filediscovery&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;scrape_interval:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;5s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;file_sd_configs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;files:&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&amp;#x27;/home/config/*.json&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;基于文件的方式，只需要在&lt;code&gt;/home/config&lt;/code&gt;目录下增加json文件就可以了，这也是在网上找的一个方案，所以我也记录下来，万一也能帮助到别人了&lt;/p&gt;</summary>
    
    
    
    <category term="监控" scheme="http://chenzhijun.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="Prometheus" scheme="http://chenzhijun.top/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 体验</title>
    <link href="http://chenzhijun.top/2022/05/01/prometheus-pre-use/"/>
    <id>http://chenzhijun.top/2022/05/01/prometheus-pre-use/</id>
    <published>2022-05-01T05:03:19.000Z</published>
    <updated>2023-03-21T13:58:38.795Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-监控"><a href="#Prometheus-监控" class="headerlink" title="Prometheus 监控"></a>Prometheus 监控</h1><p> Prometheus [普罗米修斯]主要的是从被监控项目中获取metrics。架构全景图：</p><p><img src="/images/qiniu/2018-04-16-14-32-33.png" alt="2018-04-16-14-32-33"></p><h2 id="安装与使用"><a href="#安装与使用" class="headerlink" title="安装与使用"></a>安装与使用</h2><p>Prometheus 的安装方式很多，我在本地是使用windows的包，Prometheus自打出生就支持docker所以，如果是*inx机器，建议安装docker然后体验。在本地我仅仅只需要执行目录下的<code>prometheus</code>就可以就可以进行体验了。Prometheus服务自身也会暴露出metrics，用来对自身进行指标收集和监控。在根目录最重要的一个配置文件是<code>prometheus.yml</code>，里面有三类大属性：global，rule_files，scrape_configs。具体的配置信息可以看这个：<br><a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/">https://prometheus.io/docs/prometheus/latest/configuration/configuration/</a>，也可以看看中文文档：<a href="https://songjiayang.gitbooks.io/prometheus/configuration/">https://songjiayang.gitbooks.io/prometheus/configuration/</a></p><span id="more"></span><p>在Prometheus的后台<code>localhost:9090</code>，选择一个 metric，然后点击 execute，之后就可以在下面的graph和console中看到输出的结果：</p><p><img src="/images/qiniu/2018-04-18-22-18-09.png" alt="2018-04-18-22-18-09"></p><p>在<code>status</code>下选择<code>Configuration</code>然后可以看到<code>prometheus.yml</code>里面的定义。在<code>Target</code>下可以看到监控的目标源的ip地址的信息。</p><h2 id="metrics-类型"><a href="#metrics-类型" class="headerlink" title="metrics 类型"></a>metrics 类型</h2><p>metrics 有四类，并且每一个类都有相应的客户端lib。在目标监控中需要暴露出相应的metrics给prometheus服务器进行收集，之后才能进行有效的信息分析，之后预警和监控。</p><p>Prometheus客户端lib提供4种主要的核心metric类型：Counter，Gauge，Histogram，Summary。</p><p><code>Counter</code>：数值类型，只能增加，不能减少。用户计数请求服务，完成任务数，发生错误数。不要用在可能会减少的地方</p><p><code>Gauge</code>：数值类型可以增加可以减少，变化的类型，类似于测量温度，当前内存使用量</p><p><code>Histogram</code>：直方图对样本进行观察（比如请求的持续时间，响应大小）。并将其统计到一个可配置的bucket中。一个Histogram包括：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;basename&gt;_bucket&#123;le=&quot;&lt;upper</span> <span class="string">inclusive</span> <span class="string">bound&gt;&quot;&#125;</span></span><br><span class="line"><span class="string">&lt;basename&gt;_sum</span></span><br><span class="line"><span class="string">&lt;basename&gt;_count：指的是相同的&lt;basename&gt;_bucket&#123;le=&quot;+Inf&quot;&#125;</span></span><br></pre></td></tr></table></figure><p><code>Summary</code>：主要用于表示一段时间内数据采样结果，类似Histogram</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;basename&gt;&#123;quantile=&quot;&lt;φ&gt;&quot;&#125;</span>   <span class="string">（0</span> <span class="string">≤</span> <span class="string">φ</span> <span class="string">≤</span> <span class="number">1</span><span class="string">）</span></span><br><span class="line"><span class="string">&lt;basename&gt;_sum</span></span><br><span class="line"><span class="string">&lt;basename&gt;_count</span></span><br></pre></td></tr></table></figure><p>metrics定义如：<code>&lt;metric name&gt;&#123;&lt;label name&gt;=&lt;label value&gt;, ...&#125;</code></p><p>metrics接口需要注意，每行要空行，最后以空行结束。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># HELP http_requests_total The total number of HTTP requests.</span><br><span class="line"># TYPE http_requests_total counter</span><br><span class="line">http_requests_total&#123;method&#x3D;&quot;post&quot;,code&#x3D;&quot;200&quot;&#125; 1027 1395066363000</span><br><span class="line">http_requests_total&#123;method&#x3D;&quot;post&quot;,code&#x3D;&quot;400&quot;&#125; 3 1395066363000</span><br><span class="line"></span><br><span class="line"># Escaping in label values:</span><br><span class="line">msdos_file_access_time_seconds&#123;path&#x3D;&quot;C:\\DIR\\FILE.TXT&quot;,error&#x3D;&quot;Cannot find file:\n\&quot;FILE.TXT\&quot;&quot;&#125; 1.458255915e9</span><br><span class="line"></span><br><span class="line"># Minimalistic line:</span><br><span class="line">metric_without_timestamp_and_labels 12.47</span><br><span class="line"></span><br><span class="line"># A weird metric from before the epoch:</span><br><span class="line">something_weird&#123;problem&#x3D;&quot;division by zero&quot;&#125; +Inf -3982045</span><br><span class="line"></span><br><span class="line"># A histogram, which has a pretty complex representation in the text format:</span><br><span class="line"># HELP http_request_duration_seconds A histogram of the request duration.</span><br><span class="line"># TYPE http_request_duration_seconds histogram</span><br><span class="line">http_request_duration_seconds_bucket&#123;le&#x3D;&quot;0.05&quot;&#125; 24054</span><br><span class="line">http_request_duration_seconds_bucket&#123;le&#x3D;&quot;0.1&quot;&#125; 33444</span><br><span class="line">http_request_duration_seconds_bucket&#123;le&#x3D;&quot;0.2&quot;&#125; 100392</span><br><span class="line">http_request_duration_seconds_bucket&#123;le&#x3D;&quot;0.5&quot;&#125; 129389</span><br><span class="line">http_request_duration_seconds_bucket&#123;le&#x3D;&quot;1&quot;&#125; 133988</span><br><span class="line">http_request_duration_seconds_bucket&#123;le&#x3D;&quot;+Inf&quot;&#125; 144320</span><br><span class="line">http_request_duration_seconds_sum 53423</span><br><span class="line">http_request_duration_seconds_count 144320</span><br><span class="line"></span><br><span class="line"># Finally a summary, which has a complex representation, too:</span><br><span class="line"># HELP rpc_duration_seconds A summary of the RPC duration in seconds.</span><br><span class="line"># TYPE rpc_duration_seconds summary</span><br><span class="line">rpc_duration_seconds&#123;quantile&#x3D;&quot;0.01&quot;&#125; 3102</span><br><span class="line">rpc_duration_seconds&#123;quantile&#x3D;&quot;0.05&quot;&#125; 3272</span><br><span class="line">rpc_duration_seconds&#123;quantile&#x3D;&quot;0.5&quot;&#125; 4773</span><br><span class="line">rpc_duration_seconds&#123;quantile&#x3D;&quot;0.9&quot;&#125; 9001</span><br><span class="line">rpc_duration_seconds&#123;quantile&#x3D;&quot;0.99&quot;&#125; 76656</span><br><span class="line">rpc_duration_seconds_sum 1.7560473e+07</span><br><span class="line">rpc_duration_seconds_count 2693</span><br></pre></td></tr></table></figure><h2 id="Exporter"><a href="#Exporter" class="headerlink" title="Exporter"></a>Exporter</h2><p>自定义Exporter其实就是暴露一个metrics接口让Prometheus服务器进行收集。所以只需要返回像上面的例子一样的文本数据就可以了。<br>官方推荐首先采用<code>Historam</code>。可以导入相应的客户端metric然后进行导入。</p><h2 id="继续学习"><a href="#继续学习" class="headerlink" title="继续学习"></a>继续学习</h2><ol><li>Prometheus 的内置函数</li><li>Prometheus 自定发现监控目标</li><li>报警规则，报警方式</li><li>图表</li><li>对接granafa</li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Prometheus-监控&quot;&gt;&lt;a href=&quot;#Prometheus-监控&quot; class=&quot;headerlink&quot; title=&quot;Prometheus 监控&quot;&gt;&lt;/a&gt;Prometheus 监控&lt;/h1&gt;&lt;p&gt; Prometheus [普罗米修斯]主要的是从被监控项目中获取metrics。架构全景图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/qiniu/2018-04-16-14-32-33.png&quot; alt=&quot;2018-04-16-14-32-33&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装与使用&quot;&gt;&lt;a href=&quot;#安装与使用&quot; class=&quot;headerlink&quot; title=&quot;安装与使用&quot;&gt;&lt;/a&gt;安装与使用&lt;/h2&gt;&lt;p&gt;Prometheus 的安装方式很多，我在本地是使用windows的包，Prometheus自打出生就支持docker所以，如果是*inx机器，建议安装docker然后体验。在本地我仅仅只需要执行目录下的&lt;code&gt;prometheus&lt;/code&gt;就可以就可以进行体验了。Prometheus服务自身也会暴露出metrics，用来对自身进行指标收集和监控。在根目录最重要的一个配置文件是&lt;code&gt;prometheus.yml&lt;/code&gt;，里面有三类大属性：global，rule_files，scrape_configs。具体的配置信息可以看这个：&lt;br&gt;&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/configuration/&quot;&gt;https://prometheus.io/docs/prometheus/latest/configuration/configuration/&lt;/a&gt;，也可以看看中文文档：&lt;a href=&quot;https://songjiayang.gitbooks.io/prometheus/configuration/&quot;&gt;https://songjiayang.gitbooks.io/prometheus/configuration/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="监控" scheme="http://chenzhijun.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="prometheus" scheme="http://chenzhijun.top/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>OpenShift 专用 Router 实操</title>
    <link href="http://chenzhijun.top/2022/02/27/openshift-router/"/>
    <id>http://chenzhijun.top/2022/02/27/openshift-router/</id>
    <published>2022-02-27T14:53:35.000Z</published>
    <updated>2023-03-17T07:02:39.012Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Openshift-专用-Router-实操"><a href="#Openshift-专用-Router-实操" class="headerlink" title="Openshift 专用 Router 实操"></a>Openshift 专用 Router 实操</h1><p>由于某些服务在实际业务场景中非常重要，或者为了与其它业务进行入口区分，因此会产生专属 router（Ingress）的需求，在 openshift 的实际操作可以这样：</p><span id="more"></span> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">确保 sa 为 router 名字的有scc hostnetwork 权限</span></span><br><span class="line">oc adm policy add-scc-to-user hostnetwork -z router</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建一个 router ，指定 router-iot 为名字</span></span><br><span class="line">oc adm router router-iot --images=&#x27;harbor.uat.chenzhijun.top/openshift3/ose-haproxy-router:v3.11.170&#x27; --selector=&#x27;node-role.kubernetes.io/iot-router=true&#x27; --labels=&#x27;router=iot&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置 router 的 ns 标签</span></span><br><span class="line">oc set env dc/router-iot NAMESPACE_LABELS=&quot;router=iot”</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置 ns 标签</span></span><br><span class="line">oc label namespace demo “router=iot”</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置某个 ns 下的 router 必须有 cluster-reader 权限</span></span><br><span class="line">oc adm policy add-cluster-role-to-user cluster-reader system:serviceaccount:demo:router</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">https://docs.openshift.com/container-platform/3.11/admin_guide/manage_rbac.html</span></span><br><span class="line">oc adm policy add-role-to-user cluster-reader system:serviceaccount:demo:router</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">修改 router 监听端口</span></span><br><span class="line">oc adm router --replicas=0 --ports=&#x27;10080:10080,10443:10443&#x27; </span><br><span class="line">oc set env dc/router ROUTER_SERVICE_HTTP_PORT=10080 ROUTER_SERVICE_HTTPS_PORT=10443</span><br><span class="line">oc scale dc/router --replicas=1</span><br><span class="line"></span><br><span class="line">iptables -A OS_FIREWALL_ALLOW -p tcp --dport 10080 -j ACCEPT</span><br><span class="line">iptables -A OS_FIREWALL_ALLOW -p tcp --dport 10443 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">暴露一个 route</span></span><br><span class="line">oc expose service myservice --hostname=owner.example.test</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">允许泛域名</span></span><br><span class="line">oc set env dc/router ROUTER_ALLOW_WILDCARD_ROUTES=true</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">修改泛域名子域</span></span><br><span class="line">oc adm router --force-subdomain=&#x27;$&#123;name&#125;-$&#123;namespace&#125;.apps.example.com&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Openshift-专用-Router-实操&quot;&gt;&lt;a href=&quot;#Openshift-专用-Router-实操&quot; class=&quot;headerlink&quot; title=&quot;Openshift 专用 Router 实操&quot;&gt;&lt;/a&gt;Openshift 专用 Router 实操&lt;/h1&gt;&lt;p&gt;由于某些服务在实际业务场景中非常重要，或者为了与其它业务进行入口区分，因此会产生专属 router（Ingress）的需求，在 openshift 的实际操作可以这样：&lt;/p&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Openshift 专属机方案</title>
    <link href="http://chenzhijun.top/2022/02/17/openshift-server-exclusive/"/>
    <id>http://chenzhijun.top/2022/02/17/openshift-server-exclusive/</id>
    <published>2022-02-17T12:59:00.000Z</published>
    <updated>2023-03-17T07:02:37.252Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Openshift-专属机方案"><a href="#Openshift-专属机方案" class="headerlink" title="Openshift 专属机方案"></a>Openshift 专属机方案</h1><span id="more"></span> <h2 id="专属机方案-Kubernetes-一）"><a href="#专属机方案-Kubernetes-一）" class="headerlink" title="专属机方案-Kubernetes(一）"></a>专属机方案-Kubernetes(一）</h2><ol><li>给所有主机新增 role:  [<code>node-role.kubernetes.io/&#123;xxxxx&#125;:](http://node-role.kubernetes.io/%7Bxxxxx%7D:) &quot;true&quot;</code>;这样在 oc get nodes 的时候就会多出一个 <code>xxxxx</code> 的角色；</li><li>给相关的主机打上污点：<code>oc adm nodes $i com.cmft.exclusive=xxxxx:NoSchedule</code> / <code>kubectl taint node com.cmft.exclusive=xxxxx:NoSchedule</code></li><li>让所有的业务 pod 增加主机调度和容忍，<code>nodeSelector</code>,<code>tolerations</code>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - image: harbor.uat.chenzhijun.top/base/nginx:latest</span><br><span class="line">    name: nginx</span><br><span class="line">    resources: &#123;&#125;</span><br><span class="line">  nodeSelector: </span><br><span class="line">    node-role.kubernetes.io/compute: <span class="string">&quot;true&quot;</span></span><br><span class="line">    node-role.kubernetes.io/xxxxx: <span class="string">&quot;true&quot;</span></span><br><span class="line">  tolerations: </span><br><span class="line">  - key: <span class="string">&quot;com.cmft.exclusive&quot;</span></span><br><span class="line">    operator: <span class="string">&quot;Equal&quot;</span></span><br><span class="line">    value: <span class="string">&quot;xxxxx&quot;</span></span><br><span class="line">    effect: <span class="string">&quot;NoSchedule&quot;</span></span><br></pre></td></tr></table></figure><h2 id="专属机方案-Openshift（二）"><a href="#专属机方案-Openshift（二）" class="headerlink" title="专属机方案-Openshift（二）"></a>专属机方案-Openshift（二）</h2><ol><li> 选定主机并且将主机的 label 进行修改，将 label 名改为 [<code>node-role.kubernetes.io](node-role.kubernetes.io/shimo)/xxx=true</code>，这样在 <code>oc get nodes</code> 时可以看到 <code>xxx</code> 的角色的主机；</li><li> project（namespace）在创建的时候可以使用<code>oc adm new-project demo --node-selector=&#39;node-role.kubernetes.io/xxx=true&#39;</code> 这样默认 project 会只调度到selector 的主机上。</li><li>如果是已存在的项目：<code>oc patch namespace demo -p &#39;&#123;&quot;metadata&quot;:&#123;&quot;annotations&quot;:&#123;&quot;openshift.io/node-selector&quot;:&quot;node-role.kubernetes.io/xxx=true&quot;&#125;&#125;&#125;&#39;</code> 可以进行 patch 操作；如果有多个 label 可以进行：<code>oc patch namespace demo -p &#39;&#123;&quot;metadata&quot;:&#123;&quot;annotations&quot;:&#123;&quot;openshift.io/node-selector&quot;:&quot;node-role.kubernetes.io/xxx1=true,node-role.kubernetes.io/xxx2=true&quot;&#125;&#125;&#125;&#39;</code></li><li>如果需要设置全局默认调度可以修改 master 配置文件：<code>/etc/origin/master/master-config.yaml</code>  <code>projectConfig.defaultNodeSelector</code> 然后重启 api 和 controller：<code>master-restart api</code>&amp;&amp;<code>master-restart api</code></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Openshift-专属机方案&quot;&gt;&lt;a href=&quot;#Openshift-专属机方案&quot; class=&quot;headerlink&quot; title=&quot;Openshift 专属机方案&quot;&gt;&lt;/a&gt;Openshift 专属机方案&lt;/h1&gt;</summary>
    
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://chenzhijun.top/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>nginx-and-haproxy-config</title>
    <link href="http://chenzhijun.top/2021/10/06/nginx-and-haproxy-config/"/>
    <id>http://chenzhijun.top/2021/10/06/nginx-and-haproxy-config/</id>
    <published>2021-10-06T14:24:08.000Z</published>
    <updated>2023-03-17T06:41:55.763Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nginx-和-Haproxy-配置文件"><a href="#Nginx-和-Haproxy-配置文件" class="headerlink" title="Nginx 和 Haproxy 配置文件"></a>Nginx 和 Haproxy 配置文件</h1><p>目标：通过 Nginx 和 Haproxy 的常用配置实现服务的反向代理。</p><span id="more"></span><h2 id="NGINX-配置"><a href="#NGINX-配置" class="headerlink" title="NGINX 配置"></a>NGINX 配置</h2><p>nginx 常用的配置文件一般处于 <code>/etc/nginx/conf/nginx.conf</code>。只有改这个文件之后执行 <code>nginx -s reload</code> 才可以动态加载，如果是 include 下面的，不会生效。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">#daemon off;</span><br><span class="line">user root root;</span><br><span class="line">worker_processes auto;</span><br><span class="line">worker_cpu_affinity auto;</span><br><span class="line">error_log &#x2F;var&#x2F;log&#x2F;ingress-gateway&#x2F;error.log;</span><br><span class="line">events &#123;</span><br><span class="line">  use epoll;</span><br><span class="line">  worker_connections 20000;</span><br><span class="line">  multi_accept on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#TCP 方式</span><br><span class="line">stream &#123;</span><br><span class="line">  upstream env1-lb-tcp &#123;</span><br><span class="line">    server 10.244.13.227:19080 weight&#x3D;1 max_fails&#x3D;1 fail_timeout&#x3D;10s</span><br><span class="line">  &#125;</span><br><span class="line">  server &#123;</span><br><span class="line">    listen 19080;</span><br><span class="line">    proxy_pass env1-lb-tcp;</span><br><span class="line">    proxy_connect_timeout 2s;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># HTTP 方式</span><br><span class="line">http &#123;</span><br><span class="line">  server_tokens off;</span><br><span class="line">  sendfile on;</span><br><span class="line">  tcp_nodelay on;</span><br><span class="line">  tcp_nopush on;</span><br><span class="line">  port_in_redirect off;</span><br><span class="line">  keepalive_timeout 0;</span><br><span class="line">  underscores_in_headers on;</span><br><span class="line">  charset utf-8;</span><br><span class="line"></span><br><span class="line">  include mime.types;</span><br><span class="line">  lua_use_default_type off;</span><br><span class="line"></span><br><span class="line">  log_format main &#39;[$time_local]&#96;$http_x_up_calling_line_id&#96;&quot;$request&quot;&#96;&quot;$http_user_agent&quot;&#96;$staTus&#96;[$remote_addr]&#96;$http_x_log_uid&#96;&quot;$http_referer&quot;&#96;$request_time&#96;$body_bytes_sent&#96;$http_x_forwarded_proto&#96;$http_x_forwarded_for&#96;$host&#96;$http_cookie&#96;$upstream_response_time&#96;xd&#39;;</span><br><span class="line">  client_header_buffer_size 4k;</span><br><span class="line">  large_client_header_buffers 8 16k;</span><br><span class="line">  server_names_hash_bucket_size 128;</span><br><span class="line">  client_max_body_size 0m;</span><br><span class="line"></span><br><span class="line">  client_header_timeout 30s;</span><br><span class="line">  client_body_timeout 180s;</span><br><span class="line">  send_timeout 180s;</span><br><span class="line">  lingering_close off;</span><br><span class="line"></span><br><span class="line">  upstream smp-env-http-di1.19089.gts-seata-metrics.up &#123;</span><br><span class="line">    server 10.244.13.227:19089 weight&#x3D;1 max_fails&#x3D;1 fail_timeout&#x3D;10s;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  server &#123;</span><br><span class="line">    listen 19089;</span><br><span class="line">    server_name smp-env-http-di1;</span><br><span class="line"></span><br><span class="line">    access_log &#x2F;var&#x2F;log&#x2F;ingress-gateway&#x2F;vhost_access.log main;</span><br><span class="line">    error_log &#x2F;var&#x2F;log&#x2F;ingress-gateway&#x2F;vhost_error.log;</span><br><span class="line">    # for support ssl        # for support data zip        # for support backend server.</span><br><span class="line">    # 后端default_backend的Web服务器可以通过X-Forwarded-For获取用户真实IP</span><br><span class="line">    #proxy_redirect                  off;</span><br><span class="line">    #proxy_next_upstream             error timeout invalid_header http_500 http_502 http_503 http_504;</span><br><span class="line">    proxy_headers_hash_bucket_size 6400;</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line">    error_page 500 502 503 504 &#x2F;50x.html;</span><br><span class="line">    location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">      root html;</span><br><span class="line">    &#125;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line"></span><br><span class="line">      proxy_ignore_client_abort on;</span><br><span class="line">      proxy_pass http:&#x2F;&#x2F;smp-env-http-di1.19089.gts-seata-metrics.up&#x2F;;</span><br><span class="line">      proxy_connect_timeout 2s;</span><br><span class="line">      proxy_set_header Host $http_host;</span><br><span class="line">      proxy_http_version 1.1;</span><br><span class="line">      proxy_set_header Connection &quot;&quot;;</span><br><span class="line">      proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">      proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">      proxy_buffer_size 128k;</span><br><span class="line">      proxy_buffers 4 256k;</span><br><span class="line">      proxy_busy_buffers_size 256k;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Haproxy-配置"><a href="#Haproxy-配置" class="headerlink" title="Haproxy 配置"></a>Haproxy 配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">global</span><br><span class="line">  daemon</span><br><span class="line">  log  127.0.0.1 local0 info</span><br><span class="line">  tune.ssl.default-dh-param 2048</span><br><span class="line">  maxconn  20000</span><br><span class="line">  pidfile  &#x2F;app&#x2F;haproxy&#x2F;run&#x2F;haproxy.pid</span><br><span class="line">  stats  socket &#x2F;app&#x2F;haproxy&#x2F;lib&#x2F;haproxy&#x2F;stats</span><br><span class="line">  tune.bufsize  131072</span><br><span class="line">  user nginx</span><br><span class="line">  group nginx</span><br><span class="line">  tune.ssl.default-dh-param 2048</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">  log  global</span><br><span class="line">  maxconn  10000</span><br><span class="line">  mode  http</span><br><span class="line">  option  dontlog-normal</span><br><span class="line">  option  http-server-close</span><br><span class="line">  retries  3</span><br><span class="line">  stats  enable</span><br><span class="line">  timeout  http-request 10s</span><br><span class="line">  timeout  queue 1m</span><br><span class="line">  timeout  connect 10s</span><br><span class="line">  timeout  client 1m</span><br><span class="line">  timeout  server 30m</span><br><span class="line">  timeout  check 10s</span><br><span class="line"></span><br><span class="line">listen Stats</span><br><span class="line">  bind 0.0.0.0:10000</span><br><span class="line">  mode http</span><br><span class="line">  stats enable</span><br><span class="line">  stats uri &#x2F;</span><br><span class="line">  stats refresh 5s</span><br><span class="line">  stats show-node</span><br><span class="line">  stats show-legends</span><br><span class="line">  stats hide-version</span><br><span class="line"></span><br><span class="line">frontend https_frontend</span><br><span class="line">  #bind *:80</span><br><span class="line">  mode http</span><br><span class="line">  bind *:443 ssl crt  &#x2F;app&#x2F;haproxy&#x2F;cert&#x2F;chenzhijun.top.pem</span><br><span class="line">  acl secure dst_port eq 443</span><br><span class="line">  http-request add-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">  #redirect scheme https if !&#123; ssl_fc &#125;</span><br><span class="line">  rspadd Strict-Transport-Security:\ max-age&#x3D;31536000;\ includeSubDomains;\ preload</span><br><span class="line">  rsprep ^Set-Cookie:\ (.*) Set-Cookie:\ \1;\ Secure if secure</span><br><span class="line">  option httpclose</span><br><span class="line">  default_backend web_server</span><br><span class="line"></span><br><span class="line">backend web_server</span><br><span class="line">  mode http</span><br><span class="line">  balance roundrobin</span><br><span class="line">  http-request add-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">  cookie SERVERID insert indirect nocache</span><br><span class="line">  server lb1 10.0.0.1:80 check port 80 inter 10s fastinter 2s downinter 3s rise 3 fall 3</span><br><span class="line">  server lb2 10.0.0.2:80 check port 80 inter 10s fastinter 2s downinter 3s rise 3 fall 3</span><br><span class="line"></span><br><span class="line">listen harbor-ceph</span><br><span class="line">  bind 0.0.0.0:80</span><br><span class="line">  mode tcp</span><br><span class="line">  maxconn 4086</span><br><span class="line">  server s1 oss.chenzhijun.top:80</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Nginx-和-Haproxy-配置文件&quot;&gt;&lt;a href=&quot;#Nginx-和-Haproxy-配置文件&quot; class=&quot;headerlink&quot; title=&quot;Nginx 和 Haproxy 配置文件&quot;&gt;&lt;/a&gt;Nginx 和 Haproxy 配置文件&lt;/h1&gt;&lt;p&gt;目标：通过 Nginx 和 Haproxy 的常用配置实现服务的反向代理。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
